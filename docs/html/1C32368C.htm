<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SystemPerformanceOptimizationContext Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SystemPerformanceOptimizationContext class" /><meta name="System.Keywords" content="Novacta.Analytics.Advanced.SystemPerformanceOptimizationContext class" /><meta name="Microsoft.Help.F1" content="Novacta.Analytics.Advanced.SystemPerformanceOptimizationContext" /><meta name="Microsoft.Help.Id" content="T:Novacta.Analytics.Advanced.SystemPerformanceOptimizationContext" /><meta name="Description" content="Represents a Cross-Entropy context in which the optimization of the performance of a system is obtained by exploiting a instance." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Novacta.Analytics.Advanced" /><meta name="file" content="1C32368C" /><meta name="guid" content="1C32368C" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Novacta.Analytics Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a4ea75a2-ef53-4ea2-a7f4-b493a50f90b3.htm" title="Novacta.Analytics Documentation" tocid="roottoc">Novacta.Analytics Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/D9FC3C8F.htm" title="Novacta.Analytics namespaces" tocid="D9FC3C8F">Novacta.Analytics namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/F249DE1E.htm" title="Novacta.Analytics.Advanced" tocid="F249DE1E">Novacta.Analytics.Advanced</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1C32368C.htm" title="SystemPerformanceOptimizationContext Class" tocid="1C32368C">SystemPerformanceOptimizationContext Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/25271985.htm" title="SystemPerformanceOptimizationContext Constructor " tocid="25271985">SystemPerformanceOptimizationContext Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/A11F267A.htm" title="SystemPerformanceOptimizationContext Properties" tocid="A11F267A">SystemPerformanceOptimizationContext Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/C305BC93.htm" title="SystemPerformanceOptimizationContext Methods" tocid="C305BC93">SystemPerformanceOptimizationContext Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>SystemPerformanceOptimizationContext Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Represents a Cross-Entropy context in which the 
             optimization of the performance of a system
             is obtained by exploiting 
             a <a href="E252E84.htm">SystemPerformanceOptimizer</a> instance.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST1C32368C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="F04A1B18.htm">Novacta.Analytics.Advanced<span id="LST1C32368C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CrossEntropyContext</a><br />    <span class="selflink">Novacta.Analytics.Advanced<span id="LST1C32368C_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SystemPerformanceOptimizationContext</span><br />      <a href="EB7894F3.htm">Novacta.Analytics.Advanced<span id="LST1C32368C_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CategoricalEntailmentEnsembleOptimizationContext</a><br />      <a href="236BBBCF.htm">Novacta.Analytics.Advanced<span id="LST1C32368C_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CombinationOptimizationContext</a><br />      <a href="A8203153.htm">Novacta.Analytics.Advanced<span id="LST1C32368C_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ContinuousOptimizationContext</a><br />      <a href="240B10D.htm">Novacta.Analytics.Advanced<span id="LST1C32368C_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PartitionOptimizationContext</a><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="F249DE1E.htm">Novacta.Analytics.Advanced</a><br />
    <strong>Assembly:</strong>
   Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">SystemPerformanceOptimizationContext</span> : <span class="identifier">CrossEntropyContext</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">SystemPerformanceOptimizationContext</span>
	<span class="keyword">Inherits</span> <span class="identifier">CrossEntropyContext</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SystemPerformanceOptimizationContext</span> <span class="keyword">abstract</span> : <span class="keyword">public</span> <span class="identifier">CrossEntropyContext</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">SystemPerformanceOptimizationContext</span> =  
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">CrossEntropyContext</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">SystemPerformanceOptimizationContext</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="25271985.htm">SystemPerformanceOptimizationContext</a></td><td><div class="summary">
            Initializes a new instance of the 
            <span class="selflink">SystemPerformanceOptimizationContext</span> class 
            having the specified state dimension, initial parameter, 
            optimization goal, and range of iterations.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="66F284A1.htm">EliteSampleDefinition</a></td><td><div class="summary">
            Gets the elite sample definition for this context.
            </div> (Overrides <a href="229D566.htm">CrossEntropyContext<span id="LST1C32368C_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>EliteSampleDefinition</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="1FE43CBC.htm">InitialParameter</a></td><td><div class="summary">
            Gets the parameter initially exploited to sample from 
            the state-space of the system defined by this context.
            </div> (Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="CB60FB7E.htm">MaximumNumberOfIterations</a></td><td><div class="summary">
            Gets the maximum number of iterations 
            allowed by this context. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="44E3AF08.htm">MinimumNumberOfIterations</a></td><td><div class="summary">
            Gets the minimum number of iterations 
            required by this context.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="847A8F0F.htm">OptimizationGoal</a></td><td><div class="summary">
            Gets a constant specifying if the performance function 
            in this context must be minimized or maximized.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6BFCB280.htm">StateDimension</a></td><td><div class="summary">
            Gets or sets the dimension of a vector representing a 
            system's state
            when 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executes in this
            context.
            </div> (Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="876F94ED.htm">TraceExecution</a></td><td><div class="summary">
            Gets or sets a value indicating whether the 
            execution of this context must be traced.
            </div> (Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank" rel="noopener noreferrer">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="9B360782.htm">GetOptimalState</a></td><td><div class="summary">
            Gets the argument that optimizes the performance function
            in this context, according to the specified 
            Cross-Entropy sampling parameter.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank" rel="noopener noreferrer">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="E2DFB2BB.htm">OnExecutedIteration</a></td><td><div class="summary">
            Called after completion of each iteration of 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this
            context.
            </div> (Overrides <a href="62A32EE8.htm">CrossEntropyContext<span id="LST1C32368C_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OnExecutedIteration(Int32, DoubleMatrix, LinkedList<span id="LST1C32368C_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1C32368C_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, LinkedList<span id="LST1C32368C_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DoubleMatrix<span id="LST1C32368C_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="6D600898.htm">PartialSample</a></td><td><div class="summary">
            Draws the specified subset of a sample from a distribution 
            characterized by the given parameter, using the stated
            random number generator. Used when executing the sampling
            step of a  <a href="298402DD.htm">CrossEntropyProgram</a> running
            in this context.
            </div> (Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="1AF89526.htm">Performance</a></td><td><div class="summary">
            Defines the performance of a specified state
            in this context.
            </div> (Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="DB205520.htm">SmoothParameter</a></td><td><div class="summary">
             Provides the smoothing of the updated sampling parameter
             of a <a href="E252E84.htm">SystemPerformanceOptimizer</a>  
             executing in this context.        
             </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="F068CBEA.htm">StopAtIntermediateIteration</a></td><td><div class="summary">
            Specifies conditions 
            under which 
            a <a href="E252E84.htm">SystemPerformanceOptimizer</a> executing in 
            this context should be considered as terminated after
            completing an intermediate iteration.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="94DC9B0B.htm">StopExecution</a></td><td><div class="summary">
            Specifies conditions 
            under which 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this 
            context should be considered 
            as terminated.
            </div> (Overrides <a href="CFD7B8A4.htm">CrossEntropyContext<span id="LST1C32368C_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>StopExecution(Int32, LinkedList<span id="LST1C32368C_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1C32368C_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, LinkedList<span id="LST1C32368C_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DoubleMatrix<span id="LST1C32368C_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank" rel="noopener noreferrer">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="CD947DDD.htm">UpdateLevel</a></td><td><div class="summary">
            Updates the performance level for the current iteration 
            of a  <a href="298402DD.htm">CrossEntropyProgram</a> executing in
            this context
            and determines the corresponding elite sample.
            </div> (Overrides <a href="52F57EB0.htm">CrossEntropyContext<span id="LST1C32368C_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_18?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>UpdateLevel(DoubleMatrix, DoubleMatrix, EliteSampleDefinition, Double, DoubleMatrix<span id="LST1C32368C_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_19?cpp=%");</script>)</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="4AE2243.htm">UpdateParameter</a></td><td><div class="summary">
            Updates the 
            sampling parameter attending the generation 
            of the sample in the next iteration of a 
             <a href="298402DD.htm">CrossEntropyProgram</a> executing in 
             this context.
            </div> (Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID6RBSection" class="collapsibleSection"><p>
             A <a href="E252E84.htm">SystemPerformanceOptimizer</a> is executed by calling its 
             <a href="E8269C07.htm">Optimize</a> 
             method. This is a 
             template method, in the sense that it defines the 
             invariant parts of a Cross-Entropy program for system's performance
             optimization.
             Such method relies on an instance of 
             class <span class="selflink">SystemPerformanceOptimizationContext</span>, which is 
             passed as a parameter to it and specifies the 
             <em>primitive operations</em> 
             of the template method, i.e. 
             those varying steps of the algorithm that depends 
             on the problem under study.
             </p><p>
             Class <span class="selflink">SystemPerformanceOptimizationContext</span> thoroughly 
             defines the system whose performance must be optimized, and supplies the 
             primitive operations as abstract or virtual methods, that its 
             subclasses will override to provide the concrete 
             behavior of the optimizer.
             </p><p>
             A Cross-Entropy optimizer is designed to identify the 
             optimal arguments at which the performance function of a
             complex system reaches
             its minimum or maximum value.
             To get the optimal state, the system's state-space 
             <img alt="LaTeX equation" src="../media/latex_4785.svg" style="vertical-align: -0px" /> is traversed iteratively 
             by sampling, at each iteration, from 
             a specific density function, member of a parametric 
             family  
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4786.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_4787.svg" style="vertical-align: -1px" /> is a 
             vector representing 
             a possible state of the system, 
             and <img alt="LaTeX equation" src="../media/latex_4788.svg" style="vertical-align: -1px" /> is the set of 
             allowable values for parameter <img alt="LaTeX equation" src="../media/latex_4789.svg" style="vertical-align: -0px" />.
             The parameter exploited at a given iteration <img alt="LaTeX equation" src="../media/latex_4790.svg" style="vertical-align: -0px" />
             is referred to
             as the <i>reference</i> parameter of such iteration and indicated
             as <img alt="LaTeX equation" src="../media/latex_4791.svg" style="vertical-align: -2px" />.
             A minimum number
             of iterations, say <img alt="LaTeX equation" src="../media/latex_4792.svg" style="vertical-align: -0px" />, must be executed, while a 
             number of them up to a maximum, say <img alt="LaTeX equation" src="../media/latex_4793.svg" style="vertical-align: -0px" />, is allowed.
             </p><p>
             The parametric space <img alt="LaTeX equation" src="../media/latex_4794.svg" style="vertical-align: -1px" /> should 
             include a parameter under which all possible states must have 
             a real chance of being selected: this parameter
             must be specified as the initial <i>reference</i> parameter
             <img alt="LaTeX equation" src="../media/latex_4795.svg" style="vertical-align: -2px" />.
             </p><p>
             A Cross-Entropy optimizer can solve one of the 
             following optimization programs:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4796.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_4797.svg" style="vertical-align: -0px" /> is the state space 
             of the system and 
             <img alt="LaTeX equation" src="../media/latex_4798.svg" style="vertical-align: -4px" /> is the function 
             returning the system performance at state  
             <img alt="LaTeX equation" src="../media/latex_4799.svg" style="vertical-align: -0px" />.
             </p><p>
             At instantiation, the constructor of 
             a <span class="selflink">SystemPerformanceOptimizationContext</span> object
             will receive information about the optimization under study by
             means of parameters representing <img alt="LaTeX equation" src="../media/latex_4800.svg" style="vertical-align: -2px" />,
             <img alt="LaTeX equation" src="../media/latex_4801.svg" style="vertical-align: -0px" />, <img alt="LaTeX equation" src="../media/latex_4802.svg" style="vertical-align: -0px" />, and a constant stating 
             if the optimization goal is a maximization or a minimization.
             </p><p>
             After construction, property 
             <a href="1FE43CBC.htm">InitialParameter</a> represents 
             <img alt="LaTeX equation" src="../media/latex_4803.svg" style="vertical-align: -2px" />, while <img alt="LaTeX equation" src="../media/latex_4804.svg" style="vertical-align: -0px" />
             and <img alt="LaTeX equation" src="../media/latex_4805.svg" style="vertical-align: -0px" />
             can be inspected, respectively, via properties
             <a href="44E3AF08.htm">MinimumNumberOfIterations</a> and
             <a href="CB60FB7E.htm">MaximumNumberOfIterations</a>. Lastly, 
             property 
             <a href="847A8F0F.htm">OptimizationGoal</a> 
             signals that the performance function
             must be maximized if it 
             evaluates to the constant <a href="D5F83433.htm">Maximization</a>, or 
             that a minimization is requested
             if it evaluates to
             the constant <a href="D5F83433.htm">Minimization</a>.
             </p><p><b>Implementing a context for combinatorial 
             and multi-extremal optimization</b></p><p>
             The Cross-Entropy method 
             provides an iterative multi step procedure. At each 
             iteration <img alt="LaTeX equation" src="../media/latex_4806.svg" style="vertical-align: -0px" />, the <i>sampling step</i>
             is executed in order to generate diverse candidate states of 
             the system, sampled from a distribution 
             characterized by the <i>reference parameter</i> of the iteration,
             say <img alt="LaTeX equation" src="../media/latex_4807.svg" style="vertical-align: -2px" />. 
             Such sample is thus exploited in the <i>updating step</i> as follows.
             Firstly, an extreme level 
             <img alt="LaTeX equation" src="../media/latex_4808.svg" style="vertical-align: -2px" /> is computed to define 
             the <i>elite</i> sampled points, i.e. those points
             having the lowest performances (less than <img alt="LaTeX equation" src="../media/latex_4809.svg" style="vertical-align: -2px" />)
             in case of a minimization,
             or the highest ones in case of a maximization (greater than
             <img alt="LaTeX equation" src="../media/latex_4810.svg" style="vertical-align: -2px" />).
             Secondly, a new <i>reference</i> 
             parameter <img alt="LaTeX equation" src="../media/latex_4811.svg" style="vertical-align: -2px" /> is 
             identified to modify the distribution from which the samples 
             will be obtained in the next iteration: such modification is
             based on the <i>elite</i> sample points only, in order to improve 
             the probability of sampling relevant states, i.e. those 
             states corresponding to the performance excesses of interest
             (See the documentation of 
             class <a href="298402DD.htm">CrossEntropyProgram</a> for a 
             thorough discussion of the Cross-Entropy method). 
             </p><p>
             When the Cross-Entropy method is applied in an optimization
             context, a final <i>optimizing step</i> is executed, in which  
             the argument corresponding to the searched extremum  
             is effectively identified.
             </p><p>These steps must be implemented as follows.</p><p><b><i>Sampling step</i></b></p><p>
             Since class <span class="selflink">SystemPerformanceOptimizationContext</span> derives 
             from <a href="F04A1B18.htm">CrossEntropyContext</a>,  
             property <a href="6BFCB280.htm">StateDimension</a> 
             will return the dimension of the points in the Cross-Entropy samples.  
             If a state <img alt="LaTeX equation" src="../media/latex_4812.svg" style="vertical-align: -0px" /> of the system 
             can be represented as a vector of length 
             <img alt="LaTeX equation" src="../media/latex_4813.svg" style="vertical-align: -0px" />, as in 
             <img alt="LaTeX equation" src="../media/latex_4814.svg" style="vertical-align: -4px" />, then 
             <img alt="LaTeX equation" src="../media/latex_4815.svg" style="vertical-align: -0px" /> should be returned.
             In addition, method <a href="6D600898.htm">PartialSample(<span id="LST1C32368C_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_20?cpp=array&lt;");</script>Double<span id="LST1C32368C_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_21?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Tuple<span id="LST1C32368C_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_22?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32<span id="LST1C32368C_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_23?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, RandomNumberGenerator, DoubleMatrix, Int32)</a> 
             must be overriden to determine how to draw the sample locally 
             to a given thread when processing in parallel the sampling step.
             </p><p><b><i>Updating step</i></b></p><p>
             Class <span class="selflink">SystemPerformanceOptimizationContext</span> overrides 
             for you the methods 
             required for ordering the system performances of the states sampled 
             in the previous step, for updating the 
             iteration levels and identifying the corresponding elite sample points.
             However, to complete the implementation of the <i>updating step</i>, 
             function <img alt="LaTeX equation" src="../media/latex_4816.svg" style="vertical-align: -0px" /> must be defined via 
             method <a href="1AF89526.htm">Performance(DoubleMatrix)</a>,
             and method <a href="4AE2243.htm">UpdateParameter(LinkedList<span id="LST1C32368C_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_24?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DoubleMatrix<span id="LST1C32368C_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_25?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, DoubleMatrix)</a> 
             also needs to be overridden. 
             Given <img alt="LaTeX equation" src="../media/latex_4817.svg" style="vertical-align: -2px" /> and 
             <img alt="LaTeX equation" src="../media/latex_4818.svg" style="vertical-align: -2px" />, this method is expected to return 
             the solution to the following program:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4819.svg" /><br /><br />
             where 
             <img alt="LaTeX equation" src="../media/latex_4820.svg" style="vertical-align: -4px" /> is the set 
             of elite sample positions (row indexes of the matrix returned 
             by method <a href="CD524A5D.htm">Sample</a>, with 
             <img alt="LaTeX equation" src="../media/latex_4821.svg" style="vertical-align: -5px" /> being the <img alt="LaTeX equation" src="../media/latex_4822.svg" style="vertical-align: -0px" />-th row of such matrix
             and <img alt="LaTeX equation" src="../media/latex_4823.svg" style="vertical-align: -0px" /> being its number of rows.
             Method <a href="4AE2243.htm">UpdateParameter</a> 
             receives two parameters. The first is a <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1" target="_blank" rel="noopener noreferrer">LinkedList<span id="LST1C32368C_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_26?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1C32368C_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_27?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> 
             of <a href="1DED9EB1.htm">DoubleMatrix</a> instances, 
             representing the <em>reference</em> parameters applied in previous 
             iterations. The instance 
             returned by property <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1.last#System_Collections_Generic_LinkedList_1_Last" target="_blank" rel="noopener noreferrer">Last</a> corresponds to 
             parameter <img alt="LaTeX equation" src="../media/latex_4824.svg" style="vertical-align: -2px" />. The second method parameter is 
             a <a href="1DED9EB1.htm">DoubleMatrix</a> instance whose rows represent the elite points
             sampled in the current iteration.
             </p><p><b><i>Optimizing step</i></b></p><p>
             The optimizing step is executed after that the underlying 
             Cross-Entropy program 
             has converged. 
             In a specified context, it is expected that, 
             given a reference parameter 
             <img alt="LaTeX equation" src="../media/latex_4825.svg" style="vertical-align: -0px" />, a corresponding reasonable value could be 
             guessed for the optimizing argument of <img alt="LaTeX equation" src="../media/latex_4826.svg" style="vertical-align: -0px" />, 
             say <img alt="LaTeX equation" src="../media/latex_4827.svg" style="vertical-align: -4px" />, with <img alt="LaTeX equation" src="../media/latex_4828.svg" style="vertical-align: -0px" /> a function
             from <img alt="LaTeX equation" src="../media/latex_4829.svg" style="vertical-align: -1px" /> to <img alt="LaTeX equation" src="../media/latex_4830.svg" style="vertical-align: -0px" />. 
             Function <img alt="LaTeX equation" src="../media/latex_4831.svg" style="vertical-align: -0px" /> must be defined by overriding method 
             <a href="9B360782.htm">GetOptimalState(DoubleMatrix)</a> 
             that should return <img alt="LaTeX equation" src="../media/latex_4832.svg" style="vertical-align: -4px" />
             given a specific reference parameter <img alt="LaTeX equation" src="../media/latex_4833.svg" style="vertical-align: -0px" />.
             </p><p>
             Given the optimal parameter <img alt="LaTeX equation" src="../media/latex_4834.svg" style="vertical-align: -2px" />, 
             (the parameter corresponding to the last iteration 
             <img alt="LaTeX equation" src="../media/latex_4835.svg" style="vertical-align: -0px" /> executed by the algorithm before stopping), 
             the argument at which the searched extremum is considered 
             as reached according to the Cross-Entropy method will be
             returned as <img alt="LaTeX equation" src="../media/latex_4836.svg" style="vertical-align: -4px" />.
             </p><p><b><i>Additional overridable methods</i></b></p><p><i>Applying a smoothing scheme to parameters</i></p><p>
             Especially when a sampling parameter consists of probabilities, a
             <a href="E252E84.htm">SystemPerformanceOptimizer</a> could converge to a 
             wrong solution
             if such parameter is updated without applying a smoothing scheme,
             so preventing the probabilities to reach 
             <img alt="LaTeX equation" src="../media/latex_4837.svg" style="vertical-align: -0px" /> or <img alt="LaTeX equation" src="../media/latex_4838.svg" style="vertical-align: -0px" /> values
             too quickly, in the early iterations of the program.
             </p><p>
             Let <img alt="LaTeX equation" src="../media/latex_4839.svg" style="vertical-align: -2px" /> the reference parameter 
             exploited in the last iteration, 
             and let <img alt="LaTeX equation" src="../media/latex_4840.svg" style="vertical-align: -2px" /> the previous one.
             By default, this method 
             applies the following smoothing scheme:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4841.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_4842.svg" style="vertical-align: -0px" />.
             </p><p>
             You can override 
             method <a href="DB205520.htm">SmoothParameter(LinkedList<span id="LST1C32368C_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_28?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DoubleMatrix<span id="LST1C32368C_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_29?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a>
             in order to apply a smoothing scheme specific to
             a given context.
             </p><p><i>Stopping criterion</i></p><p>
             An iteration is defined as intermediate
             for a <span class="selflink">SystemPerformanceOptimizationContext</span> if it is 
             greater than <a href="44E3AF08.htm">MinimumNumberOfIterations</a>, and
             less than <a href="CB60FB7E.htm">MaximumNumberOfIterations</a>.
             </p><p>
             For intermediate iterations, method <a href="F068CBEA.htm">StopAtIntermediateIteration(Int32, LinkedList<span id="LST1C32368C_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_30?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1C32368C_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_31?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, LinkedList<span id="LST1C32368C_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_32?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DoubleMatrix<span id="LST1C32368C_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1C32368C_33?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a> is
             called to check if a Cross-Entropy program executing in this
             context should stop or not.
             </p><p>
             By default, the method controls if, in the last 
             <a href="44E3AF08.htm">MinimumNumberOfIterations</a> iterations, the 
             levels achieved by the program remain constant, and, if so,
             return <span class="code">true</span>; otherwise returns <span class="code">false</span>.
             </p><p>
             You can override <a href="F068CBEA.htm">
             StopAtIntermediateIteration</a> in order to apply a specific 
             stopping criterion for intermediate iterations.
             </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
             The following example is based on Section 5.1 
             proposed by Rubinstein and Kroese 
             (Section 2.2.1)<sup class="citation"><a href="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#cite1">[1]
							</a></sup>.
             </p><p>
             A Cross-Entropy optimizer is exploited 
             to minimize the bi-dimensional Rosenbrock function,
             showed in the following figure.
            </p><p>100%Bi-dimensional Rosenbrock functionOptimizationExample.png</p><p>
             The global minimum at <img alt="LaTeX equation" src="../media/latex_4843.svg" style="vertical-align: -4px" />
             is indicated by a red dot.
             </p><p>
             In order to solve such problem, we define a Cross-Entropy context 
             as follows. 
             Since the function under study has two arguments, we analyze a
             system whose generic state
             <img alt="LaTeX equation" src="../media/latex_4844.svg" style="vertical-align: -0px" /> can be represented as a 
             vector of length 2:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4845.svg" /><br /><br />    
             while the Rosenbrock function is interpreted as the performance 
             of the system, i.e. 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4846.svg" /><br /><br /></p><p>
             The sampling step is accomplished as follows.
             Each component <img alt="LaTeX equation" src="../media/latex_4847.svg" style="vertical-align: -5px" /> of a state
             <img alt="LaTeX equation" src="../media/latex_4848.svg" style="vertical-align: -4px" /> is attached to a 
             Gaussian distribution, say <img alt="LaTeX equation" src="../media/latex_4849.svg" style="vertical-align: -6px" />,
             and 
             the <i>j</i>-th entry 
             of a state is sampled from <img alt="LaTeX equation" src="../media/latex_4850.svg" style="vertical-align: -6px" />, 
             independently from the other. 
             The Cross-Entropy sampling parameter can thus be 
             represented as a <img alt="LaTeX equation" src="../media/latex_4851.svg" style="vertical-align: -0px" /> matrix <img alt="LaTeX equation" src="../media/latex_4852.svg" style="vertical-align: -0px" />,
             whose first row stores the means of the Gaussian 
             distributions, while the second row contains their standard
             deviations, so that <img alt="LaTeX equation" src="../media/latex_4853.svg" style="vertical-align: -5px" /> and
             <img alt="LaTeX equation" src="../media/latex_4854.svg" style="vertical-align: -5px" />.
             </p><p>
             The initial parameter sets (arbitrarily) the Gaussian 
             means to <img alt="LaTeX equation" src="../media/latex_4855.svg" style="vertical-align: -0px" />.
             More importantly, the standard deviations are set equal
             to <img alt="LaTeX equation" src="../media/latex_4856.svg" style="vertical-align: -0px" />: in this way, during the first
             execution of the sampling
             step each argument will have a good likelihood 
             of being drawn.
             </p><p>
             At iteration <img alt="LaTeX equation" src="../media/latex_4857.svg" style="vertical-align: -0px" />, the parameter's first 
             row updating formula is, 
             for <img alt="LaTeX equation" src="../media/latex_4858.svg" style="vertical-align: -4px" />,
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4859.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_4860.svg" style="vertical-align: -4px" />
             is the set of elite sample in this context, i.e. the set of sample
             points having the lowest performances observed during the <img alt="LaTeX equation" src="../media/latex_4861.svg" style="vertical-align: -0px" />-th
             iteration.
             The parameter's second row, that containing the standard deviations, 
             is instead updated as follows:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4862.svg" /><br /><br /></p><p>
             The so-updated parameter is thus smoothed applying the following formulas
             (See Rubinstein and Kroese, 
             Remark 5.2, p. 189<sup class="citation"><a href="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;#cite1">[1]
							</a></sup>.):
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4863.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_4864.svg" style="vertical-align: -2px" />, and
             <br /><br /><img alt="LaTeX equation" src="../media/latex_4865.svg" /><br /><br />
             with <img alt="LaTeX equation" src="../media/latex_4866.svg" style="vertical-align: -4px" /> and <img alt="LaTeX equation" src="../media/latex_4867.svg" style="vertical-align: -4px" />.
             </p><p>
             The algorithm will stop if each standard deviation in a Cross-Entropy
             parameter will be less than <img alt="LaTeX equation" src="../media/latex_4868.svg" style="vertical-align: -0px" />.
             </p><p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABBA_tab1" class="codeSnippetContainerTabSingle">Minimizing the bi-dimensional Rosenbrock function.
             </div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> Novacta.Analytics.Advanced;

<span class="highlight-keyword">namespace</span> Novacta.Analytics.CodeExamples.Advanced
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CrossEntropyOptimizerExample0  
    {
        <span class="highlight-keyword">class</span> RosenbrockFunctionMinimizationContext
            : SystemPerformanceOptimizationContext
        {
            <span class="highlight-keyword">public</span> RosenbrockFunctionMinimizationContext()
                : <span class="highlight-keyword">base</span>(
                    <span class="highlight-comment">// The function to be optimized is the bi-dimensional</span>
                    <span class="highlight-comment">// Rosenbrock function, hence it has two arguments.</span>
                    <span class="highlight-comment">// Thus it can be interpreted as the performance of</span>
                    <span class="highlight-comment">// a system whose state can be represented as a vector</span>
                    <span class="highlight-comment">// of length 2.</span>
                    stateDimension: <span class="highlight-number">2</span>,
                    <span class="highlight-comment">// Set the optimization goal to minimization.</span>
                    optimizationGoal: OptimizationGoal.Minimization,
                    <span class="highlight-comment">// Define the initial parameter of the distribution</span>
                    <span class="highlight-comment">// from which samples are drawn while searching</span>
                    <span class="highlight-comment">// for the optimizer (sampling the state-space</span>
                    <span class="highlight-comment">// of the system, i.e. the domain of the function).</span>
                    <span class="highlight-comment">// The parameter is a matrix of two rows.</span>
                    <span class="highlight-comment">// Its first row represents the means, its second one </span>
                    <span class="highlight-comment">// the standard deviations of two Gaussian distributions</span>
                    <span class="highlight-comment">// from which the two arguments of the optimizing function,</span>
                    <span class="highlight-comment">// respectively, are sampled while searching </span>
                    <span class="highlight-comment">// for the optimizer.</span>
                    initialParameter: DoubleMatrix.Dense(<span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
                        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1.0</span>, <span class="highlight-number">10000.0</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">10000.0</span> }),
                    minimumNumberOfIterations: <span class="highlight-number">3</span>,
                    maximumNumberOfIterations: <span class="highlight-number">10000</span>)
            {
            }

            <span class="highlight-comment">// Define the performance function of the </span>
            <span class="highlight-comment">// system under study (in this context, </span>
            <span class="highlight-comment">// a bi-dimensional Rosenbrock function to be minimized).</span>
            <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">double</span> Performance(DoubleMatrix x)
            {
                <span class="highlight-keyword">double</span> performance = <span class="highlight-number">0.0</span>;
                <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; <span class="highlight-keyword">this</span>.StateDimension - <span class="highlight-number">1</span>; i++)
                {
                    <span class="highlight-keyword">var</span> x_i = x[i];
                    <span class="highlight-keyword">var</span> squared_x_i = Math.Pow(x[i], <span class="highlight-number">2.0</span>);
                    performance += <span class="highlight-number">100.0</span> * (Math.Pow(x[i + <span class="highlight-number">1</span>] - squared_x_i, <span class="highlight-number">2.0</span>));
                    performance += Math.Pow(<span class="highlight-number">1.0</span> - x_i, <span class="highlight-number">2.0</span>);
                }
                <span class="highlight-keyword">return</span> performance;
            }

            <span class="highlight-comment">// Set how to sample system states</span>
            <span class="highlight-comment">// given the specified parameter. </span>
            <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> PartialSample(
                <span class="highlight-keyword">double</span>[] destinationArray,
                Tuple&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">int</span>&gt; sampleSubsetRange,
                RandomNumberGenerator randomNumberGenerator,
                DoubleMatrix parameter,
                <span class="highlight-keyword">int</span> sampleSize)
            {
                <span class="highlight-comment">// Must be Item1 included, Item2 excluded</span>
                <span class="highlight-keyword">int</span> subSampleSize =
                    sampleSubsetRange.Item2 - sampleSubsetRange.Item1;

                <span class="highlight-keyword">int</span> leadingDimension = Convert.ToInt32(sampleSize);

                <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> j = <span class="highlight-number">0</span>; j &lt; <span class="highlight-keyword">this</span>.StateDimension; j++)
                {
                    <span class="highlight-keyword">var</span> distribution = <span class="highlight-keyword">new</span>
                        GaussianDistribution(
                            mu: parameter[<span class="highlight-number">0</span>, j],
                            sigma: parameter[<span class="highlight-number">1</span>, j])
                    {
                        RandomNumberGenerator = randomNumberGenerator
                    };
                    distribution.Sample(
                         subSampleSize,
                         destinationArray, j * leadingDimension + sampleSubsetRange.Item1);
                }
            }

            <span class="highlight-comment">// Define how to get the optimal state given</span>
            <span class="highlight-comment">// a Cross-Entropy parameter.</span>
            <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> DoubleMatrix GetOptimalState(
                DoubleMatrix parameter)
            {
                <span class="highlight-comment">// The optimal state is the vector of</span>
                <span class="highlight-comment">// means.</span>
                <span class="highlight-keyword">return</span> parameter[<span class="highlight-number">0</span>, <span class="highlight-literal">":"</span>];
            }

            <span class="highlight-comment">// Set how to update the parameter via </span>
            <span class="highlight-comment">// the elite sample.</span>
            <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> DoubleMatrix UpdateParameter(
                LinkedList&lt;DoubleMatrix&gt; parameters,
                DoubleMatrix eliteSample)
            {
                <span class="highlight-keyword">var</span> newParameter = DoubleMatrix.Dense(<span class="highlight-number">2</span>, <span class="highlight-keyword">this</span>.StateDimension);
                newParameter[<span class="highlight-number">0</span>, <span class="highlight-literal">":"</span>] =
                    Stat.Mean(
                        data: eliteSample,
                        dataOperation: DataOperation.OnColumns);
                newParameter[<span class="highlight-number">1</span>, <span class="highlight-literal">":"</span>] =
                    Stat.StandardDeviation(
                        data: eliteSample,
                        dataOperation: DataOperation.OnColumns,
                        adjustForBias: <span class="highlight-keyword">false</span>);

                <span class="highlight-keyword">return</span> newParameter;
            }

            <span class="highlight-comment">// Provide a smoothing scheme for updated sampling</span>
            <span class="highlight-comment">// parameters.</span>
            <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> SmoothParameter(
                LinkedList&lt;DoubleMatrix&gt; parameters)
            {
                <span class="highlight-keyword">double</span> iteration = Convert.ToDouble(parameters.Count);
                <span class="highlight-keyword">if</span> (iteration &gt; <span class="highlight-number">1</span>)
                {
                    DoubleMatrix currentParameter = parameters.Last.Value;
                    DoubleMatrix previousParameter = parameters.Last.Previous.Value;

                    <span class="highlight-comment">// Smoothing means</span>
                    <span class="highlight-keyword">double</span> meanAlpha = .<span class="highlight-number">7</span>;
                    <span class="highlight-keyword">var</span> previousMeans = previousParameter[<span class="highlight-number">0</span>, <span class="highlight-literal">":"</span>];
                    <span class="highlight-keyword">var</span> currentMeans = currentParameter[<span class="highlight-number">0</span>, <span class="highlight-literal">":"</span>];
                    currentParameter[<span class="highlight-number">0</span>, <span class="highlight-literal">":"</span>] =
                        meanAlpha * currentMeans + (<span class="highlight-number">1.0</span> - meanAlpha) * previousMeans;

                    <span class="highlight-comment">// Smoothing standard deviations</span>
                    <span class="highlight-keyword">var</span> previousStdDevs = previousParameter[<span class="highlight-number">1</span>, <span class="highlight-literal">":"</span>];
                    <span class="highlight-keyword">var</span> currentStdDevs = currentParameter[<span class="highlight-number">1</span>, <span class="highlight-literal">":"</span>];
                    <span class="highlight-keyword">double</span> q = <span class="highlight-number">6.0</span>;
                    <span class="highlight-keyword">double</span> beta = .<span class="highlight-number">9</span>;
                    <span class="highlight-keyword">double</span> stdDevAlpha = beta * (<span class="highlight-number">1.0</span> - Math.Pow(<span class="highlight-number">1.0</span> - <span class="highlight-number">1.0</span> / iteration, q));

                    currentParameter[<span class="highlight-number">1</span>, <span class="highlight-literal">":"</span>] =
                        stdDevAlpha * currentStdDevs + (<span class="highlight-number">1.0</span> - stdDevAlpha) * previousStdDevs;
                }
            }

            <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">bool</span> StopAtIntermediateIteration(
                <span class="highlight-keyword">int</span> iteration,
                LinkedList&lt;<span class="highlight-keyword">double</span>&gt; levels,
                LinkedList&lt;DoubleMatrix&gt; parameters)
            {
                <span class="highlight-comment">// Stop the program when each </span>
                <span class="highlight-comment">// standard deviation is less than .05.</span>
                <span class="highlight-keyword">var</span> stdDevs = parameters.Last.Value[<span class="highlight-number">1</span>, <span class="highlight-literal">":"</span>];
                <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> j = <span class="highlight-number">0</span>; j &lt; stdDevs.Count; j++)
                {
                    <span class="highlight-keyword">if</span> (stdDevs[j] &gt;= .<span class="highlight-number">05</span>)
                    {
                        <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;
                    }
                }

                <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
            }
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-comment">// Create the context.</span>
            <span class="highlight-keyword">var</span> context = <span class="highlight-keyword">new</span> RosenbrockFunctionMinimizationContext();

            <span class="highlight-comment">// Create the optimizer.</span>
            <span class="highlight-keyword">var</span> optimizer = <span class="highlight-keyword">new</span> SystemPerformanceOptimizer()
            {
                PerformanceEvaluationParallelOptions = { MaxDegreeOfParallelism = <span class="highlight-number">-1</span> },
                SampleGenerationParallelOptions = { MaxDegreeOfParallelism = <span class="highlight-number">-1</span> }
            };

            <span class="highlight-comment">// Set optimization parameters.</span>
            <span class="highlight-keyword">double</span> rarity = <span class="highlight-number">0.1</span>;
            <span class="highlight-keyword">int</span> sampleSize = <span class="highlight-number">1000</span>;

            <span class="highlight-comment">// Solve the problem.</span>
            <span class="highlight-keyword">var</span> results = optimizer.Optimize(
                context,
                rarity,
                sampleSize);

            <span class="highlight-comment">// Show the results.</span>
            Console.WriteLine(
                <span class="highlight-literal">"The Cross-Entropy optimizer has converged: {0}."</span>,
                results.HasConverged);

            Console.WriteLine();
            Console.WriteLine(<span class="highlight-literal">"Initial guess parameter:"</span>);
            Console.WriteLine(context.InitialParameter);

            Console.WriteLine();
            Console.WriteLine(<span class="highlight-literal">"The minimizer of the performance is:"</span>);
            Console.WriteLine(results.OptimalState);

            Console.WriteLine();

            Console.WriteLine(<span class="highlight-literal">"The minimum performance is:"</span>);
            Console.WriteLine(results.OptimalPerformance);
        }
    }
}

<span class="highlight-comment">// Executing method Main() produces the following output:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// The Cross-Entropy optimizer has converged: True.</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Initial guess parameter:</span>
<span class="highlight-comment">// -1               -1               </span>
<span class="highlight-comment">// 10000            10000            </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// The minimizer of the performance is:</span>
<span class="highlight-comment">// 0.99860578       0.997553876      </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// The minimum performance is:</span>
<span class="highlight-comment">// 1.3529163162538295E-05</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABBA");</script></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Bibliography</span></div><div id="ID8RBSection" class="collapsibleSection"><div class="bibliographStyle"><span class="bibliographyNumber" id="cite1">
          [1]
        </span><span class="bibliographyAuthor">Rubinstein, R.Y. and Kroese, D.P.</span>, <span class="bibliographyTitle">The Cross-Entropy Method, A unified Approach to Combinatorial Optimization, Monte-Carlo Simulation, and Machine Learning</span>, <span class="bibliographyPublisher">Springer, New York. (2004)</span></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="F249DE1E.htm">Novacta.Analytics.Advanced Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) Giovanni Lafratta.</p> </div></body></html>