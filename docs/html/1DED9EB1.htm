<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DoubleMatrix Class</title><meta name="Title" content="DoubleMatrix" /><meta name="Help.Id" content="T:Novacta.Analytics.DoubleMatrix" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics" /><meta name="guid" content="1DED9EB1" /><meta name="Description" content="Represents a collection of doubles arranged in rows and columns. Provides methods to operate algebraically on matrices." /><meta name="tocFile" content="../toc/IDAE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Double<wbr />Matrix Class</h1><div class="summary">
             Represents a collection of doubles arranged in rows and columns.
             Provides methods to operate algebraically on matrices.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="2406EB43.htm">Novacta.Analytics</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">DoubleMatrix</span> : <span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt;, 
	<span class="identifier">ICollection</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IEnumerable</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IEnumerable</span>, 
	<span class="identifier">IReadOnlyList</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IReadOnlyCollection</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IComplexMatrixPatterns</span>, 
	<span class="identifier">IMatrixPatterns</span>, <span class="identifier">IReadOnlyTabularCollection</span>&lt;<span class="identifier">double</span>, <span class="identifier">DoubleMatrix</span>&gt;, <span class="identifier">ITabularCollection</span>&lt;<span class="identifier">double</span>, <span class="identifier">DoubleMatrix</span>&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">DoubleMatrix</span>
	<span class="keyword">Implements</span> <span class="identifier">IList</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>), <span class="identifier">ICollection</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>), 
	<span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>), <span class="identifier">IEnumerable</span>, <span class="identifier">IReadOnlyList</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>), 
	<span class="identifier">IReadOnlyCollection</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>), <span class="identifier">IComplexMatrixPatterns</span>, <span class="identifier">IMatrixPatterns</span>, <span class="identifier">IReadOnlyTabularCollection</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>, <span class="identifier">DoubleMatrix</span>), 
	<span class="identifier">ITabularCollection</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>, <span class="identifier">DoubleMatrix</span>)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">DoubleMatrix</span> : <span class="identifier">IList</span>&lt;<span class="identifier">double</span>&gt;, 
	<span class="identifier">ICollection</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IEnumerable</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IEnumerable</span>, 
	<span class="identifier">IReadOnlyList</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IReadOnlyCollection</span>&lt;<span class="identifier">double</span>&gt;, <span class="identifier">IComplexMatrixPatterns</span>, 
	<span class="identifier">IMatrixPatterns</span>, <span class="identifier">IReadOnlyTabularCollection</span>&lt;<span class="identifier">double</span>, <span class="identifier">DoubleMatrix</span>^&gt;, <span class="identifier">ITabularCollection</span>&lt;<span class="identifier">double</span>, <span class="identifier">DoubleMatrix</span>^&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">DoubleMatrix</span> = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IList</span>&lt;<span class="identifier">float</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">ICollection</span>&lt;<span class="identifier">float</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">float</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IEnumerable</span>
        <span class="keyword">interface</span> <span class="identifier">IReadOnlyList</span>&lt;<span class="identifier">float</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IReadOnlyCollection</span>&lt;<span class="identifier">float</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IComplexMatrixPatterns</span>
        <span class="keyword">interface</span> <span class="identifier">IMatrixPatterns</span>
        <span class="keyword">interface</span> <span class="identifier">IReadOnlyTabularCollection</span>&lt;<span class="identifier">float</span>, <span class="identifier">DoubleMatrix</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">ITabularCollection</span>&lt;<span class="identifier">float</span>, <span class="identifier">DoubleMatrix</span>&gt;
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">DoubleMatrix</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="AE312AC9.htm">IComplexMatrixPatterns</a>, <a href="9132C4E3.htm">IMatrixPatterns</a>, <a href="DF685F70.htm">IReadOnlyTabularCollection</a><span id="LST1DED9EB1_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a>, <span class="selflink">DoubleMatrix</span><span id="LST1DED9EB1_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="E4BB5F66.htm">ITabularCollection</a><span id="LST1DED9EB1_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a>, <span class="selflink">DoubleMatrix</span><span id="LST1DED9EB1_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection</a><span id="LST1DED9EB1_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST1DED9EB1_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST1DED9EB1_6" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST1DED9EB1_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList</a><span id="LST1DED9EB1_8" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST1DED9EB1_9" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1" target="_blank" rel="noopener noreferrer">IReadOnlyCollection</a><span id="LST1DED9EB1_10" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST1DED9EB1_11" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1" target="_blank" rel="noopener noreferrer">IReadOnlyList</a><span id="LST1DED9EB1_12" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST1DED9EB1_13" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.ienumerable" target="_blank" rel="noopener noreferrer">IEnumerable</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p><b>Instantiation</b></p><p><span class="selflink">DoubleMatrix</span> objects can be created using different storage 
             schemes. To allocate storage for each matrix entry, so applying 
             a <a href="6274B7FA.htm">Dense</a> scheme, one can exploit one of the 
             overloaded factory
             method <span class="code">Dense</span>, such as <a href="474D67D4.htm">Dense(Int32, Int32)</a>. 
             On the contrary, method 
             <a href="B3BE55EC.htm">Sparse</a> returns
             instances whose scheme 
             is <a href="6274B7FA.htm">StorageScheme.CompressedRow</a>,
             which means that storage is allocated for non-zero entries only, using
             a compressed sparse row scheme.
             </p><p>
             Matrices can also be created by loading data from a stream; see,
             for example,
             <a href="8B2F48E1.htm">Encode(TextReader, Char, IndexCollection, Boolean, Dictionary<span id="LST1DED9EB1_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Codifier<span id="LST1DED9EB1_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IFormatProvider)</a>.
             </p><p><b>Indexing</b></p><p>                  
             In a matrix, entries are arranged in rows and columns.
             Zero-based indexes are assigned to rows and columns, so that
             each entry can be identified by the indexes of the specific row 
             and column on which it lies.
             </p><p>
             Let <img alt="LaTeX equation" src="../media/latex_5899.svg" /> be a matrix, and consider its generic entry
             <br /><br /><img alt="LaTeX equation" src="../media/latex_5900.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_5901.svg" /> and  
             <img alt="LaTeX equation" src="../media/latex_5902.svg" /> are the 
             number of rows and columns of <img alt="LaTeX equation" src="../media/latex_5903.svg" />, respectively.
             </p><p>
             Entry <img alt="LaTeX equation" src="../media/latex_5904.svg" style="vertical-align: -5px" /> can be set or get through the
             indexer <a href="11006C51.htm">Item<span id="LST1DED9EB1_16" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32, Int32<span id="LST1DED9EB1_17" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a>. Further overloads
             of the indexer enable the access to sub-matrices, as well.
             </p><p>
             A <b><i>linear index</i></b> completely
             identifies an entry, 
             assuming that entries are linearly ordered following the 
             <a href="8568BD14.htm">ColumnMajor</a>
             data order. This means that entry <img alt="LaTeX equation" src="../media/latex_5905.svg" style="vertical-align: -5px" /> has linear
             index equal to <img alt="LaTeX equation" src="../media/latex_5906.svg" style="vertical-align: -4px" />, and matrix entries can be enumerated as
             follows:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_5907.svg" /><br /><br />    
             where <img alt="LaTeX equation" src="../media/latex_5908.svg" style="vertical-align: -4px" /> is the <a href="D5AC2768.htm">Count</a> of the matrix.
             </p><p>
             Given a linear index, the corresponding entry can be accessed
             via the indexer <a href="564F5587.htm">Item<span id="LST1DED9EB1_18" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32<span id="LST1DED9EB1_19" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a>.
             In order to retrieve entries corresponding to
             multiple linear indexes simultaneously, linear indexers are also overloaded to accept 
             <a href="9B3BDFD7.htm">IndexCollection</a> instances,
             or strings as arguments.
             </p><p><b>Dimensions</b></p><p>
             The dimensions of a matrix can be inspected using the properties
             <a href="5433B273.htm">NumberOfRows</a> and
             <a href="1CE78EC5.htm">NumberOfColumns</a>,
             Use the property
             <a href="D5AC2768.htm">Count</a>
             to know how many entries are arranged in a matrix.
             </p><p>
             The following table reports some particular dimensions 
             for which a property exists
             which can be evaluated to inspect if the dimensions hold true for a given 
             matrix.
             </p><p><table class="table is-hoverable"><thead><tr><th>Matrix Property</th><th>Number of rows</th><th>Number of columns</th></tr></thead><tr><td><a href="9DE9389A.htm">IsScalar</a></td><td>1</td><td>1</td></tr><tr><td><a href="D1DABEC9.htm">IsRowVector</a></td><td>1</td><td>Any</td></tr><tr><td><a href="FC6C687D.htm">IsColumnVector</a></td><td>Any</td><td>1</td></tr></table></p><p>
             In addition, property <a href="B24433D4.htm">IsSquare</a> returns <span class="code">true</span>
             for matrices having the same number of rows and columns.
             You can also inspect property <a href="F217DEB4.htm">IsVector</a> to verify
             if a matrix instance has only one row or column.
             </p><p><b>Diagonals</b></p><p>
             There are <img alt="LaTeX equation" src="../media/latex_5909.svg" style="vertical-align: -2px" /> diagonals in <img alt="LaTeX equation" src="../media/latex_5910.svg" />.
             </p><p>The <b>main diagonal</b> of <img alt="LaTeX equation" src="../media/latex_5911.svg" /> is also said the diagonal
             of order <span class="code">0</span>, and is the collection of 
             entries <img alt="LaTeX equation" src="../media/latex_5912.svg" style="vertical-align: -5px" /> such 
             that <img alt="LaTeX equation" src="../media/latex_5913.svg" style="vertical-align: -4px" />. 
             </p><p>
             If <img alt="LaTeX equation" src="../media/latex_5914.svg" style="vertical-align: -1px" />, then the matrix has 
             <img alt="LaTeX equation" src="../media/latex_5915.svg" /><b> super-diagonals</b>: for 
             <img alt="LaTeX equation" src="../media/latex_5916.svg" style="vertical-align: -4px" />, the 
             <img alt="LaTeX equation" src="../media/latex_5917.svg" />-th super-diagonal is the collection of entries
             corresponding to the positions
             <br /><br /><img alt="LaTeX equation" src="../media/latex_5918.svg" /><br /><br /></p><p>
             If <img alt="LaTeX equation" src="../media/latex_5919.svg" style="vertical-align: -1px" />, the matrix has 
             <img alt="LaTeX equation" src="../media/latex_5920.svg" /><b> sub-diagonals</b>: for 
             <img alt="LaTeX equation" src="../media/latex_5921.svg" style="vertical-align: -4px" />, the 
             <img alt="LaTeX equation" src="../media/latex_5922.svg" />-th sub-diagonal is the collection of entries
             corresponding to the positions
             <br /><br /><img alt="LaTeX equation" src="../media/latex_5923.svg" /><br /><br /></p><p><b>Bandwidths</b></p><p>
             The <b>lower bandwidth</b> of <img alt="LaTeX equation" src="../media/latex_5924.svg" /> is the smallest integer, 
             say <img alt="LaTeX equation" src="../media/latex_5925.svg" />, such that 
             <img alt="LaTeX equation" src="../media/latex_5926.svg" style="vertical-align: -5px" /> if <img alt="LaTeX equation" src="../media/latex_5927.svg" style="vertical-align: -4px" />.
             </p><p>
             The <b>upper bandwidth</b> of a matrix <img alt="LaTeX equation" src="../media/latex_5928.svg" /> is the smallest integer, 
             say <img alt="LaTeX equation" src="../media/latex_5929.svg" />, such that 
             <img alt="LaTeX equation" src="../media/latex_5930.svg" style="vertical-align: -5px" /> if <img alt="LaTeX equation" src="../media/latex_5931.svg" style="vertical-align: -4px" />.
             </p><p>
             These definitions imply that, if <img alt="LaTeX equation" src="../media/latex_5932.svg" style="vertical-align: -1px" />, then the sub-diagonal
             of order <img alt="LaTeX equation" src="../media/latex_5933.svg" /> contains all zero entries, and
             if <img alt="LaTeX equation" src="../media/latex_5934.svg" style="vertical-align: -1px" />, then the super-diagonal
             of order <img alt="LaTeX equation" src="../media/latex_5935.svg" /> contains all zero entries.
             </p><p>
             Properties <a href="E86AF046.htm">LowerBandwidth</a> and <a href="787F5B58.htm">UpperBandwidth</a> can be 
             inspected to access the bandwidths of a given instance.
             </p><p><b>Patterns</b></p><p>                  
             The arrangement of zero entries in a matrix often follows a particular pattern.
             Some properties are defined which can be tested to verify if
             any of these patterns hold for a given matrix.
             </p><p>
             Relevant patterns can be described by means of lower and upper matrix 
             bandwidths.
             For instance, an upper triangular matrix can be defined as a square matrix 
             having sub-diagonals whose entries are all zero, or, equivalently, as a
             square matrix having a lower bandwidth equal to 0.
             </p><p>
             The following table reports some bandwidth-dependent patterns 
             for which a property exists
             which can be evaluated to inspect if the pattern holds true for a given square 
             matrix.
             </p><p><table class="table is-hoverable"><thead><tr><th>Matrix Pattern Property</th><th>Lower Bandwidth</th><th>Upper Bandwidth</th></tr></thead><tr><td><a href="2DB1B2E8.htm">IsLowerTriangular</a></td><td>Any</td><td>0</td></tr><tr><td><a href="615E9D1B.htm">IsUpperTriangular</a></td><td>0</td><td>Any</td></tr><tr><td><a href="B68F1CC1.htm">IsLowerHessenberg</a></td><td>Any</td><td>0 or 1</td></tr><tr><td><a href="C127696D.htm">IsUpperHessenberg</a></td><td>0 or 1</td><td>Any</td></tr><tr><td><a href="DF478CB4.htm">IsDiagonal</a></td><td>0</td><td>0</td></tr><tr><td><a href="EEF44872.htm">IsLowerBidiagonal</a></td><td>0 or 1</td><td>0</td></tr><tr><td><a href="31BE9EE6.htm">IsUpperBidiagonal</a></td><td>0</td><td>0 or 1</td></tr><tr><td><a href="3452F666.htm">IsTridiagonal</a></td><td>0 or 1</td><td>0 or 1</td></tr></table></p><p>
             Finally, property <a href="8097E7C1.htm">IsTriangular</a>
             can be inspected to verify if a matrix instance is lower or upper triangular, 
             <a href="B5F46EFF.htm">IsBidiagonal</a> to verify if
             the instance is lower or upper bidiagonal,
             while property <a href="CE5B306C.htm">IsHessenberg</a> 
             returns a value indicating if a matrix instance is lower or upper Hessenberg.
             </p><p><b>Enumeration of entries and rows</b></p><p>
             Matrix values can be enumerated, and queried, using the "Linq to Objects" paradigm 
             (see, e.g., the 
             <a href="https://learn.microsoft.com/dotnet/api/system.linq" target="_blank" rel="noopener noreferrer">System.Linq</a>
             documentation). Matrices can also be enumerated by rows using the iterator
             <a href="CDC3DC07.htm">AsRowCollection<span id="LST1DED9EB1_20" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
             This means that you can apply the LINQ approach to retrieve data from a matrix:
             you write declarative code that describes what you want to
             retrieve and at what conditions, which can be specified to 
             filter, order, and aggregate data as needed.
             </p><p><b>Memory usage</b></p><p>
             Matrix entries can be stored using different data schemes, as enumerated
             in <a href="6274B7FA.htm">StorageScheme</a>.
             </p><p>
             The data currently stored can be accessed as an array
             through the
             <a href="F709F5A.htm">GetStorage<span id="LST1DED9EB1_21" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method.
             </p><p><article class="message is-warning"><div class="message-header"><p><span class="icon"><i class="fa fa-warning"></i></span>  Caution</p></div><div class="message-body">
             This method is intended for advanced users and must always be used 
             carefully. 
             For performance reasons, the returned reference points directly to 
             the matrix internal data. Do not call <a href="F709F5A.htm">GetStorage<span id="LST1DED9EB1_22" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> if 
             you do not have complete control of the instance you used to invoke 
             the method.
             </div></article></p><p>
             Method <a href="E0129FD3.htm">AsColumnMajorDenseArray<span id="LST1DED9EB1_23" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> always
             returns a <a href="8568BD14.htm">ColumnMajor</a> ordered 
             array which is a dense representation of the matrix entries,
             irrespective of the specific data scheme used to implement the matrix.
             If the underlying scheme is
             <a href="6274B7FA.htm">Dense</a>, such method 
             returns a copy of the matrix data.
             </p><p><b>Serialization</b></p><p>
             Matrices can be loaded from, or saved to a CSV file through the
             <a href="3C4B4764.htm">CsvDoubleMatrixSerializer</a> class.
             </p><p>
             Matrices can also be represented as JSON strings, see <a href="652F931A.htm">JsonSerialization</a>.
             </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="637A90A1.htm">DoubleMatrix</a></td><td>
            Initializes a new instance of the <span class="selflink">DoubleMatrix</span> class
            as a scalar matrix having the specified value.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="ID02B0FASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="C2B4F5C3.htm">ColumnNames</a></td><td>
            Exposes the dictionary of column names, keyed by column indexes.
            </td></tr><tr><td><a href="D5AC2768.htm">Count</a></td><td>
            Gets the number of elements in this instance.
            </td></tr><tr><td><a href="575CA854.htm">HasColumnNames</a></td><td>
            Gets a value indicating whether this instance has at least a named column.
            </td></tr><tr><td><a href="5966E3B7.htm">HasRowNames</a></td><td>
            Gets a value indicating whether this instance has at least a named row.
            </td></tr><tr><td><a href="B5F46EFF.htm">IsBidiagonal</a></td><td>
            Gets a value indicating whether this instance is bidiagonal.
            </td></tr><tr><td><a href="FC6C687D.htm">IsColumnVector</a></td><td>
            Gets a value indicating whether this instance is a column vector.
            </td></tr><tr><td><a href="DF478CB4.htm">IsDiagonal</a></td><td>
            Gets a value indicating whether this instance is diagonal.
            </td></tr><tr><td><a href="1058509B.htm">IsHermitian</a></td><td>
            Gets a value indicating whether this instance is Hermitian.
            </td></tr><tr><td><a href="CE5B306C.htm">IsHessenberg</a></td><td>
            Gets a value indicating whether this instance is Hessenberg.
            </td></tr><tr><td><a href="EEF44872.htm">IsLowerBidiagonal</a></td><td>
            Gets a value indicating whether this instance is lower bidiagonal.
            </td></tr><tr><td><a href="B68F1CC1.htm">IsLowerHessenberg</a></td><td>
            Gets a value indicating whether this instance is lower Hessenberg.
            </td></tr><tr><td><a href="2DB1B2E8.htm">IsLowerTriangular</a></td><td>
            Gets a value indicating whether this instance is lower triangular.
            </td></tr><tr><td><a href="8774A160.htm">IsReadOnly</a></td><td>
            Gets a value indicating whether this instance is read-only.
            </td></tr><tr><td><a href="D1DABEC9.htm">IsRowVector</a></td><td>
            Gets a value indicating whether this instance is a row vector.
            </td></tr><tr><td><a href="9DE9389A.htm">IsScalar</a></td><td>
            Gets a value indicating whether this instance is scalar.
            </td></tr><tr><td><a href="1827FFE8.htm">IsSkewHermitian</a></td><td>
            Gets a value indicating whether this instance is Skew-Hermitian.
            </td></tr><tr><td><a href="D25DA35C.htm">IsSkewSymmetric</a></td><td>
            Gets a value indicating whether this instance is skew symmetric.
            </td></tr><tr><td><a href="B24433D4.htm">IsSquare</a></td><td>
            Gets a value indicating whether this instance is square.
            </td></tr><tr><td><a href="B6B8AA3F.htm">IsSymmetric</a></td><td>
            Gets a value indicating whether this instance is symmetric.
            </td></tr><tr><td><a href="8097E7C1.htm">IsTriangular</a></td><td>
            Gets a value indicating whether this instance is triangular.
            </td></tr><tr><td><a href="3452F666.htm">IsTridiagonal</a></td><td>
            Gets a value indicating whether this instance is tridiagonal.
            </td></tr><tr><td><a href="31BE9EE6.htm">IsUpperBidiagonal</a></td><td>
            Gets a value indicating whether this instance is upper bidiagonal.
            </td></tr><tr><td><a href="C127696D.htm">IsUpperHessenberg</a></td><td>
            Gets a value indicating whether this instance is upper Hessenberg.
            </td></tr><tr><td><a href="615E9D1B.htm">IsUpperTriangular</a></td><td>
            Gets a value indicating whether this instance is upper triangular.
            </td></tr><tr><td><a href="F217DEB4.htm">IsVector</a></td><td>
            Gets a value indicating whether this instance is a vector.
            </td></tr><tr><td><a href="564F5587.htm">Item<span id="LST1DED9EB1_24" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32<span id="LST1DED9EB1_25" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the element of this instance corresponding to the specified linear
            index.
            </td></tr><tr><td><a href="F330E062.htm">Item<span id="LST1DED9EB1_26" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>IndexCollection, IndexCollection<span id="LST1DED9EB1_27" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to the specified row
            and column indexes.
            </td></tr><tr><td><a href="3E45B358.htm">Item<span id="LST1DED9EB1_28" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>IndexCollection, Int32<span id="LST1DED9EB1_29" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to the specified row
            and column indexes.
            </td></tr><tr><td><a href="9B9E3EBD.htm">Item<span id="LST1DED9EB1_30" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>IndexCollection, String<span id="LST1DED9EB1_31" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to 
            the specified row and column indexes.
            </td></tr><tr><td><a href="B3A7E0EC.htm">Item<span id="LST1DED9EB1_32" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32, IndexCollection<span id="LST1DED9EB1_33" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to the specified row
            and column indexes.
            </td></tr><tr><td><a href="11006C51.htm">Item<span id="LST1DED9EB1_34" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32, Int32<span id="LST1DED9EB1_35" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the element of this instance corresponding to the 
            specified row and column indexes.
            </td></tr><tr><td><a href="6E58F7B6.htm">Item<span id="LST1DED9EB1_36" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32, String<span id="LST1DED9EB1_37" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to the 
            specified row and column indexes.
            </td></tr><tr><td><a href="CBB1831B.htm">Item<span id="LST1DED9EB1_38" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>String, IndexCollection<span id="LST1DED9EB1_39" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to 
            the specified row and column indexes.
            </td></tr><tr><td><a href="496227F3.htm">Item<span id="LST1DED9EB1_40" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>String, Int32<span id="LST1DED9EB1_41" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to the specified row
            and column indexes.
            </td></tr><tr><td><a href="D4C727F3.htm">Item<span id="LST1DED9EB1_42" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>String, String<span id="LST1DED9EB1_43" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the elements of this instance corresponding to 
            the specified row and column indexes.
            </td></tr><tr><td><a href="E0ED27F3.htm">Item<span id="LST1DED9EB1_44" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>IndexCollection, IndexCollection, Boolean<span id="LST1DED9EB1_45" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets the elements of this instance corresponding to the specified row
            and column indexes.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="F8F6CA22.htm">Item<span id="LST1DED9EB1_46" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>IndexCollection, String, Boolean<span id="LST1DED9EB1_47" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets the elements of this instance corresponding to 
            the specified row and column indexes.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="BDFD27F3.htm">Item<span id="LST1DED9EB1_48" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>String, IndexCollection, Boolean<span id="LST1DED9EB1_49" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets the elements of this instance corresponding to 
            the specified row and column indexes.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="602C27F3.htm">Item<span id="LST1DED9EB1_50" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>String, String, Boolean<span id="LST1DED9EB1_51" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets the elements of this instance corresponding to 
            the specified row and column indexes.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="E86AF046.htm">LowerBandwidth</a></td><td>
            Gets the lower bandwidth of this instance.
            </td></tr><tr><td><a href="61AD87DB.htm">Name</a></td><td>
            Gets or sets the name of this instance.
            </td></tr><tr><td><a href="1CE78EC5.htm">NumberOfColumns</a></td><td>
            Gets the number of columns of this instance.
            </td></tr><tr><td><a href="5433B273.htm">NumberOfRows</a></td><td>
            Gets the number of rows of this instance.
            </td></tr><tr><td><a href="52722E73.htm">RowNames</a></td><td>
            Exposes the dictionary of row names, keyed by row indexes.
            </td></tr><tr><td><a href="A01A6D5.htm">StorageOrder</a></td><td>
            Gets the storage order of this instance.
            </td></tr><tr><td><a href="67D62E26.htm">StorageScheme</a></td><td>
            Gets the storage scheme of this instance.
            </td></tr><tr><td><a href="787F5B58.htm">UpperBandwidth</a></td><td>
            Gets the upper bandwidth of this instance.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDCFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="6A71C16.htm">Add(Complex, DoubleMatrix)</a></td><td>
            Determines the addition of a scalar to a matrix.
            </td></tr><tr><td><a href="6A01C16.htm">Add(Double, DoubleMatrix)</a></td><td>
            Determines the addition of a scalar to a matrix.
            </td></tr><tr><td><a href="51062203.htm">Add(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the sum of two matrices.
            </td></tr><tr><td><a href="6A21C16.htm">Add(DoubleMatrix, Double)</a></td><td>
            Determines the addition of a matrix to a scalar.
            </td></tr><tr><td><a href="6A11C16.htm">Add(DoubleMatrix, Complex)</a></td><td>
            Determines the addition of a matrix to a scalar.
            </td></tr><tr><td><a href="4A64A4C1.htm">Apply</a></td><td>
            Evaluates the specified function at each entry of this instance,
            and returns a matrix whose entries are given by 
            the corresponding function values.
            </td></tr><tr><td><a href="E0129FD3.htm">AsColumnMajorDenseArray</a></td><td>
            Returns a column major ordered, dense representation of this instance.
            </td></tr><tr><td><a href="8D70D332.htm">AsReadOnly</a></td><td>
            Returns a read-only representation of the <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="CDC3DC07.htm">AsRowCollection<span id="LST1DED9EB1_52" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Returns the collection of rows in the <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="4A1A5331.htm">AsRowCollection(IndexCollection)</a></td><td>
            Returns the collection of the rows in the <span class="selflink">DoubleMatrix</span>
            corresponding to the specified indexes.
            </td></tr><tr><td><a href="F68B2B97.htm">Contains</a></td><td>Determines whether the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection<span id="LST1DED9EB1_53" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_54" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> contains a specific value.</td></tr><tr><td><a href="29D0988.htm">CopyTo</a></td><td>Copies the elements of the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection<span id="LST1DED9EB1_55" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_56" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> to an <a href="https://learn.microsoft.com/dotnet/api/system.array" target="_blank" rel="noopener noreferrer">Array</a>, starting at a particular <a href="https://learn.microsoft.com/dotnet/api/system.array" target="_blank" rel="noopener noreferrer">Array</a> index.</td></tr><tr><td><a href="D61FA767.htm">Dense(<span id="LST1DED9EB1_57" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST1DED9EB1_58" data-languageSpecificText="cpp=,2&gt;|cs=[,]|vb=(,)|nu=[,]|fs=[,]"></span>)</a></td><td>
            Creates a dense <span class="selflink">DoubleMatrix</span> instance having the same
            size and data of the specified two-dimensional array.
            </td></tr><tr><td><a href="474D67D4.htm">Dense(Int32, Int32)</a></td><td>
             Creates a dense <span class="selflink">DoubleMatrix</span> instance having the 
             specified size, and assigns zero to each matrix entry.
             </td></tr><tr><td><a href="BBE867D4.htm">Dense(Int32, Int32, IEnumerable<span id="LST1DED9EB1_59" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_60" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a dense <span class="selflink">DoubleMatrix</span> instance having the 
            specified size, and assigns data to entries 
            assuming ColMajor ordering.
            </td></tr><tr><td><a href="A51E67D4.htm">Dense(Int32, Int32, Double)</a></td><td>
             Creates a dense <span class="selflink">DoubleMatrix</span> instance having the 
             specified size, and assigns the same value to each matrix entry.
             </td></tr><tr><td><a href="19B967D4.htm">Dense(Int32, Int32, <span id="LST1DED9EB1_61" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST1DED9EB1_62" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
             Creates a dense <span class="selflink">DoubleMatrix</span> instance having the 
             specified size, and assigns data to entries 
             assuming ColMajor ordering.
             </td></tr><tr><td><a href="308367D4.htm">Dense(Int32, Int32, IEnumerable<span id="LST1DED9EB1_63" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_64" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, StorageOrder)</a></td><td>
            Creates a dense <span class="selflink">DoubleMatrix</span> instance having the 
            specified size, and assigns data to entries 
            applying the given storage order.
            </td></tr><tr><td><a href="8E5467D4.htm">Dense(Int32, Int32, <span id="LST1DED9EB1_65" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST1DED9EB1_66" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, StorageOrder)</a></td><td>
             Creates a dense <span class="selflink">DoubleMatrix</span> instance having the 
             specified size, and assigns data to entries 
             applying the given storage order.
             </td></tr><tr><td><a href="2EF67D4.htm">Dense(Int32, Int32, <span id="LST1DED9EB1_67" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST1DED9EB1_68" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Boolean)</a></td><td>
            Creates a dense <span class="selflink">DoubleMatrix</span> instance having the 
            specified size, and assigns data to entries, 
            possibly preventing copying operations before creation.
            </td></tr><tr><td><a href="1D80D6BA.htm">Diagonal(DoubleMatrix)</a></td><td>
             Creates a square <span class="selflink">DoubleMatrix</span> instance having the specified 
             data on its main diagonal and zero otherwise.
             </td></tr><tr><td><a href="8100FF9A.htm">Diagonal(ReadOnlyDoubleMatrix)</a></td><td>
             Creates a square <span class="selflink">DoubleMatrix</span> instance having the specified 
             data on its main diagonal and zero otherwise.
             </td></tr><tr><td><a href="7D7F2BCB.htm">Dispose<span id="LST1DED9EB1_69" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Disposes this instance.
            </td></tr><tr><td><a href="EC5A652B.htm">Dispose(Boolean)</a></td><td>
            Releases unmanaged and - optionally - managed resources.
            </td></tr><tr><td><a href="C692D85D.htm">Divide(Complex, DoubleMatrix)</a></td><td>
            Determines the division of a scalar by a matrix.
            </td></tr><tr><td><a href="C692D85A.htm">Divide(Double, DoubleMatrix)</a></td><td>
            Determines the division of a scalar by a matrix.
            </td></tr><tr><td><a href="EE919DC4.htm">Divide(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the division of a matrix by another.
            </td></tr><tr><td><a href="C692D858.htm">Divide(DoubleMatrix, Double)</a></td><td>
            Determines the division of a matrix by a scalar.
            </td></tr><tr><td><a href="C692D85B.htm">Divide(DoubleMatrix, Complex)</a></td><td>
            Determines the division of a matrix by a scalar.
            </td></tr><tr><td><a href="E0423223.htm">ElementWiseMultiply</a></td><td>
            Determines the element wise product of two matrices.
            </td></tr><tr><td><a href="8B2F48E0.htm">Encode(String, Char, IndexCollection, Boolean)</a></td><td>
            Encodes numerical data from the specified file.
            </td></tr><tr><td><a href="CECC0E8D.htm">Encode(TextReader, Char, IndexCollection, Boolean)</a></td><td>
             Encodes numerical data from the stream underlying the 
             specified text reader.
             </td></tr><tr><td><a href="8B2F48DF.htm">Encode(String, Char, IndexCollection, Boolean, Dictionary<span id="LST1DED9EB1_70" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Codifier<span id="LST1DED9EB1_71" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IFormatProvider)</a></td><td>
             Encodes categorical or numerical data from the given file into a matrix,
             applying specific categorical data codifiers.
             </td></tr><tr><td><a href="8B2F48E1.htm">Encode(TextReader, Char, IndexCollection, Boolean, Dictionary<span id="LST1DED9EB1_72" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Codifier<span id="LST1DED9EB1_73" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IFormatProvider)</a></td><td>
             Encodes categorical or numerical data from the stream 
             underlying the specified text reader into a matrix,
             applying specific categorical data codifiers.
             </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="503861B0.htm">Finalize</a></td><td>
            Finalizes an instance of the <span class="selflink">DoubleMatrix</span> class.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Object<span id="LST1DED9EB1_74" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Finalize<span id="LST1DED9EB1_75" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="4ADAD506.htm">Find</a></td><td>
            Searches for entries in this instance that equal the specified value, 
            and returns their zero-based linear indexes.
            </td></tr><tr><td><a href="781448B.htm">FindNonzero</a></td><td>
            Searches for nonzero entries in this instance, 
            and returns their zero-based linear indexes.
            </td></tr><tr><td><a href="E807ECA3.htm">FindWhile</a></td><td>
            Searches for entries in this instance that matches the conditions defined by the specified predicate, 
            and returns their zero-based linear indexes.
            </td></tr><tr><td><a href="81DFC950.htm">FromDouble</a></td><td>
            Converts 
            from <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a> to <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="38D9A1FC.htm">FromIndexPartition</a></td><td>
            Converts  
            from <a href="9A92A82.htm">IndexPartition<span id="LST1DED9EB1_76" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_77" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> 
            of <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a> to <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="44D838D1.htm">FromReadOnlyDoubleMatrix</a></td><td>
            Converts 
            from <a href="9FFC4131.htm">ReadOnlyDoubleMatrix</a> to <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="452ED741.htm">GetEnumerator</a></td><td>
            Returns an enumerator that iterates through the collection.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="F709F5A.htm">GetStorage</a></td><td>
            Gets the elements currently stored in this instance.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="E2CE78DE.htm">Identity</a></td><td>
            Creates a <span class="selflink">DoubleMatrix</span> instance 
            representing the identity matrix having the specified dimension.
            </td></tr><tr><td><a href="2ADD0941.htm">IndexOf</a></td><td>Determines the index of a specific item in the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST1DED9EB1_78" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_79" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>.</td></tr><tr><td><a href="C311FB75.htm">InPlaceApply</a></td><td>
            Evaluates the specified function at each entry of this instance,
            and substitutes each entry with its corresponding function value.
            </td></tr><tr><td><a href="787BF362.htm">InPlaceTranspose</a></td><td>
            Transposes this instance.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="3347CEDB.htm">Multiply(Complex, DoubleMatrix)</a></td><td>
            Determines the multiplication of a scalar by a matrix.
            </td></tr><tr><td><a href="D5EF4376.htm">Multiply(Double, DoubleMatrix)</a></td><td>
            Determines the multiplication of a scalar by a matrix.
            </td></tr><tr><td><a href="E1720CCC.htm">Multiply(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the product of two matrices.
            </td></tr><tr><td><a href="1B3E2CAC.htm">Multiply(DoubleMatrix, Double)</a></td><td>
            Determines the multiplication of a matrix by a scalar.
            </td></tr><tr><td><a href="7896B811.htm">Multiply(DoubleMatrix, Complex)</a></td><td>
            Determines the multiplication of a matrix by a scalar.
            </td></tr><tr><td><a href="3D9718E0.htm">Negate</a></td><td>
            Determines the negation of a matrix.
            </td></tr><tr><td><a href="EACF3A61.htm">RemoveAllColumnNames</a></td><td>
            Removes all column names.
            </td></tr><tr><td><a href="F29164A8.htm">RemoveAllRowNames</a></td><td>
            Removes all row names.
            </td></tr><tr><td><a href="69D490ED.htm">RemoveColumnName</a></td><td>
            Removes the name of the specified column.
            </td></tr><tr><td><a href="407F8640.htm">RemoveRowName</a></td><td>
            Removes the name of the specified row.
            </td></tr><tr><td><a href="C658066F.htm">SetColumnName</a></td><td>
            Sets the name of the specified column.
            </td></tr><tr><td><a href="F291D305.htm">SetRowName</a></td><td>
            Sets the name of the specified row.
            </td></tr><tr><td><a href="B3BE55EC.htm">Sparse</a></td><td>
             Creates a sparse <span class="selflink">DoubleMatrix</span> instance having the specified
             size and initial capacity to store entries different from zero.
             </td></tr><tr><td><a href="F8C7FB61.htm">Subtract(Complex, DoubleMatrix)</a></td><td>
            Determines the subtraction of a matrix from a scalar.
            </td></tr><tr><td><a href="562086C6.htm">Subtract(Double, DoubleMatrix)</a></td><td>
            Determines the subtraction of a matrix from a scalar.
            </td></tr><tr><td><a href="6CE8CB1A.htm">Subtract(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the difference between two matrices.
            </td></tr><tr><td><a href="10D19D90.htm">Subtract(DoubleMatrix, Double)</a></td><td>
            Determines the subtraction of a scalar from a matrix.
            </td></tr><tr><td><a href="B379122B.htm">Subtract(DoubleMatrix, Complex)</a></td><td>
            Determines the subtraction of a scalar from a matrix.
            </td></tr><tr><td><a href="9A3FD2F.htm">ToDouble</a></td><td>
            Converts 
            from <span class="selflink">DoubleMatrix</span> to <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a>.
            </td></tr><tr><td><a href="14CC2B83.htm">ToString</a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> that represents this instance.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">Object<span id="LST1DED9EB1_80" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LST1DED9EB1_81" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="34F0B9D1.htm">Transpose</a></td><td>
            Returns the transpose of this instance.
            </td></tr><tr><td><a href="D7A3A06B.htm">TryGetColumnName</a></td><td>
            Tries to get the name of the specified column.
            </td></tr><tr><td><a href="31CA97EB.htm">TryGetRowName</a></td><td>
            Tries to get the name of the specified row.
            </td></tr><tr><td><a href="6762AD68.htm">Vec<span id="LST1DED9EB1_82" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Returns the vectorization of this instance.
            </td></tr><tr><td><a href="1E80A77B.htm">Vec(IndexCollection)</a></td><td>
            Returns a column vector obtained by stacking the specified elements of this instance.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Operators</h2><div id="ID0CB0FASection"><table id="OperatorList" class="table is-hoverable"><tr><td><a href="F2CAD057.htm">Addition(Complex, DoubleMatrix)</a></td><td>
            Determines the addition of a scalar to a matrix.
            </td></tr><tr><td><a href="F2C9D057.htm">Addition(Double, DoubleMatrix)</a></td><td>
            Determines the addition of a scalar to a matrix.
            </td></tr><tr><td><a href="8322921C.htm">Addition(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the sum of two matrices.
            </td></tr><tr><td><a href="F2C7D057.htm">Addition(DoubleMatrix, Double)</a></td><td>
            Determines the addition of a matrix to a scalar.
            </td></tr><tr><td><a href="F2C8D057.htm">Addition(DoubleMatrix, Complex)</a></td><td>
            Determines the addition of a matrix to a scalar.
            </td></tr><tr><td><a href="DC5A8D83.htm">Division(Complex, DoubleMatrix)</a></td><td>
            Determines the division of a scalar by a matrix.
            </td></tr><tr><td><a href="DC5F8D83.htm">Division(Double, DoubleMatrix)</a></td><td>
            Determines the division of a scalar by a matrix.
            </td></tr><tr><td><a href="98FA5F7C.htm">Division(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the division of a matrix by another.
            </td></tr><tr><td><a href="DC5D8D83.htm">Division(DoubleMatrix, Double)</a></td><td>
            Determines the division of a matrix by a scalar.
            </td></tr><tr><td><a href="DC608D83.htm">Division(DoubleMatrix, Complex)</a></td><td>
            Determines the division of a matrix by a scalar.
            </td></tr><tr><td><a href="F7B66AA8.htm"><span id="LST1DED9EB1_83" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Double to DoubleMatrix)</a></td><td>
            Performs an explicit conversion 
            from <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a> to <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="5F5357CF.htm"><span id="LST1DED9EB1_84" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(DoubleMatrix to Double)</a></td><td>
            Performs an explicit conversion 
            from <span class="selflink">DoubleMatrix</span> to <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a>.
            </td></tr><tr><td><a href="F7B86AA8.htm"><span id="LST1DED9EB1_85" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(IndexPartition<span id="LST1DED9EB1_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span> to DoubleMatrix)</a></td><td>
            Performs an explicit conversion 
            from <a href="9A92A82.htm">IndexPartition<span id="LST1DED9EB1_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> 
            of <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a>
            to <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="F7B56AA8.htm"><span id="LST1DED9EB1_90" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(ReadOnlyDoubleMatrix to DoubleMatrix)</a></td><td>
            Performs an explicit conversion 
            from <a href="9FFC4131.htm">ReadOnlyDoubleMatrix</a> to <span class="selflink">DoubleMatrix</span>.
            </td></tr><tr><td><a href="334A8885.htm">Multiply(Complex, DoubleMatrix)</a></td><td>
            Determines the multiplication of a scalar by a matrix.
            </td></tr><tr><td><a href="33498885.htm">Multiply(Double, DoubleMatrix)</a></td><td>
            Determines the multiplication of a scalar by a matrix.
            </td></tr><tr><td><a href="848294BC.htm">Multiply(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the product of two matrices.
            </td></tr><tr><td><a href="33478885.htm">Multiply(DoubleMatrix, Double)</a></td><td>
            Determines the multiplication of a matrix by a scalar.
            </td></tr><tr><td><a href="33488885.htm">Multiply(DoubleMatrix, Complex)</a></td><td>
            Determines the multiplication of a matrix by a scalar.
            </td></tr><tr><td><a href="128A0433.htm">Subtraction(Complex, DoubleMatrix)</a></td><td>
            Determines the subtraction of a matrix from a scalar.
            </td></tr><tr><td><a href="128A0434.htm">Subtraction(Double, DoubleMatrix)</a></td><td>
            Determines the subtraction of a matrix from a scalar.
            </td></tr><tr><td><a href="88D609B5.htm">Subtraction(DoubleMatrix, DoubleMatrix)</a></td><td>
            Determines the difference between two matrices.
            </td></tr><tr><td><a href="128A0436.htm">Subtraction(DoubleMatrix, Double)</a></td><td>
            Determines the subtraction of a scalar from a matrix.
            </td></tr><tr><td><a href="128A0435.htm">Subtraction(DoubleMatrix, Complex)</a></td><td>
            Determines the subtraction of a scalar from a matrix.
            </td></tr><tr><td><a href="C740EE9A.htm">UnaryNegation(DoubleMatrix)</a></td><td>
            Determines the negation of a matrix.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Explicit Interface Implementations</h2><div id="ID0LB0FASection"><table id="ExplicitInterfaceImplementationList" class="table is-hoverable"><tr><td><a href="6A76DC1E.htm">ICollection<span id="LST1DED9EB1_91" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_92" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST1DED9EB1_93" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Add</a></td><td>
            Adds an item to the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection<span id="LST1DED9EB1_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>.
            This implementation always throws a <a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noopener noreferrer">NotSupportedException</a>.
            </td></tr><tr><td><a href="17F79866.htm">ICollection<span id="LST1DED9EB1_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST1DED9EB1_98" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Clear</a></td><td>
            Removes all items from the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection<span id="LST1DED9EB1_99" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_100" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>.
            This implementation always throws a <a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noopener noreferrer">NotSupportedException</a>.
            </td></tr><tr><td><a href="F4E4FDA.htm">ICollection<span id="LST1DED9EB1_101" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_102" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST1DED9EB1_103" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Remove</a></td><td>
            Removes the first occurrence of a specific object from 
            the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection<span id="LST1DED9EB1_104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>.
            This implementation always throws a <a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noopener noreferrer">NotSupportedException</a>.
            </td></tr><tr><td><a href="88C62658.htm">IEnumerable<span id="LST1DED9EB1_106" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetEnumerator</a></td><td>Returns an enumerator that iterates through a collection.</td></tr><tr><td><a href="A72CD3CD.htm">IList<span id="LST1DED9EB1_107" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_108" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST1DED9EB1_109" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Insert</a></td><td>
            Inserts an item to the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST1DED9EB1_110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> at the specified index.
            This implementation always throws a <a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noopener noreferrer">NotSupportedException</a>.
            </td></tr><tr><td><a href="DC2B795F.htm">IList<span id="LST1DED9EB1_112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST1DED9EB1_113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST1DED9EB1_114" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>RemoveAt</a></td><td>
            Removes the <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST1DED9EB1_115" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1DED9EB1_116" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> item 
            at the specified index.
            This implementation always throws a <a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noopener noreferrer">NotSupportedException</a>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div><div><a href="8C5BBFE.htm">DoubleMatrixRow Class</a></div><div><a href="9B3BDFD7.htm">IndexCollection Class</a></div><div><a href="9FFC4131.htm">ReadOnlyDoubleMatrix Class</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Operators</a></li><li><a class="quickLink">Explicit Interface Implementations</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>