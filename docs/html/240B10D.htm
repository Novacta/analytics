<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>PartitionOptimizationContext Class</title><meta name="Title" content="PartitionOptimizationContext" /><meta name="Help.Id" content="T:Novacta.Analytics.Advanced.PartitionOptimizationContext" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics.Advanced" /><meta name="guid" content="240B10D" /><meta name="Description" content="Represents a Cross-Entropy context supporting the optimization of objective functions whose arguments are specific partitions of a given finite set of items." /><meta name="tocFile" content="../toc/IDBE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Partition<wbr />Optimization<wbr />Context Class</h1><div class="summary">
            Represents a Cross-Entropy context supporting
            the optimization of objective functions whose
            arguments are specific partitions
            of a given finite set of items.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="F249DE1E.htm">Novacta.Analytics.Advanced</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">PartitionOptimizationContext</span> : <span class="identifier">SystemPerformanceOptimizationContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">PartitionOptimizationContext</span>
	<span class="keyword">Inherits</span> <span class="identifier">SystemPerformanceOptimizationContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">PartitionOptimizationContext</span> <span class="keyword">sealed</span> : <span class="keyword">public</span> <span class="identifier">SystemPerformanceOptimizationContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">PartitionOptimizationContext</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">SystemPerformanceOptimizationContext</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="F04A1B18.htm">CrossEntropyContext</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">PartitionOptimizationContext</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p>
            Class <span class="selflink">PartitionOptimizationContext</span> derives from
            <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>, and defines
            a Cross-Entropy context able to solve combinatorial 
            problems aimed to identify the optimal partition of a set,
            given a specified criterion.
            </p><p>
            Class <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a> thoroughly 
            defines a system whose performance must be optimized. 
            Class <span class="selflink">PartitionOptimizationContext</span> specializes 
            the system by assuming that its performance,
            say <img alt="LaTeX equation" src="../media/latex_9424.svg" />, has domain included in the family of 
            those partitions
            in which the items of a given collection can be split.
            </p><p>
            The system's state-space 
            <img alt="LaTeX equation" src="../media/latex_9425.svg" />, i.e. the domain of 
            <img alt="LaTeX equation" src="../media/latex_9426.svg" />, can thus be represented as the Cartesian 
            product of 
            <img alt="LaTeX equation" src="../media/latex_9427.svg" /> copies of the set 
            <img alt="LaTeX equation" src="../media/latex_9428.svg" style="vertical-align: -4px" />, where <img alt="LaTeX equation" src="../media/latex_9429.svg" /> is the 
            number of available items, and <img alt="LaTeX equation" src="../media/latex_9430.svg" /> is the maximum
            number of parts allowed in the partitions under study. 
            An argument
            <img alt="LaTeX equation" src="../media/latex_9431.svg" style="vertical-align: -4px" /> defines a partition 
            by signaling that the <img alt="LaTeX equation" src="../media/latex_9432.svg" style="vertical-align: -4px" />-th item is included in
            the <img alt="LaTeX equation" src="../media/latex_9433.svg" style="vertical-align: -4px" />-th part
            by setting <img alt="LaTeX equation" src="../media/latex_9434.svg" style="vertical-align: -5px" />, with <img alt="LaTeX equation" src="../media/latex_9435.svg" style="vertical-align: -4px" />.
            </p><p>
            Notice that <img alt="LaTeX equation" src="../media/latex_9436.svg" /> represents a maximum number of parts.
            It means that there exist arguments in which, for a 
            given <img alt="LaTeX equation" src="../media/latex_9437.svg" style="vertical-align: -4px" />, no entries 
            will be equal to <img alt="LaTeX equation" src="../media/latex_9438.svg" style="vertical-align: -4px" />.
            </p><p>
            A Cross-Entropy optimizer is designed to identify the 
            optimal arguments at which the performance function of a
            complex system reaches
            its minimum or maximum value.
            To get the optimal state, the system's state-space 
            <img alt="LaTeX equation" src="../media/latex_9439.svg" />, i.e. the domain of 
            <img alt="LaTeX equation" src="../media/latex_9440.svg" />, is traversed iteratively 
            by sampling, at each iteration, from 
            a specific density function, member of a parametric 
            family  
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9441.svg" /><br /><br />
            where <img alt="LaTeX equation" src="../media/latex_9442.svg" style="vertical-align: -1px" /> is 
            a possible argument of <img alt="LaTeX equation" src="../media/latex_9443.svg" />, 
            and <img alt="LaTeX equation" src="../media/latex_9444.svg" style="vertical-align: -1px" /> is the set of 
            allowable values for parameter <img alt="LaTeX equation" src="../media/latex_9445.svg" />.
            The parameter exploited at a given iteration <img alt="LaTeX equation" src="../media/latex_9446.svg" />
            is referred to
            as the <i>reference</i> parameter of such iteration and indicated
            as <img alt="LaTeX equation" src="../media/latex_9447.svg" style="vertical-align: -2px" />.
            A minimum number
            of iterations, say <img alt="LaTeX equation" src="../media/latex_9448.svg" />, must be executed, while a 
            number of them up to a maximum, say <img alt="LaTeX equation" src="../media/latex_9449.svg" />, is allowed.
            </p><p><b>Implementing a context for optimizing on set partitions</b></p><p>
            The Cross-Entropy method 
            provides an iterative multi step procedure. In the context
            of combinatorial optimization, at each 
            iteration <img alt="LaTeX equation" src="../media/latex_9450.svg" /> a <i>sampling step</i>
            is executed in order to generate diverse candidate arguments of 
            the objective function, sampled from a distribution 
            characterized by the <i>reference parameter</i> of the iteration,
            say <img alt="LaTeX equation" src="../media/latex_9451.svg" style="vertical-align: -2px" />. 
            Such sample is thus exploited in the <i>updating step</i> in which 
            a new <i>reference</i> 
            parameter <img alt="LaTeX equation" src="../media/latex_9452.svg" style="vertical-align: -2px" /> is 
            identified to modify the distribution from which the samples 
            will be obtained in the next iteration: such modification is
            executed in order to improve 
            the probability of sampling relevant arguments, i.e. those 
            arguments corresponding to the function values of interest
            (See the documentation of 
            class <a href="298402DD.htm">CrossEntropyProgram</a> for a 
            thorough discussion of the Cross-Entropy method). 
            </p><p>
            When the Cross-Entropy method is applied in an optimization
            context, a final <i>optimizing step</i> is executed, in which  
            the argument corresponding to the searched extremum  
            is effectively identified.
            </p><p>These steps have been implemented as follows.</p><p><b><i>Sampling step</i></b></p><p>
            In a <span class="selflink">PartitionOptimizationContext</span>, the parametric 
            family <img alt="LaTeX equation" src="../media/latex_9453.svg" style="vertical-align: -1px" /> is outlined as follows.
            Each component <img alt="LaTeX equation" src="../media/latex_9454.svg" style="vertical-align: -5px" /> of an argument
            <img alt="LaTeX equation" src="../media/latex_9455.svg" style="vertical-align: -4px" /> of <img alt="LaTeX equation" src="../media/latex_9456.svg" />
            is attached to a independent
            finite discrete distribution having parameter <img alt="LaTeX equation" src="../media/latex_9457.svg" style="vertical-align: -5px" />,
            where, for <img alt="LaTeX equation" src="../media/latex_9458.svg" style="vertical-align: -4px" />,
            <img alt="LaTeX equation" src="../media/latex_9459.svg" style="vertical-align: -5px" /> is the probability of 
            including the <img alt="LaTeX equation" src="../media/latex_9460.svg" style="vertical-align: -4px" />-th item to the 
            <img alt="LaTeX equation" src="../media/latex_9461.svg" style="vertical-align: -4px" />-th part.
            The Cross-Entropy sampling parameter <img alt="LaTeX equation" src="../media/latex_9462.svg" />
            can thus be  
            represented as the <img alt="LaTeX equation" src="../media/latex_9463.svg" /> matrix
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9464.svg" /><br /><br />.
            </p><p>
            The parametric space <img alt="LaTeX equation" src="../media/latex_9465.svg" style="vertical-align: -1px" /> should 
            include a parameter under which all possible states must have 
            a real chance of being selected: this parameter
            is specified as the initial <i>reference</i> parameter
            <img alt="LaTeX equation" src="../media/latex_9466.svg" style="vertical-align: -2px" />.
            A <span class="selflink">PartitionOptimizationContext</span> defines 
            <img alt="LaTeX equation" src="../media/latex_9467.svg" style="vertical-align: -2px" /> as a constant matrix whose entries are all
            equal to <img alt="LaTeX equation" src="../media/latex_9468.svg" style="vertical-align: -4px" />. 
            </p><p><b><i>Updating step</i></b></p><p>
            At iteration <img alt="LaTeX equation" src="../media/latex_9469.svg" />, let us represent the sample drawn 
            as <img alt="LaTeX equation" src="../media/latex_9470.svg" style="vertical-align: -5px" />, where <img alt="LaTeX equation" src="../media/latex_9471.svg" /> is the 
            Cross-Entropy sample size, and the <img alt="LaTeX equation" src="../media/latex_9472.svg" />-th sample point
            is the sequence <img alt="LaTeX equation" src="../media/latex_9473.svg" style="vertical-align: -5px" />.
            The parameter's 
            updating formula is, 
            for <img alt="LaTeX equation" src="../media/latex_9474.svg" style="vertical-align: -4px" /> and
            <img alt="LaTeX equation" src="../media/latex_9475.svg" style="vertical-align: -4px" />,
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9476.svg" /><br /><br />
            where <img alt="LaTeX equation" src="../media/latex_9477.svg" style="vertical-align: -2px" />
            is the elite sample in this context, i.e. the set of sample
            points having the lowest performances observed during the <img alt="LaTeX equation" src="../media/latex_9478.svg" />-th
            iteration, if minimizing, the highest ones, otherwise, while
            the <img alt="LaTeX equation" src="../media/latex_9479.svg" /> functions are indicators of the specified sets.
            </p><p><i>Applying a smoothing scheme to updated parameters</i></p><p>
            In a <span class="selflink">PartitionOptimizationContext</span>, 
            the sampling parameter 
            is smoothed applying the following formula
            (See Rubinstein and Kroese, 
            Remark 5.2, p. 189<sup class="citation"><a href="#cite1">[1]</a></sup>):
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9480.svg" /><br /><br />
            where <img alt="LaTeX equation" src="../media/latex_9481.svg" style="vertical-align: -1px" />.
            </p><p><b><i>Optimizing step</i></b></p><p>
            The optimizing step is executed after that the underlying 
            Cross-Entropy program 
            has converged. 
            In a specified context, it is expected that, 
            given a reference parameter 
            <img alt="LaTeX equation" src="../media/latex_9482.svg" />, a corresponding reasonable value could be 
            guessed for the optimizing argument of <img alt="LaTeX equation" src="../media/latex_9483.svg" />, 
            say <img alt="LaTeX equation" src="../media/latex_9484.svg" style="vertical-align: -4px" />, with <img alt="LaTeX equation" src="../media/latex_9485.svg" /> a function
            from <img alt="LaTeX equation" src="../media/latex_9486.svg" style="vertical-align: -1px" /> to <img alt="LaTeX equation" src="../media/latex_9487.svg" />. 
            Function <img alt="LaTeX equation" src="../media/latex_9488.svg" /> is defined by overriding method 
            <a href="3142B460.htm">GetOptimalState(DoubleMatrix)</a> 
            that should return <img alt="LaTeX equation" src="../media/latex_9489.svg" style="vertical-align: -4px" />
            given a specific reference parameter <img alt="LaTeX equation" src="../media/latex_9490.svg" />.
            </p><p>
            Given the optimal parameter (the parameter corresponding to the 
            last iteration <img alt="LaTeX equation" src="../media/latex_9491.svg" /> executed by the algorithm before 
            stopping),
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9492.svg" /><br /><br />
            the argument at which the searched extremum is considered 
            as reached according to the Cross-Entropy method will be
            returned as follows.
            For each <img alt="LaTeX equation" src="../media/latex_9493.svg" style="vertical-align: -4px" />, the probabilities 
            <img alt="LaTeX equation" src="../media/latex_9494.svg" style="vertical-align: -5px" /> are sorted in increasing order, 
            say obtaining the 
            following ordering:
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9495.svg" /><br /><br />
            with the corresponding sequence of indexes
            <img alt="LaTeX equation" src="../media/latex_9496.svg" style="vertical-align: -5px" />,
            such that
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9497.svg" /><br /><br />
            Hence <img alt="LaTeX equation" src="../media/latex_9498.svg" style="vertical-align: -4px" /> will return
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9499.svg" /><br /><br />
            where 
            <img alt="LaTeX equation" src="../media/latex_9500.svg" style="vertical-align: -5px" /> is 
            <img alt="LaTeX equation" src="../media/latex_9501.svg" style="vertical-align: -5px" />.
            This is equivalent to include, in the optimal partition,
            the <img alt="LaTeX equation" src="../media/latex_9502.svg" style="vertical-align: -4px" />-th item to the part having the maximum
            probability of being assigned to <img alt="LaTeX equation" src="../media/latex_9503.svg" style="vertical-align: -4px" /> given 
            parameter <img alt="LaTeX equation" src="../media/latex_9504.svg" style="vertical-align: -2px" />.
            </p><p><b><i>Stopping criterion</i></b></p><p>
            A <span class="selflink">PartitionOptimizationContext</span> never stops before
            executing a number of iterations less than 
            <a href="44E3AF08.htm">MinimumNumberOfIterations</a>, and always stops
            if such number is greater than or equal to
            <a href="CB60FB7E.htm">MaximumNumberOfIterations</a>. 
            </p><p>
            For intermediate iterations, method <a href="CDFE8B87.htm">StopAtIntermediateIteration(Int32, LinkedList<span id="LST240B10D_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST240B10D_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, LinkedList<span id="LST240B10D_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LST240B10D_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> is
            called to check if a Cross-Entropy program executing in this
            context should stop or not.
            </p><p>
            In a <span class="selflink">PartitionOptimizationContext</span>, the method 
            analyzes the currently updated reference parameter, 
            say 
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9505.svg" /><br /><br />
            as follows. 
            Define the sequence
            <img alt="LaTeX equation" src="../media/latex_9506.svg" style="vertical-align: -5px" />
            such that, for <img alt="LaTeX equation" src="../media/latex_9507.svg" style="vertical-align: -4px" />,
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9508.svg" /><br /><br />
            If condition
            <br /><br /><img alt="LaTeX equation" src="../media/latex_9509.svg" /><br /><br />
            can be verified,
            the method returns <span class="code">true</span>; otherwise <span class="code">false</span> is returned.
            Equivalently, the algorithm converges if the indexes of 
            the largest probabilities in each of the <img alt="LaTeX equation" src="../media/latex_9510.svg" /> columns of 
            the reference parameter coincide
            <img alt="LaTeX equation" src="../media/latex_9511.svg" /> times in a row of iterations.
            </p><p><b>Instantiating a context for optimizing on set partitions</b></p><p> 
            At instantiation, the constructor of 
            a <span class="selflink">PartitionOptimizationContext</span> object
            will receive information about the optimization under study by
            means of parameters representing the objective function
            <img alt="LaTeX equation" src="../media/latex_9512.svg" />, the number of items
            <img alt="LaTeX equation" src="../media/latex_9513.svg" />, the maximum number of parts
            <img alt="LaTeX equation" src="../media/latex_9514.svg" />, the extremes of the allowed range of
            intermediate iterations,
            <img alt="LaTeX equation" src="../media/latex_9515.svg" /> and <img alt="LaTeX equation" src="../media/latex_9516.svg" />, and a constant stating 
            if the optimization goal is a maximization or a minimization.
            In addition, the smoothing parameter <img alt="LaTeX equation" src="../media/latex_9517.svg" />
            is also 
            passed to the constructor.
            </p><p>
            After construction, <img alt="LaTeX equation" src="../media/latex_9518.svg" />
            and <img alt="LaTeX equation" src="../media/latex_9519.svg" />
            can be inspected, respectively, via properties
            <a href="44E3AF08.htm">MinimumNumberOfIterations</a> and
            <a href="CB60FB7E.htm">MaximumNumberOfIterations</a>. 
            The smoothing coefficient <img alt="LaTeX equation" src="../media/latex_9520.svg" /> is also
            available via property
            <a href="CDEB9679.htm">ProbabilitySmoothingCoefficient</a>.
            Combination constants <img alt="LaTeX equation" src="../media/latex_9521.svg" /> and <img alt="LaTeX equation" src="../media/latex_9522.svg" /> are returned by 
            <a href="6BFCB280.htm">StateDimension</a> and
            <a href="8566F1F4.htm">PartitionDimension</a>, respectively.
            In addition, 
            property 
            <a href="847A8F0F.htm">OptimizationGoal</a> 
            signals that the performance function
            must be maximized if it 
            evaluates to the constant <a href="D5F83433.htm">Maximization</a>, or 
            that a minimization is requested
            if it evaluates to
            the constant <a href="D5F83433.htm">Minimization</a>.
            </p><p>
            To evaluate the objective function <img alt="LaTeX equation" src="../media/latex_9523.svg" /> at a
            specific argument, one can call method
            <a href="1AF89526.htm">Performance(DoubleMatrix)</a>
            passing the argument as a parameter.
            It is expected that the objective function 
            will accept a row 
            vector having entries included in <img alt="LaTeX equation" src="../media/latex_9524.svg" style="vertical-align: -4px" /> as 
            a valid representation of an argument.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><p>
            In the following example, an optimal partition of 12 items is discovered
            given 
            an artificial data set regarding the items under study.
            </p><p> 
            The optimality criterion is defined as the minimization
            of the Davies-Bouldin Index.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Discovering the optimal partition of a data set by Davies-Bouldin Index minimization.</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;
using Novacta.Analytics.Advanced;

namespace Novacta.Analytics.CodeExamples.Advanced
{
    public class PartitionOptimizationContextExample0  
    {
        public void Main()
        {
            // Set the number of items and features under study.
            const int numberOfItems = 12;
            int numberOfFeatures = 7;

            // Create a matrix that will represent
            // an artificial data set,
            // having 12 items (rows) and 7 features (columns).
            // This will store the observations which
            // partition discovery will be based on.
            var data = DoubleMatrix.Dense(
                numberOfRows: numberOfItems,
                numberOfColumns: numberOfFeatures);

            // Fill the data rows by sampling from a different 
            // distribution while, respectively, drawing observations 
            // for items 0 to 3, 4 to 7, and 8 to 11: these will be the 
            // three different parts expected to be included in the 
            // optimal partition.
            double mu = 1.0;
            var g = new GaussianDistribution(mu: mu, sigma: .01);

            IndexCollection range = IndexCollection.Range(0, 3);
            for (int j = 0; j &lt; numberOfFeatures; j++)
            {
                data[range, j] = g.Sample(sampleSize: range.Count);
            }

            mu += 5.0;
            g.Mu = mu;
            range = IndexCollection.Range(4, 7);
            for (int j = 0; j &lt; numberOfFeatures; j++)
            {
                data[range, j] = g.Sample(sampleSize: range.Count);
            }

            mu += 5.0;
            g.Mu = mu;
            range = IndexCollection.Range(8, 11);
            for (int j = 0; j &lt; numberOfFeatures; j++)
            {
                data[range, j] = g.Sample(sampleSize: range.Count);
            }

            Console.WriteLine("The data set:");
            Console.WriteLine(data);

            // Define the optimization problem as
            // the minimization of the Davies-Bouldin Index
            // of a candidate partition.
            double objectiveFunction(DoubleMatrix x)
            {
                // An argument x has 12 entries, each belonging
                // to the set {0,...,k-1}, where k is the
                // maximum number of allowed parts, so
                // x[j]==i signals that, at x, item j
                // has been assigned to part i.
                IndexPartition&lt;double&gt; selected =
                    IndexPartition.Create(x);

                var performance = IndexPartition.DaviesBouldinIndex(
                    data: data,
                    partition: selected);

                return performance;
            }

            var optimizationGoal = OptimizationGoal.Minimization;

            // Define the maximum number of parts allowed in the
            // partition to be discovered.
            int maximumNumberOfParts = 3;

            // Create the required context.
            var context = new PartitionOptimizationContext(
                objectiveFunction: objectiveFunction,
                stateDimension: numberOfItems,
                partitionDimension: maximumNumberOfParts,
                probabilitySmoothingCoefficient: .8,
                optimizationGoal: optimizationGoal,
                minimumNumberOfIterations: 3,
                maximumNumberOfIterations: 1000);

            // Create the optimizer.
            var optimizer = new SystemPerformanceOptimizer()
            {
                PerformanceEvaluationParallelOptions = { MaxDegreeOfParallelism = -1 },
                SampleGenerationParallelOptions = { MaxDegreeOfParallelism = -1 }
            };

            // Set optimization parameters.
            double rarity = 0.01;
            int sampleSize = 2000;

            // Solve the problem.
            var results = optimizer.Optimize(
                context,
                rarity,
                sampleSize);

            IndexPartition&lt;double&gt; optimalPartition =
                IndexPartition.Create(results.OptimalState);

            // Show the results.
            Console.WriteLine(
                "The Cross-Entropy optimizer has converged: {0}.",
                results.HasConverged);

            Console.WriteLine();
            Console.WriteLine("Initial guess parameter:");
            Console.WriteLine(context.InitialParameter);

            Console.WriteLine();
            Console.WriteLine("The minimizer of the performance is:");
            Console.WriteLine(results.OptimalState);

            Console.WriteLine();
            Console.WriteLine(
                "The optimal partition is:");
            Console.WriteLine(optimalPartition);

            Console.WriteLine();
            Console.WriteLine("The minimum performance is:");
            Console.WriteLine(results.OptimalPerformance);

            Console.WriteLine();
            Console.WriteLine("The Dunn Index for the optimal partition is:");
            var di = IndexPartition.DunnIndex(
                data,
                optimalPartition);
            Console.WriteLine(di);
        }
    }
}

// Executing method Main() produces the following output:
// 
// The data set:
// 1.00443413       1.00220674       0.998272394      1.00269053       0.996789222      1.00089097       1.00413588       
// 0.997933228      0.993625618      1.01576579       1.02088407       1.00505243       1.00840849       0.996769171      
// 1.01157148       0.993373518      1.01292534       1.00980881       0.985070715      0.999051426      1.00490173       
// 0.984314579      0.978064595      0.991518637      0.992424337      1.01228209       0.995401166      0.990271674      
// 5.99388101       5.98782501       5.99234977       6.00720306       5.99391035       5.99483769       6.01287673       
// 5.9959073        6.00295384       5.99060985       6.00210944       5.9964148        6.00144991       5.9847536        
// 6.00236976       6.00235032       6.00327886       6.01032821       5.98648754       6.0157819        5.98911535       
// 6.01095691       5.98513671       5.99782074       5.989109         6.0223965        6.01074213       6.00275269       
// 10.9874226       11.0066379       11.0105315       10.9944047       10.9989296       11.009567        10.9938497       
// 11.0044736       10.9993181       11.0126423       10.9974367       10.9946015       10.9885624       11.0013196       
// 10.9766909       10.9908217       11.012074        10.9924937       10.9886034       11.007384        10.9891406       
// 10.9974049       10.9925417       10.9969562       11.0226839       10.9973201       11.007219        11.005672        
// 
// 
// The Cross-Entropy optimizer has converged: True.
// 
// Initial guess parameter:
// 0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      
// 0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      
// 0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      0.333333333      
// 
// 
// 
// The minimizer of the performance is:
// 2                2                2                2                2                2                2                2                0                0                0                0                
// 
// 
// 
// The optimal partition is:
// [(0),  8, 9, 10, 11]
// [(2),  0, 1, 2, 3, 4, 5, 6, 7]
// 
// 
// The minimum performance is:
// 0.3343841188131412
// 
// The Dunn Index for the optimal partition is:
// 0.9961176310964293</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="B5AC09E4.htm">PartitionOptimizationContext</a></td><td>
            Initializes a new instance of the 
            <span class="selflink">PartitionOptimizationContext</span> class 
            aimed to optimize the specified 
            objective function,
            with the given optimization goal, 
            range of iterations, and probability smoothing coefficient.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDQEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="66F284A1.htm">EliteSampleDefinition</a></td><td>
            Gets the elite sample definition for this context.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="1FE43CBC.htm">InitialParameter</a></td><td>
            Gets the parameter initially exploited to sample from 
            the state-space of the system defined by this context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="CB60FB7E.htm">MaximumNumberOfIterations</a></td><td>
            Gets the maximum number of iterations 
            allowed by this context. 
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="44E3AF08.htm">MinimumNumberOfIterations</a></td><td>
            Gets the minimum number of iterations 
            required by this context.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="847A8F0F.htm">OptimizationGoal</a></td><td>
            Gets a constant specifying if the performance function 
            in this context must be minimized or maximized.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="8566F1F4.htm">PartitionDimension</a></td><td>
            Gets the dimension of a partition represented by a 
            system's state
            when 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executes in this
            context.
            </td></tr><tr><td><a href="CDEB9679.htm">ProbabilitySmoothingCoefficient</a></td><td>
            Gets the coefficient that defines the smoothing scheme 
            for the probabilities of the Cross-Entropy parameters 
            exploited by this context.
            </td></tr><tr><td><a href="6BFCB280.htm">StateDimension</a></td><td>
            Gets or sets the dimension of a vector representing a 
            system's state
            when 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executes in this
            context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="876F94ED.htm">TraceExecution</a></td><td>
            Gets or sets a value indicating whether the 
            execution of this context must be traced.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDBEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="3142B460.htm">GetOptimalState</a></td><td>
            Gets the argument that optimizes the objective function
            in this context, according to the specified 
            Cross-Entropy sampling parameter.
            <br />(Overrides <a href="9B360782.htm">SystemPerformanceOptimizationContext<span id="LST240B10D_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetOptimalState(DoubleMatrix)</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="6649D293.htm">OnExecutedIteration</a></td><td>
            Called after completion of each iteration of 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this
            context.
            <br />(Overrides <a href="E2DFB2BB.htm">SystemPerformanceOptimizationContext<span id="LST240B10D_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>OnExecutedIteration(Int32, DoubleMatrix, LinkedList<span id="LST240B10D_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST240B10D_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, LinkedList<span id="LST240B10D_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LST240B10D_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="4CD42C7C.htm">PartialSample</a></td><td>
            Draws the specified subset of a sample from a distribution 
            characterized by the given parameter, using the stated
            random number generator. Used when executing the sampling
            step of a  <a href="298402DD.htm">CrossEntropyProgram</a> running
            in this context.
            <br />(Overrides <a href="6D600898.htm">CrossEntropyContext<span id="LST240B10D_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PartialSample(<span id="LST240B10D_11" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST240B10D_12" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Tuple<span id="LST240B10D_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32<span id="LST240B10D_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, RandomNumberGenerator, DoubleMatrix, Int32)</a>)</td></tr><tr><td><a href="8756D506.htm">Performance</a></td><td>
            Computes the objective function at a specified argument
            as the performance defined in this context.
            <br />(Overrides <a href="1AF89526.htm">CrossEntropyContext<span id="LST240B10D_15" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Performance(DoubleMatrix)</a>)</td></tr><tr><td><a href="E102DD65.htm">SmoothParameter</a></td><td>
            Provides the smoothing of the updated sampling parameter
            of a <a href="E252E84.htm">SystemPerformanceOptimizer</a>  
            executing in this context.        
            <br />(Overrides <a href="DB205520.htm">SystemPerformanceOptimizationContext<span id="LST240B10D_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SmoothParameter(LinkedList<span id="LST240B10D_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LST240B10D_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="CDFE8B87.htm">StopAtIntermediateIteration</a></td><td>
            Specifies conditions 
            under which 
            a <a href="E252E84.htm">SystemPerformanceOptimizer</a> executing in 
            this context should be considered as terminated after
            completing an intermediate iteration.
            <br />(Overrides <a href="F068CBEA.htm">SystemPerformanceOptimizationContext<span id="LST240B10D_19" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>StopAtIntermediateIteration(Int32, LinkedList<span id="LST240B10D_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST240B10D_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, LinkedList<span id="LST240B10D_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LST240B10D_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="94DC9B0B.htm">StopExecution</a></td><td>
            Specifies conditions 
            under which 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this 
            context should be considered 
            as terminated.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="CD947DDD.htm">UpdateLevel</a></td><td>
            Updates the performance level for the current iteration 
            of a  <a href="298402DD.htm">CrossEntropyProgram</a> executing in
            this context
            and determines the corresponding elite sample.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="3934A0AF.htm">UpdateParameter</a></td><td>
            Updates the 
            sampling parameter attending the generation 
            of the sample in the next iteration of a 
             <a href="298402DD.htm">CrossEntropyProgram</a> executing in 
             this context.
            <br />(Overrides <a href="4AE2243.htm">CrossEntropyContext<span id="LST240B10D_24" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UpdateParameter(LinkedList<span id="LST240B10D_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LST240B10D_26" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, DoubleMatrix)</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Bibliography</h2><div id="IDDPBCSection"><div><span id="cite1">[1] </span><span class="bibliographyAuthor">Rubinstein, R.Y. and Kroese, D.P.</span>, <span class="bibliographyTitle">The Cross-Entropy Method, A unified Approach to Combinatorial Optimization, Monte-Carlo Simulation, and Machine Learning</span>, <span class="bibliographyPublisher">Springer, New York. (2004)</span></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4 class="quickLinkHeader">Reference</h4><div><a href="F249DE1E.htm">Novacta.Analytics.Advanced Namespace</a></div><h4 class="quickLinkHeader">Other Resources</h4><div><a href="https://en.wikipedia.org/wiki/Partition_of_a_set" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Partition_of_a_set</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Bibliography</a></li><li><a class="quickLink">See Also</a><ul class="menu"><li><a class="quickLink">Reference</a></li><li><a class="quickLink">Other Resources</a></li></ul></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>