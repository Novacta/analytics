<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ComplexMatrix.Item(Int32) Property</title><meta name="Title" content="Item(Int32)" /><meta name="Help.Id" content="P:Novacta.Analytics.ComplexMatrix.Item(System.Int32)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics" /><meta name="guid" content="454B7288" /><meta name="Description" content="Gets or sets the element of this instance corresponding to the specified linear index." /><meta name="tocFile" content="../toc/IDZBKAE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Complex<wbr />Matrix<span id="LST639532E5_0" data-languageSpecificText="cpp=::|nu=."></span>Item(Int<wbr />32) Property</h1><div class="summary">
            Gets or sets the element of this instance corresponding to the specified linear
            index.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="2406EB43.htm">Novacta.Analytics</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">Complex</span> <span class="keyword">this</span>[
	<span class="identifier">int</span> <span class="parameter">linearIndex</span>
] { <span class="keyword">get</span>; <span class="keyword">set</span>; }</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Default</span> <span class="keyword">Property</span> <span class="identifier">Item</span> ( 
	<span class="parameter">linearIndex</span> <span class="keyword">As</span> <span class="identifier">Integer</span>
) <span class="keyword">As</span> <span class="identifier">Complex</span>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">virtual</span> <span class="keyword">property</span> <span class="identifier">Complex</span> <span class="keyword">default</span>[<span class="identifier">int</span> <span class="parameter">linearIndex</span>] {
	<span class="identifier">Complex</span> <span class="keyword">get</span> (<span class="identifier">int</span> <span class="parameter">linearIndex</span>) <span class="keyword">sealed</span>;
	<span class="keyword">void</span> <span class="keyword">set</span> (<span class="identifier">int</span> <span class="parameter">linearIndex</span>, <span class="identifier">Complex</span> <span class="parameter">value</span>) <span class="keyword">sealed</span>;
}</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">abstract</span> <span class="identifier">Item</span> : <span class="identifier">Complex</span> <span class="keyword">with</span> <span class="keyword">get</span>, <span class="keyword">set</span>
<span class="keyword">override</span> <span class="identifier">Item</span> : <span class="identifier">Complex</span> <span class="keyword">with</span> <span class="keyword">get</span>, <span class="keyword">set</span></code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">linearIndex</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>The zero-based linear index of the element to get or set.</dd></dl><h4 class="quickLinkHeader">Property Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.numerics.complex" target="_blank" rel="noopener noreferrer">Complex</a><br />The element corresponding to the specified linear index.<h4 class="quickLinkHeader">Implements</h4><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item" target="_blank" rel="noopener noreferrer">IList<span id="LST639532E5_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST639532E5_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST639532E5_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Item<span id="LST639532E5_4" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32<span id="LST639532E5_5" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a><br /><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item" target="_blank" rel="noopener noreferrer">IReadOnlyList<span id="LST639532E5_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST639532E5_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST639532E5_8" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Item<span id="LST639532E5_9" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32<span id="LST639532E5_10" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a><br /></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDDCSection"><p>
             Let <img alt="LaTeX equation" src="../media/latex_5459.svg" /> be a matrix, and consider its generic entry
             <br /><br /><img alt="LaTeX equation" src="../media/latex_5460.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_5461.svg" /> and  
             <img alt="LaTeX equation" src="../media/latex_5462.svg" /> are the 
             number of rows and columns of <img alt="LaTeX equation" src="../media/latex_5463.svg" />, respectively.
             </p><p>
             A <b><i>linear index</i></b> completely
             identifies an entry, 
             assuming that entries are linearly ordered following the 
             <a href="8568BD14.htm">ColumnMajor</a>
             data order. This means that entry <img alt="LaTeX equation" src="../media/latex_5464.svg" style="vertical-align: -5px" /> has linear
             index equal to <img alt="LaTeX equation" src="../media/latex_5465.svg" style="vertical-align: -4px" />, and matrix entries can be enumerated as
             follows:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_5466.svg" /><br /><br />    
             where <img alt="LaTeX equation" src="../media/latex_5467.svg" style="vertical-align: -4px" /> is the <a href="621552FD.htm">Count</a> of the matrix.
             </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDECSection"><p>
            In the following example, a matrix element is accessed using its linear
            index.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;
using System.Numerics;

namespace Novacta.Analytics.CodeExamples
{
    public class ComplexLinearIndexerExample0  
    {
        public void Main()
        {
            // Create a matrix.
            var data = new Complex[8] {
                new(1, -1), new(5, -5),
                new(2, -2), new(6, -6),
                new(3, -3), new(7, -7),
                new(4, -4), new(8, -8)
            };
            var matrix = ComplexMatrix.Dense(4, 2, data, StorageOrder.RowMajor);
            Console.WriteLine("Initial data matrix:");
            Console.WriteLine(matrix);

            // Specify a linear index.
            int linearIndex = 3;
            Console.WriteLine();
            Console.WriteLine("Linear index: {0}", linearIndex);

            // Set the corresponding entry.
            matrix[linearIndex] = new Complex(40, -40);

            Console.WriteLine();
            Console.WriteLine("Updated data matrix:");
            Console.WriteLine(matrix);

            // Entries can also be accessed using a read-only wrapper of the matrix.
            ReadOnlyComplexMatrix readOnlyMatrix = matrix.AsReadOnly();

            Console.WriteLine();
            Console.WriteLine("Updated matrix entry:");
            Console.WriteLine(readOnlyMatrix[linearIndex]);
        }
    }
}

// Executing method Main() produces the following output:
// 
// Initial data matrix:
// (                1,               -1) (                5,               -5) 
// (                2,               -2) (                6,               -6) 
// (                3,               -3) (                7,               -7) 
// (                4,               -4) (                8,               -8) 
// 
// 
// 
// Linear index: 3
// 
// Updated data matrix:
// (                1,               -1) (                5,               -5) 
// (                2,               -2) (                6,               -6) 
// (                3,               -3) (                7,               -7) 
// (               40,              -40) (                8,               -8) 
// 
// 
// 
// Updated matrix entry:
// &lt;40; -40&gt;</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDFCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception" target="_blank" rel="noopener noreferrer">ArgumentOutOfRangeException</a></td><td><span class="parameter">linearIndex</span> is less than zero.<br />
            -or-<br /><span class="parameter">linearIndex</span> is equal to or greater than 
            the <a href="621552FD.htm">Count</a> of this instance.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4 class="quickLinkHeader">Reference</h4><div><a href="AFDA21E4.htm">ComplexMatrix Class</a></div><div><a href="94A5AE9A.htm">Item Overload</a></div><div><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div><h4 class="quickLinkHeader">Other Resources</h4><div><a href="http://en.wikipedia.org/wiki/Row-major_order#Column-major_order" target="_blank" rel="noopener noreferrer">http://en.wikipedia.org/wiki/Row-major_order#Column-major_order</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Property Value</a></li><li><a class="quickLink">Implements</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a><ul class="menu"><li><a class="quickLink">Reference</a></li><li><a class="quickLink">Other Resources</a></li></ul></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>