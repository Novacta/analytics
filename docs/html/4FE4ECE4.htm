<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NonMetricMultidimensionalScaling Class</title><meta name="Title" content="NonMetricMultidimensionalScaling" /><meta name="Help.Id" content="T:Novacta.Analytics.NonMetricMultidimensionalScaling" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics" /><meta name="guid" content="4FE4ECE4" /><meta name="Description" content="Represents a nonmetric multidimensional scaling analysis." /><meta name="tocFile" content="../toc/IDAE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Non<wbr />Metric<wbr />Multidimensional<wbr />Scaling Class</h1><div class="summary">
            Represents a nonmetric multidimensional scaling analysis.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="2406EB43.htm">Novacta.Analytics</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">NonMetricMultidimensionalScaling</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">NonMetricMultidimensionalScaling</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">NonMetricMultidimensionalScaling</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">NonMetricMultidimensionalScaling</span> = <span class="keyword">class</span> <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">NonMetricMultidimensionalScaling</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p><b>Instantiation</b></p><p>
            New instances of class <span class="selflink">NonMetricMultidimensionalScaling</span> can be 
            initialized by calling method 
            <a href="D692E4A6.htm">Analyze(DoubleMatrix, Nullable<span id="LST4FE4ECE4_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LST4FE4ECE4_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Double, Int32, Double)</a>, 
            which implements the Kruskal's nonmetric multidimensional scaling algorithm
            (Kruskal, 1964<sup class="citation"><a href="#cite1">[1]</a></sup>).
            </p><p><b>Results</b></p><p>
            The optimal configuration reached via a nonmetric multidimensional scaling analysis 
            can be inspected through property <a href="E779BF53.htm">Configuration</a>.
            </p><p>
            The stress at the optimal configuration is returned by property <a href="167DD106.htm">Stress</a>.
            </p><p>
            A boolean value indicating whether the optimization process has converged is 
            given via property <a href="9F39315C.htm">HasConverged</a>.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><p>
            In the following example, a nonmetric multidimensional scaling analysis is performed on 
            a dataset.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;

namespace Novacta.Analytics.CodeExamples
{
    public class NonMetricMultidimensionalScalingExample0  
    {
        public void Main()
        {
            // Create a matrix representing a data set about breakfast cereals
            // from Kellogg's manufacturer (adapted
            // from https://lib.stat.cmu.edu/datasets/1993.expo/).
            // It contains the following variables: number of calories,
            // protein, fat, sodium, fiber, carbo, sugars, shelf,
            // potassium, and vitamins of 23 food items.
            var data = DoubleMatrix.Dense(
                numberOfRows: 23,
                numberOfColumns: 10,
                data: [
                     70, 4, 1, 260,  9,  7,   5,  3,   320,  25,
                     50, 4, 0, 140, 14,  8,   0,  3,   330,  25,
                    110, 2, 0, 125,  1, 11,  14,  2,    30,  25,
                    100, 2, 0, 290,  1, 21,   2,  1,    35,  25,
                    110, 1, 0,  90,  1, 13,  12,  2,    20,  25,
                    110, 3, 3, 140,  4, 10,   7,  3,   160,  25,
                    110, 2, 0, 220,  1, 21,   3,  3,    30,  25,
                    110, 2, 1, 125,  1, 11,  13,  2,    30,  25,
                    110, 1, 0, 200,  1, 14,  11,  1,    25,  25,
                    100, 3, 0,   0,  3, 14,   7,  2,   100,  25,
                    120, 3, 0, 240,  5, 14,  12,  3,   190,  25,
                    110, 2, 1, 170,  1, 17,   6,  3,    60, 100,
                    140, 3, 1, 170,  2, 20,   9,  3,    95, 100,
                    160, 3, 2, 150,  3, 17,  13,  3,   160,  25,
                    120, 2, 1, 190,  0, 15,   9,  2,    40,  25,
                    140, 3, 2, 220,  3, 21,   7,  3,   130,  25,
                    90 , 3, 0, 170,  3, 18,   2,  3,    90,  25,
                    100, 3, 0, 320,  1, 20,   3,  3,    45, 100,
                    120, 3, 1, 210,  5, 14,  12,  2,   240,  25,
                     90, 2, 0,   0,  2, 15,   6,  3,   110,  25,
                    110, 2, 0, 290,  0, 22,   3,  1,    35,  25,
                    110, 2, 1,  70,  1,  9,  15,  2,    40,  25,
                    110, 6, 0, 230,  1, 16,   3,  1,    55,  25],
                storageOrder: StorageOrder.RowMajor);

            // Set variable names.
            string[] variables = [
                "Calories",
                "Protein",
                "Fat",
                "Sodium",
                "Fiber",
                "Carbo",
                "Sugars",
                "Shelf",
                "Potassium",
                "Vitamins"];

            for (int j = 0; j &lt; 10; j++)
            {
                data.SetColumnName(j, variables[j]);
            }

            // Create a matrix of dissimilarities among data items.
            var dissimilarities = Distance.Euclidean(data);

            // Define the dimension of the configuration of points in
            // the target space.
            // Passing null, the dimension of the configuration is
            // automatically selected.
            int? configurationDimension = 2;

            // Define the Minkowski metric order.
            double minkowskiMetricOrder = 2.0;

            // Execute the nonmetric MDS analysis.
            var results =
                NonMetricMultidimensionalScaling.Analyze(
                    dissimilarities,
                    configurationDimension,
                    minkowskiMetricOrder,
                    maximumNumberOfIterations: 1000,
                    terminationTolerance: 1e-5);

            // Display the optimal configuration.
            Console.WriteLine("Optimal configuration:");
            Console.WriteLine(results.Configuration);            

            // Display the stress at the optimal configuration.
            Console.WriteLine("Optimal Stress:");
            Console.WriteLine(results.Stress);
            Console.WriteLine();

            // Display a value indicating if the optimization algorithm
            // has converged.
            Console.WriteLine("Optimization convergence:");
            Console.WriteLine(results.HasConverged);
        }
    }
}

// Executing method Main() produces the following output:
// 
// Optimal configuration:
// -1.89597717      0.399918635      
// -1.86551251      -0.596670572     
// 0.656104497      -0.26619972      
// 0.433728616      0.965645243      
// 0.809863242      -0.534262198     
// -0.411350455     -0.345063417     
// 0.504565685      0.437312593      
// 0.656104502      -0.266199726     
// 0.582483485      0.314334039      
// 0.361236467      -1.35424363      
// -0.771641727     0.386965341      
// 0.395305696      -0.0166611174    
// 0.0151118461     -0.0992387674    
// -0.492183217     -0.240436513     
// 0.481770856      0.220395765      
// -0.265464163     0.284648942      
// 0.15438451       -0.0190871902    
// 0.255735523      1.33994932       
// -1.11740079      0.127886757      
// 0.203934174      -1.41007108      
// 0.430348896      0.964276751      
// 0.611922672      -0.771224027     
// 0.266929358      0.478024576      
// 
// 
// Optimal Stress:
// 0.04844361733647352
// 
// Optimization convergence:
// True</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDHEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="E779BF53.htm">Configuration</a></td><td>
            Gets the optimal configuration of points of this instance.
            </td></tr><tr><td><a href="9F39315C.htm">HasConverged</a></td><td>
            Gets a value indicating whether the optimization process has converged.
            </td></tr><tr><td><a href="167DD106.htm">Stress</a></td><td>
            Gets the stress at the <a href="E779BF53.htm">Configuration</a> of this instance.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="D692E4A6.htm">Analyze</a></td><td>
            Executes a nonmetric multidimensional scaling analysis.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Bibliography</h2><div id="IDFBBCSection"><div><span id="cite1">[1] </span><span class="bibliographyAuthor">Kruskal, J.B.</span>, <span class="bibliographyTitle">Nonmetric multidimensional scaling: A numerical method</span>, <span class="bibliographyPublisher">in: Psychometrika, 29, pp. 115-129. (1964)</span>, <a href="https://doi.org/10.1007/BF02289694" target="_blank" rel="noopener noreferrer">https://doi.org/10.1007/BF02289694</a></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4 class="quickLinkHeader">Reference</h4><div><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div><h4 class="quickLinkHeader">Other Resources</h4><div><a href="https://en.wikipedia.org/wiki/Multidimensional_scaling#Non-metric_multidimensional_scaling_(NMDS)" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Multidimensional_scaling#Non-metric_multidimensional_scaling_(NMDS)</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Bibliography</a></li><li><a class="quickLink">See Also</a><ul class="menu"><li><a class="quickLink">Reference</a></li><li><a class="quickLink">Other Resources</a></li></ul></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>