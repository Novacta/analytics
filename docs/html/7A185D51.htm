<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>SpectralDecomposition.Decompose(DoubleMatrix, Boolean, DoubleMatrix) Method</title><meta name="Title" content="Decompose(DoubleMatrix, Boolean, DoubleMatrix)" /><meta name="Help.Id" content="M:Novacta.Analytics.Advanced.SpectralDecomposition.Decompose(Novacta.Analytics.DoubleMatrix,System.Boolean,Novacta.Analytics.DoubleMatrix@)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics.Advanced" /><meta name="guid" content="7A185D51" /><meta name="Description" content="Computes eigenvalues and eigenvectors of the specified symmetric real matrix." /><meta name="tocFile" content="../toc/IDAAQBE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Spectral<wbr />Decomposition<span id="LST8C74EC6F_0" data-languageSpecificText="cpp=::|nu=."></span>Decompose(Double<wbr />Matrix, Boolean, Double<wbr />Matrix<span id="LST8C74EC6F_1" data-languageSpecificText="cpp=%"></span>) Method</h1><div class="summary">
            Computes eigenvalues and eigenvectors of the 
            specified symmetric real matrix.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="F249DE1E.htm">Novacta.Analytics.Advanced</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">DoubleMatrix</span> <span class="identifier">Decompose</span>(
	<span class="identifier">DoubleMatrix</span> <span class="parameter">matrix</span>,
	<span class="identifier">bool</span> <span class="parameter">lowerTriangularPart</span>,
	<span class="keyword">out</span> <span class="identifier">DoubleMatrix</span> <span class="parameter">eigenvectors</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Decompose</span> ( 
	<span class="parameter">matrix</span> <span class="keyword">As</span> <span class="identifier">DoubleMatrix</span>,
	<span class="parameter">lowerTriangularPart</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">eigenvectors</span> <span class="keyword">As</span> <span class="identifier">DoubleMatrix</span>
) <span class="keyword">As</span> <span class="identifier">DoubleMatrix</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">DoubleMatrix</span>^ <span class="identifier">Decompose</span>(
	<span class="identifier">DoubleMatrix</span>^ <span class="parameter">matrix</span>, 
	<span class="identifier">bool</span> <span class="parameter">lowerTriangularPart</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">DoubleMatrix</span>^% <span class="parameter">eigenvectors</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Decompose</span> : 
        <span class="parameter">matrix</span> : <span class="identifier">DoubleMatrix</span> * 
        <span class="parameter">lowerTriangularPart</span> : <span class="identifier">bool</span> * 
        <span class="parameter">eigenvectors</span> : <span class="identifier">DoubleMatrix</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="identifier">DoubleMatrix</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">matrix</span>  <a href="1DED9EB1.htm">DoubleMatrix</a></dt><dd>
            The matrix containing the lower or upper triangular part of 
            the matrix whose spectral decomposition must be computed.
            </dd><dt class="has-text-weight-normal"><span class="parameter">lowerTriangularPart</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd><span class="code">true</span> if <span class="parameter">matrix</span> contains the lower
            triangular part of the matrix to be decomposed;
            <span class="code">false</span> if <span class="parameter">matrix</span> contains 
            its upper triangular part.
            </dd><dt class="has-text-weight-normal"><span class="parameter">eigenvectors</span>  <a href="1DED9EB1.htm">DoubleMatrix</a><span id="LST8C74EC6F_2" data-languageSpecificText="cpp=%"></span></dt><dd>
            A matrix whose columns represent the eigenvectors
            of the decomposed matrix.
            </dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="1DED9EB1.htm">DoubleMatrix</a><br />
            A diagonal matrix containing the eigenvalues 
            of the decomposed matrix, in ascending order.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDFCSection"><p>
            In the following example, the spectral decomposition of a matrix is computed.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Computing the Spectral decomposition of a matrix</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;
using Novacta.Analytics.Advanced;

namespace Novacta.Analytics.CodeExamples.Advanced
{
    public class SpectralDecompositionExample0  
    {
        public void Main()
        {
            // Create a matrix containing the
            // lower triangular part of the symmetric matrix
            // to be decomposed.
            var data = new double[9] {
                2,
                2,
                0,
                0,
                0,
                0,
                1,
                0,
                5
            };
            var matrix = DoubleMatrix.Dense(3, 3, data);

            // Set the relevant triangular part.
            bool lowerTriangularPart = true;

            Console.WriteLine("Matrix to be decomposed:");
            Console.WriteLine(DoubleMatrix.Dense(3, 3, [
                2,
                2,
                0,
                2,
                0,
                0,
                0,
                0,
                5
            ]));

            // Compute the Spectral decomposition.
            var eigenvalues = SpectralDecomposition.Decompose(
                matrix,
                lowerTriangularPart,
                out DoubleMatrix eigenvectors);

            Console.WriteLine();
            Console.WriteLine("Eigenvalues:");
            Console.WriteLine(eigenvalues);
            Console.WriteLine();
            Console.WriteLine("Eigenvectors:");
            Console.WriteLine(eigenvectors);
            Console.WriteLine();
            Console.WriteLine("Matrix reconstruction:");
            var l = eigenvalues;
            var v = eigenvectors;
            Console.WriteLine(v * l * v.Transpose());
        }
    }
}

// Executing method Main() produces the following output:
// 
// Matrix to be decomposed:
// 2                2                0                
// 2                0                0                
// 0                0                5                
// 
// 
// 
// Eigenvalues:
// -1.23606798      0                0                
// 0                3.23606798       0                
// 0                0                5                
// 
// 
// 
// Eigenvectors:
// 0.525731112      -0.850650808     0                
// -0.850650808     -0.525731112     0                
// 0                0                1                
// 
// 
// 
// Matrix reconstruction:
// 2                2                0                
// 2                -1.11022302e-16  0                
// 0                0                5                
// 
//</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDGCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">matrix</span> is <b>null</b>.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><span class="parameter">matrix</span> is not square.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="17359C6B.htm">SpectralDecomposition Class</a></div><div><a href="4A1CA5AF.htm">Decompose Overload</a></div><div><a href="F249DE1E.htm">Novacta.Analytics.Advanced Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>