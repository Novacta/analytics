<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DoubleMatrixRow Class</title><meta name="Title" content="DoubleMatrixRow" /><meta name="Help.Id" content="T:Novacta.Analytics.DoubleMatrixRow" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics" /><meta name="guid" content="8C5BBFE" /><meta name="Description" content="Represents a row in a matrix of doubles." /><meta name="tocFile" content="../toc/IDAE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Double<wbr />Matrix<wbr />Row Class</h1><div class="summary">
            Represents a row in a matrix of doubles. 
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="2406EB43.htm">Novacta.Analytics</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">DoubleMatrixRow</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">double</span>&gt;, 
	<span class="identifier">IEnumerable</span>, <span class="identifier">INotifyPropertyChanged</span>, <span class="identifier">IEquatable</span>&lt;<span class="identifier">DoubleMatrixRow</span>&gt;, <span class="identifier">IComparable</span>&lt;<span class="identifier">DoubleMatrixRow</span>&gt;, 
	<span class="identifier">IComparable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">DoubleMatrixRow</span>
	<span class="keyword">Implements</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>), <span class="identifier">IEnumerable</span>, 
	<span class="identifier">INotifyPropertyChanged</span>, <span class="identifier">IEquatable</span>(<span class="keyword">Of</span> <span class="identifier">DoubleMatrixRow</span>), <span class="identifier">IComparable</span>(<span class="keyword">Of</span> <span class="identifier">DoubleMatrixRow</span>), 
	<span class="identifier">IComparable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">DoubleMatrixRow</span> <span class="keyword">sealed</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">double</span>&gt;, 
	<span class="identifier">IEnumerable</span>, <span class="identifier">INotifyPropertyChanged</span>, <span class="identifier">IEquatable</span>&lt;<span class="identifier">DoubleMatrixRow</span>^&gt;, <span class="identifier">IComparable</span>&lt;<span class="identifier">DoubleMatrixRow</span>^&gt;, 
	<span class="identifier">IComparable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">DoubleMatrixRow</span> = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">float</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IEnumerable</span>
        <span class="keyword">interface</span> <span class="identifier">INotifyPropertyChanged</span>
        <span class="keyword">interface</span> <span class="identifier">IEquatable</span>&lt;<span class="identifier">DoubleMatrixRow</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IComparable</span>&lt;<span class="identifier">DoubleMatrixRow</span>&gt;
        <span class="keyword">interface</span> <span class="identifier">IComparable</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">DoubleMatrixRow</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST8C5BBFE_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST8C5BBFE_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.ienumerable" target="_blank" rel="noopener noreferrer">IEnumerable</a>, <a href="https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged" target="_blank" rel="noopener noreferrer">INotifyPropertyChanged</a>, <a href="https://learn.microsoft.com/dotnet/api/system.icomparable" target="_blank" rel="noopener noreferrer">IComparable</a>, <a href="https://learn.microsoft.com/dotnet/api/system.icomparable-1" target="_blank" rel="noopener noreferrer">IComparable</a><span id="LST8C5BBFE_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink">DoubleMatrixRow</span><span id="LST8C5BBFE_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.iequatable-1" target="_blank" rel="noopener noreferrer">IEquatable</a><span id="LST8C5BBFE_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink">DoubleMatrixRow</span><span id="LST8C5BBFE_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p><b>Instantiation</b></p><p>
            You cannot directly instantiate a <span class="selflink">DoubleMatrixRow</span>.
            Instead, rows in a <a href="1DED9EB1.htm">DoubleMatrix</a> instance 
            can be collected by calling the overloaded method
            <a href="CDC3DC07.htm">AsRowCollection<span id="LST8C5BBFE_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
            Such methods return a
            <a href="CF178F79.htm">DoubleMatrixRowCollection</a> object, whose items have 
            type <span class="selflink">DoubleMatrixRow</span>.
            </p><p>
            A <span class="selflink">DoubleMatrixRow</span> instance represents a row of a
            <a href="1DED9EB1.htm">DoubleMatrix</a>. More thoroughly, 
            since each <span class="selflink">DoubleMatrixRow</span> is an item in a 
            <a href="CF178F79.htm">DoubleMatrixRowCollection</a>, such matrix can be
            inspected by getting the <a href="E48D71C2.htm">Matrix</a>
            property of the given collection.
            </p><p><b>Comparison</b></p><p><span class="selflink">DoubleMatrixRow</span> instances are quasi-lexicographically ordered. This means
            that instances are firstly ordered by their <a href="CE4D5001.htm">Length</a>, and then, within
            rows having the same length, by lexicographic order.
            </p><p>
            This also means that when tested for equality, <span class="selflink">DoubleMatrixRow</span> instances 
            are considered equal if and only if they have the same <a href="CE4D5001.htm">Length</a> and, 
            for each column index, entries corresponding to such index are equal, too.
            </p><p><b>Data binding</b></p><p>
            Entries of a <span class="selflink">DoubleMatrixRow</span> instance corresponding to a specific 
            column index can be get or set through the 
            indexer <a href="B44E711C.htm">Item<span id="LST8C5BBFE_7" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32<span id="LST8C5BBFE_8" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a>.
            When the indexer sets the entry, the row fires 
            the <a href="7C1808C5.htm">PropertyChanged</a> event,
            notifying that the name of the changed property is <span class="code">"Item[]"</span>; 
            as a consequence, subscribers to the event can't know what is the column index 
            of the changed entry. This can be problematic if you want to 
            use <span class="selflink">DoubleMatrixRow</span> instances as binding sources, for example when 
            binding charts or grids to matrix data.
            </p><p>
            To overcome such difficulties, the <span class="selflink">DoubleMatrixRow</span> class defines,
            among others, the <a href="B3075133.htm">XData</a> property. This property 
            returns a specific entry of the row, that one having as column index 
            the value returned by the <a href="F84B99EE.htm">XDataColumn</a> property of 
            the <a href="CF178F79.htm">DoubleMatrixRowCollection</a> which
            the row belongs to. In this way, <a href="B3075133.htm">XData</a> can be easily
            used as a path property when binding to <span class="selflink">DoubleMatrixRow</span> sources.
            </p><p>
            If set, the <a href="B3075133.htm">XData</a> property fires the 
            <a href="7C1808C5.htm">PropertyChanged</a> event, and the new value becomes
            the entry of <a href="E48D71C2.htm">Matrix</a> having row and column 
            indexes given
            by <a href="B3830C52.htm">Index</a> and <a href="F84B99EE.htm">XDataColumn</a>,
             respectively.
            </p><p>
            Additional not indexed properties are <a href="B3075150.htm">YData</a> 
            and <a href="B3075171.htm">ZData</a>.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><p>
            In the following example, the rows of a matrix 
            are enumerated.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;

namespace Novacta.Analytics.CodeExamples
{
    public class RowsEnumeratorExample0  
    {
        public void Main()
        {
            // Create a matrix.
            var data = new double[12] {
                1, 5,  9,
                2, 6, 10,
                3, 7, 11,
                4, 8, 12
            };
            var matrix = DoubleMatrix.Dense(4, 3, data, StorageOrder.RowMajor);
            Console.WriteLine("Data matrix:");
            Console.WriteLine(matrix);
            Console.WriteLine();

            // Get the collection of matrix rows.
            var rows = matrix.AsRowCollection();

            // Enumerate matrix rows.
            foreach (var row in rows) {
                Console.WriteLine("Row {0}: ", row.Index);
                Console.WriteLine(row);
            }
        }
    }
}

// Executing method Main() produces the following output:
// 
// Data matrix:
// 1                5                9                
// 2                6                10               
// 3                7                11               
// 4                8                12               
// 
// 
// 
// Row 0: 
// 1                5                9                
// Row 1: 
// 2                6                10               
// Row 2: 
// 3                7                11               
// Row 3: 
// 4                8                12</code></pre></div></div></p><p>
            In the following example, the first half of the rows in a matrix is collected.
            Then the <a href="B3830C52.htm">Index</a> of the items in the collection is modified so
            that, after that change, the same items represent the second half of the matrix rows.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;

namespace Novacta.Analytics.CodeExamples
{
    public class RowIndexDataExample1  
    {
        public void Main()
        {
            // Create a matrix.
            var data = new double[12] {
                1, 5,  9,
                2, 6, 10,
                3, 7, 11,
                4, 8, 12
            };
            var matrix = DoubleMatrix.Dense(4, 3, data, StorageOrder.RowMajor);
            Console.WriteLine("Data matrix:");
            Console.WriteLine(matrix);
            Console.WriteLine();

            // Get the collection of the first two matrix rows.
            var rows = matrix.AsRowCollection(IndexCollection.Range(0,1));

            // Enumerate the specified matrix rows.
            foreach (var row in rows) {
                Console.WriteLine("Row {0}: ", row.Index);
                Console.WriteLine(row);
            }

            // Change the indexes of the rows in the collection,
            // so that they represent the last two matrix rows.
            rows[0].Index = 2;
            rows[1].Index = 3;

            // Enumerate the specified matrix rows.
            Console.WriteLine();
            foreach (var row in rows) {
                Console.WriteLine("Row {0}: ", row.Index);
                Console.WriteLine(row);
            }

        }
    }
}

// Executing method Main() produces the following output:
// 
// Data matrix:
// 1                5                9                
// 2                6                10               
// 3                7                11               
// 4                8                12               
// 
// 
// 
// Row 0: 
// 1                5                9                
// Row 1: 
// 2                6                10               
// 
// Row 2: 
// 3                7                11               
// Row 3: 
// 4                8                12</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDSFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="B3830C52.htm">Index</a></td><td>
            Gets or sets the index of the <span class="selflink">DoubleMatrixRow</span>.
            </td></tr><tr><td><a href="B44E711C.htm">Item<span id="LST8C5BBFE_9" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32<span id="LST8C5BBFE_10" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the entry of the <span class="selflink">DoubleMatrixRow</span>
            having the specified column index.
            </td></tr><tr><td><a href="FA4B8106.htm">Item<span id="LST8C5BBFE_11" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>String<span id="LST8C5BBFE_12" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Gets or sets the entry of the <span class="selflink">DoubleMatrixRow</span>
            having the specified column index.
            </td></tr><tr><td><a href="CE4D5001.htm">Length</a></td><td>
            Gets the length of the <span class="selflink">DoubleMatrixRow</span>.
            </td></tr><tr><td><a href="FA45CC3F.htm">Name</a></td><td>
            Gets the name of the <span class="selflink">DoubleMatrixRow</span>.
            </td></tr><tr><td><a href="B3075133.htm">XData</a></td><td>
            Gets or sets the entry of the <span class="selflink">DoubleMatrixRow</span>
            having the column index specified by the 
            <a href="F84B99EE.htm">XDataColumn</a>
            property of the <a href="CF178F79.htm">DoubleMatrixRowCollection</a> of which the row
            is an item.
            </td></tr><tr><td><a href="B3075150.htm">YData</a></td><td>
            Gets or sets the entry of the <span class="selflink">DoubleMatrixRow</span>
            having the column index specified by the 
            <a href="9D53B813.htm">YDataColumn</a>
            property of the <a href="CF178F79.htm">DoubleMatrixRowCollection</a> of which the row
            is an item.
            </td></tr><tr><td><a href="B3075171.htm">ZData</a></td><td>
            Gets or sets the entry of the <span class="selflink">DoubleMatrixRow</span>
            having the column index specified by the 
            <a href="82C2014C.htm">ZDataColumn</a>
            property of the <a href="CF178F79.htm">DoubleMatrixRowCollection</a> of which the row
            is an item.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDDFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="6A9F9B89.htm">CompareTo(DoubleMatrixRow)</a></td><td>
            Compares the current object with another object of the same type.
            </td></tr><tr><td><a href="BA22AC9C.htm">CompareTo(Object)</a></td><td>
            Compares the current instance with another object of the same type and 
            returns an integer that indicates whether the current instance precedes, follows, 
            or occurs in the same position in the sort order as the other object.
            </td></tr><tr><td><a href="2E5EE172.htm">Equals(DoubleMatrixRow)</a></td><td>
            Indicates whether the current object is equal to another object of the same type.
            </td></tr><tr><td><a href="39AFBE0B.htm">Equals(Object)</a></td><td>
            Determines whether the specified <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a> 
            is equal to the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Object<span id="LST8C5BBFE_13" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Equals(Object)</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="D9AFE35E.htm">GetEnumerator</a></td><td>Returns an enumerator that iterates through a collection.</td></tr><tr><td><a href="575F3D38.htm">GetHashCode</a></td><td>
            Returns a hash code for this instance.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">Object<span id="LST8C5BBFE_14" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetHashCode<span id="LST8C5BBFE_15" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="3E90456C.htm">ToDoubleMatrix</a></td><td>
            Converts from <span class="selflink">DoubleMatrixRow</span> to <a href="1DED9EB1.htm">DoubleMatrix</a>.
            </td></tr><tr><td><a href="3234ACBB.htm">ToString</a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> that represents this instance.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">Object<span id="LST8C5BBFE_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LST8C5BBFE_17" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDAFASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="7C1808C5.htm">PropertyChanged</a></td><td>
            Occurs when a property of the <span class="selflink">DoubleMatrixRow</span> changed.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Operators</h2><div id="IDFFASection"><table id="OperatorList" class="table is-hoverable"><tr><td><a href="CF0FD9E8.htm">Equality(DoubleMatrixRow, DoubleMatrixRow)</a></td><td>
            Returns a value that indicates whether a <span class="selflink">DoubleMatrixRow</span> instance is 
            equal to another <span class="selflink">DoubleMatrixRow</span> instance.
            </td></tr><tr><td><a href="73AD5170.htm">GreaterThan(DoubleMatrixRow, DoubleMatrixRow)</a></td><td>
            Returns a value that indicates whether a <span class="selflink">DoubleMatrixRow</span> instance is 
            greater than another <span class="selflink">DoubleMatrixRow</span> instance.
            </td></tr><tr><td><a href="CB478010.htm">GreaterThanOrEqual(DoubleMatrixRow, DoubleMatrixRow)</a></td><td>
            Returns a value that indicates whether a <span class="selflink">DoubleMatrixRow</span> instance is 
            greater than or equal to another <span class="selflink">DoubleMatrixRow</span> instance.
            </td></tr><tr><td><a href="A8614DBA.htm"><span id="LST8C5BBFE_18" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(DoubleMatrixRow to DoubleMatrix)</a></td><td>
            Performs an implicit conversion from <span class="selflink">DoubleMatrixRow</span> to <a href="1DED9EB1.htm">DoubleMatrix</a>.
            </td></tr><tr><td><a href="C4CF2D47.htm">Inequality(DoubleMatrixRow, DoubleMatrixRow)</a></td><td>
            Returns a value that indicates whether a <span class="selflink">DoubleMatrixRow</span> instance is not
            equal to another <span class="selflink">DoubleMatrixRow</span> instance.
            </td></tr><tr><td><a href="3098CBE6.htm">LessThan(DoubleMatrixRow, DoubleMatrixRow)</a></td><td>
            Returns a value that indicates whether a <span class="selflink">DoubleMatrixRow</span> instance is 
            less than another <span class="selflink">DoubleMatrixRow</span> instance.
            </td></tr><tr><td><a href="A076C5DE.htm">LessThanOrEqual(DoubleMatrixRow, DoubleMatrixRow)</a></td><td>
            Returns a value that indicates whether a <span class="selflink">DoubleMatrixRow</span> instance is 
            less than or equal to another <span class="selflink">DoubleMatrixRow</span> instance.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Explicit Interface Implementations</h2><div id="IDMFASection"><table id="ExplicitInterfaceImplementationList" class="table is-hoverable"><tr><td><a href="F32B443.htm">IEnumerable<span id="LST8C5BBFE_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST8C5BBFE_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST8C5BBFE_21" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetEnumerator</a></td><td>
            Returns an enumerator that iterates through the collection.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4 class="quickLinkHeader">Reference</h4><div><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div><h4 class="quickLinkHeader">Other Resources</h4><div><a href="https://en.wikipedia.org/wiki/Lexicographical_order" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Lexicographical_order</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">Operators</a></li><li><a class="quickLink">Explicit Interface Implementations</a></li><li><a class="quickLink">See Also</a><ul class="menu"><li><a class="quickLink">Reference</a></li><li><a class="quickLink">Other Resources</a></li></ul></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>