<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ContinuousOptimizationContext Class</title><meta name="Title" content="ContinuousOptimizationContext" /><meta name="Help.Id" content="T:Novacta.Analytics.Advanced.ContinuousOptimizationContext" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics.Advanced" /><meta name="guid" content="A8203153" /><meta name="Description" content="Represents a Cross-Entropy context in which a continuous function is minimized or maximized." /><meta name="tocFile" content="../toc/IDBE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Continuous<wbr />Optimization<wbr />Context Class</h1><div class="summary">
             Represents a Cross-Entropy context in which  
             a continuous function is minimized or maximized.
             </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="F249DE1E.htm">Novacta.Analytics.Advanced</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">ContinuousOptimizationContext</span> : <span class="identifier">SystemPerformanceOptimizationContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">ContinuousOptimizationContext</span>
	<span class="keyword">Inherits</span> <span class="identifier">SystemPerformanceOptimizationContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">ContinuousOptimizationContext</span> <span class="keyword">sealed</span> : <span class="keyword">public</span> <span class="identifier">SystemPerformanceOptimizationContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">ContinuousOptimizationContext</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">SystemPerformanceOptimizationContext</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="F04A1B18.htm">CrossEntropyContext</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">ContinuousOptimizationContext</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p>
             Class <span class="selflink">ContinuousOptimizationContext</span> derives from
             <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>, and defines
             a Cross-Entropy context able to solve continuous optimization
             problems.
             </p><p>
             Such a context is exploited by the methods exposed by the static
             class <a href="3D985383.htm">ContinuousOptimization</a>, where the parameters
             of the algorithm are set to default values. For advanced 
             scenarios, a context with specialized values can be
             instantiated and hence passed as a parameter to method 
             <a href="E8269C07.htm">Optimize(SystemPerformanceOptimizationContext, Double, Int32)</a>. 
             </p><p>
             Class <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a> thoroughly 
             defines a system whose performance must be optimized. 
             Class <span class="selflink">ContinuousOptimizationContext</span> specializes 
             that system by assuming the its performance is a continuous
             function, say <img alt="LaTeX equation" src="../media/latex_9309.svg" />. 
             </p><p>
             A Cross-Entropy optimizer is designed to identify the 
             optimal arguments at which the performance function of a
             complex system reaches
             its minimum or maximum value.
             To get the optimal state, the system's state-space 
             <img alt="LaTeX equation" src="../media/latex_9310.svg" />, i.e. the domain of 
             <img alt="LaTeX equation" src="../media/latex_9311.svg" />, is traversed iteratively 
             by sampling, at each iteration, from 
             a specific density function, member of a parametric 
             family  
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9312.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_9313.svg" style="vertical-align: -1px" /> is a 
             vector representing 
             a possible argument of <img alt="LaTeX equation" src="../media/latex_9314.svg" />, 
             and <img alt="LaTeX equation" src="../media/latex_9315.svg" style="vertical-align: -1px" /> is the set of 
             allowable values for parameter <img alt="LaTeX equation" src="../media/latex_9316.svg" />.
             The parameter exploited at a given iteration <img alt="LaTeX equation" src="../media/latex_9317.svg" />
             is referred to
             as the <i>reference</i> parameter of such iteration and indicated
             as <img alt="LaTeX equation" src="../media/latex_9318.svg" style="vertical-align: -2px" />.
             A minimum number
             of iterations, say <img alt="LaTeX equation" src="../media/latex_9319.svg" />, must be executed, while a 
             number of them up to a maximum, say <img alt="LaTeX equation" src="../media/latex_9320.svg" />, is allowed.
             </p><p><b>Implementing a context for continuous optimization</b></p><p>
             The Cross-Entropy method 
             provides an iterative multi step procedure. In the context
             of continuous optimization, at each 
             iteration <img alt="LaTeX equation" src="../media/latex_9321.svg" /> a <i>sampling step</i>
             is executed in order to generate diverse candidate arguments of 
             the objective function, sampled from a distribution 
             characterized by the <i>reference parameter</i> of the iteration,
             say <img alt="LaTeX equation" src="../media/latex_9322.svg" style="vertical-align: -2px" />. 
             Such sample is thus exploited in the <i>updating step</i> in which 
             a new <i>reference</i> 
             parameter <img alt="LaTeX equation" src="../media/latex_9323.svg" style="vertical-align: -2px" /> is 
             identified to modify the distribution from which the samples 
             will be obtained in the next iteration: such modification is
             executed in order to improve 
             the probability of sampling relevant arguments, i.e. those 
             arguments corresponding to the function values of interest
             (See the documentation of 
             class <a href="298402DD.htm">CrossEntropyProgram</a> for a 
             thorough discussion of the Cross-Entropy method). 
             </p><p>
             When the Cross-Entropy method is applied in an optimization
             context, a final <i>optimizing step</i> is executed, in which 
             the argument corresponding to the searched extremum  
             is effectively identified.
             </p><p>These steps must be implemented as follows.</p><p><b><i>Sampling step</i></b></p><p>
             In a <span class="selflink">ContinuousOptimizationContext</span>, the parametric 
             family <img alt="LaTeX equation" src="../media/latex_9324.svg" style="vertical-align: -1px" /> is defined as follows.
             Each component <img alt="LaTeX equation" src="../media/latex_9325.svg" style="vertical-align: -5px" /> of an argument
             <img alt="LaTeX equation" src="../media/latex_9326.svg" style="vertical-align: -4px" /> of <img alt="LaTeX equation" src="../media/latex_9327.svg" />
             is attached to a 
             Gaussian distribution, say <img alt="LaTeX equation" src="../media/latex_9328.svg" style="vertical-align: -6px" />,
             and 
             the <i>j</i>-th entry 
             of an argument is sampled from <img alt="LaTeX equation" src="../media/latex_9329.svg" style="vertical-align: -6px" />, 
             independently from the other,
             where <img alt="LaTeX equation" src="../media/latex_9330.svg" /> is the dimension of 
             <img alt="LaTeX equation" src="../media/latex_9331.svg" />. 
             A Cross-Entropy sampling parameter 
             can thus be  
             represented as a <img alt="LaTeX equation" src="../media/latex_9332.svg" /> matrix
             <img alt="LaTeX equation" src="../media/latex_9333.svg" />,
             whose first row stores the means of the Gaussian 
             distributions, while the second row contains their standard
             deviations, so that <img alt="LaTeX equation" src="../media/latex_9334.svg" style="vertical-align: -5px" /> and
             <img alt="LaTeX equation" src="../media/latex_9335.svg" style="vertical-align: -5px" />.
             </p><p>
             The parametric space <img alt="LaTeX equation" src="../media/latex_9336.svg" style="vertical-align: -1px" /> should 
             include a parameter under which all possible states must have 
             a real chance of being selected: this parameter
             must be specified as the initial <i>reference</i> parameter
             <img alt="LaTeX equation" src="../media/latex_9337.svg" style="vertical-align: -2px" />.
             A <span class="selflink">ContinuousOptimizationContext</span> defines 
             <img alt="LaTeX equation" src="../media/latex_9338.svg" style="vertical-align: -2px" /> as follows. The first row of 
             <img alt="LaTeX equation" src="../media/latex_9339.svg" style="vertical-align: -2px" /> is set to an initial guess argument
             of <img alt="LaTeX equation" src="../media/latex_9340.svg" />, say 
             <img alt="LaTeX equation" src="../media/latex_9341.svg" style="vertical-align: -4px" />,
             so that 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9342.svg" /><br /><br />
             The entries in the second row of <img alt="LaTeX equation" src="../media/latex_9343.svg" style="vertical-align: -2px" /> are instead
             all set constantly equal to an initial, constant standard 
             deviation, say <img alt="LaTeX equation" src="../media/latex_9344.svg" style="vertical-align: -2px" />:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9345.svg" /><br /><br /></p><p><b><i>Updating step</i></b></p><p>
             At iteration <img alt="LaTeX equation" src="../media/latex_9346.svg" />, let us represent the sample drawn 
             as <img alt="LaTeX equation" src="../media/latex_9347.svg" style="vertical-align: -5px" />, where <img alt="LaTeX equation" src="../media/latex_9348.svg" /> is the 
             Cross-Entropy sample size, and the <img alt="LaTeX equation" src="../media/latex_9349.svg" />-th sample point
             is the sequence <img alt="LaTeX equation" src="../media/latex_9350.svg" style="vertical-align: -5px" />.
             The parameter's 
             updating formula is, 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9351.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_9352.svg" style="vertical-align: -2px" />
             is the elite sample in this context, i.e. the set of sample
             points having the lowest performances observed during the <img alt="LaTeX equation" src="../media/latex_9353.svg" />-th
             iteration, if minimizing, the highest ones, otherwise, while
             <img alt="LaTeX equation" src="../media/latex_9354.svg" style="vertical-align: -4px" /> is its indicator function.
             The parameter's second row, that containing the standard deviations, 
             is instead updated as follows:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9355.svg" /><br /><br /></p><p><i>Applying a smoothing scheme to updated parameters</i></p><p>
             In a <span class="selflink">ContinuousOptimizationContext</span>, 
             the sampling parameter 
             is smoothed applying the following formulas
             (See Rubinstein and Kroese, 
             Remark 5.2, p. 189<sup class="citation"><a href="#cite1">[1]</a></sup>):
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9356.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_9357.svg" style="vertical-align: -2px" />, 
              and
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9358.svg" /><br /><br />
             with <img alt="LaTeX equation" src="../media/latex_9359.svg" style="vertical-align: -4px" /> 
             and <img alt="LaTeX equation" src="../media/latex_9360.svg" style="vertical-align: -4px" /> a positive integer.
             </p><p><b><i>Optimizing step</i></b></p><p>
             The optimizing step is executed after that the underlying 
             Cross-Entropy program 
             has converged. 
             In a specified context, it is expected that, 
             given a reference parameter 
             <img alt="LaTeX equation" src="../media/latex_9361.svg" />, a corresponding reasonable value could be 
             guessed for the optimizing argument of <img alt="LaTeX equation" src="../media/latex_9362.svg" />, 
             say <img alt="LaTeX equation" src="../media/latex_9363.svg" style="vertical-align: -4px" />, with <img alt="LaTeX equation" src="../media/latex_9364.svg" /> a function
             from <img alt="LaTeX equation" src="../media/latex_9365.svg" style="vertical-align: -1px" /> to <img alt="LaTeX equation" src="../media/latex_9366.svg" />. 
             Function <img alt="LaTeX equation" src="../media/latex_9367.svg" /> is defined by overriding method 
             <a href="3E998F01.htm">GetOptimalState(DoubleMatrix)</a> 
             that should return <img alt="LaTeX equation" src="../media/latex_9368.svg" style="vertical-align: -4px" />
             given a specific reference parameter <img alt="LaTeX equation" src="../media/latex_9369.svg" />.
             </p><p>
             Given the optimal parameter (the parameter corresponding to the last iteration 
             <img alt="LaTeX equation" src="../media/latex_9370.svg" /> executed by the algorithm before stopping),
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9371.svg" /><br /><br />
             the argument at which the searched extremum is considered 
             as reached according to the Cross-Entropy method will be
             returned as 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9372.svg" /><br /><br /></p><p><b><i>Stopping criterion</i></b></p><p>
             A <span class="selflink">ContinuousOptimizationContext</span> never stops before
             executing a number of iterations less than 
             <a href="44E3AF08.htm">MinimumNumberOfIterations</a>, and always stops
             if such number is greater than or equal to
             <a href="CB60FB7E.htm">MaximumNumberOfIterations</a>. 
             </p><p>
             For intermediate iterations, method 
             <a href="12C0A0CA.htm">StopAtIntermediateIteration(Int32, LinkedList<span id="LSTA8203153_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LSTA8203153_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, LinkedList<span id="LSTA8203153_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LSTA8203153_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> is
             called to check if a Cross-Entropy program executing in this
             context should stop or not.
             </p><p>
             In a <span class="selflink">ContinuousOptimizationContext</span>, the method 
             controls if, in the currently updated reference parameter, 
             say <img alt="LaTeX equation" src="../media/latex_9373.svg" style="vertical-align: -2px" />, all
             the standard deviations are less than a specified
             termination tolerance, say <img alt="LaTeX equation" src="../media/latex_9374.svg" />, testing that
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9375.svg" /><br /><br />
             and, if so,
             return <span class="code">true</span>; otherwise returns <span class="code">false</span>.
             </p><p><b>Instantiating a context for continuous optimization</b></p><p>
             At instantiation, the constructor of 
             a <span class="selflink">ContinuousOptimizationContext</span> object
             will receive information about the optimization under study by
             means of parameters representing the objective function
             <img alt="LaTeX equation" src="../media/latex_9376.svg" />, 
             <img alt="LaTeX equation" src="../media/latex_9377.svg" />, 
             <img alt="LaTeX equation" src="../media/latex_9378.svg" style="vertical-align: -2px" />, 
             <img alt="LaTeX equation" src="../media/latex_9379.svg" />, <img alt="LaTeX equation" src="../media/latex_9380.svg" />, and a constant stating 
             if the optimization goal is a maximization or a minimization.
             In addition, the smoothing parameters <img alt="LaTeX equation" src="../media/latex_9381.svg" />,
             <img alt="LaTeX equation" src="../media/latex_9382.svg" style="vertical-align: -4px" />, and <img alt="LaTeX equation" src="../media/latex_9383.svg" style="vertical-align: -4px" /> are also 
             passed to the constructor.
             </p><p>
             After construction, property 
             <a href="B735AB0A.htm">InitialArgument</a> represents 
             <img alt="LaTeX equation" src="../media/latex_9384.svg" />, while <img alt="LaTeX equation" src="../media/latex_9385.svg" />
             and <img alt="LaTeX equation" src="../media/latex_9386.svg" />
             can be inspected, respectively, via properties
             <a href="44E3AF08.htm">MinimumNumberOfIterations</a> and
             <a href="CB60FB7E.htm">MaximumNumberOfIterations</a>. 
             The smoothing coefficients <img alt="LaTeX equation" src="../media/latex_9387.svg" />,
             <img alt="LaTeX equation" src="../media/latex_9388.svg" style="vertical-align: -4px" />, and the exponent <img alt="LaTeX equation" src="../media/latex_9389.svg" style="vertical-align: -4px" /> are also
             available via properties
             <a href="98C486C7.htm">MeanSmoothingCoefficient</a>,
             <a href="E799E254.htm">StandardDeviationSmoothingCoefficient</a> and
             <a href="FA02936F.htm">StandardDeviationSmoothingExponent</a>,
             respectively.
             In addition, 
             property 
             <a href="847A8F0F.htm">OptimizationGoal</a> 
             signals that the performance function
             must be maximized if it 
             evaluates to the constant <a href="D5F83433.htm">Maximization</a>, or 
             that a minimization is requested
             if it evaluates to
             the constant <a href="D5F83433.htm">Minimization</a>.
             </p><p>
             To evaluate the objective function <img alt="LaTeX equation" src="../media/latex_9390.svg" /> at a
             specific argument, one can call method
             <a href="1AF89526.htm">Performance(DoubleMatrix)</a>
             passing the argument as a parameter.
             It is expected that the objective function 
             will accept a row 
             vector as a valid representation of an argument.
             </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><p>
             In the following example, function
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9391.svg" /><br /><br />
             is maximized.
             </p><p>
             The search for the maximizer starts from
             the initial argument <img alt="LaTeX equation" src="../media/latex_9392.svg" />.
             </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Maximizing a function on the real line.</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using Novacta.Analytics.Advanced;
using System;

namespace Novacta.Analytics.CodeExamples.Advanced
{
    public class ContinuousOptimizationContextExample0  
    {
        public void Main()
        {
            // Define the objective function as follows: 
            // f(x) = exp(-(x-2)^2) + (.8) * exp(-(x+2)^2)).
            static double objectiveFunction(DoubleMatrix x)
            {
                double y = 0.0;
                var x_0 = x[0];
                y += Math.Exp(-Math.Pow(x_0 - 2.0, 2.0));
                y += .8 * Math.Exp(-Math.Pow(x_0 + 2.0, 2.0));
                return y;
            }

            // Define the argument at which the method starts 
            // the search for optimality.
            var initialArgument = DoubleMatrix.Dense(1, 1, -6.0);

            // Create the context.
            var context = new ContinuousOptimizationContext(
                objectiveFunction: objectiveFunction,
                initialArgument: initialArgument,
                meanSmoothingCoefficient: .8,
                standardDeviationSmoothingCoefficient: .7,
                standardDeviationSmoothingExponent: 6,
                initialStandardDeviation: 100.0,
                optimizationGoal: OptimizationGoal.Maximization,
                terminationTolerance: 1.0e-3,
                minimumNumberOfIterations: 3,
                maximumNumberOfIterations: 1000);

            // Create the optimizer.
            var optimizer = new SystemPerformanceOptimizer()
            {
                PerformanceEvaluationParallelOptions = { MaxDegreeOfParallelism = -1 },
                SampleGenerationParallelOptions = { MaxDegreeOfParallelism = -1 }
            };

            // Set optimization parameters.
            double rarity = 0.01;
            int sampleSize = 1000;

            // Solve the problem.
            var results = optimizer.Optimize(
                context,
                rarity,
                sampleSize);

            var maximizer = results.OptimalState;

            // Show the results.
            Console.WriteLine(
                "The Cross-Entropy optimizer has converged: {0}.",
                results.HasConverged);

            Console.WriteLine();
            Console.WriteLine("Initial guess parameter:");
            Console.WriteLine(context.InitialParameter);

            Console.WriteLine();
            Console.WriteLine("The maximizer of the objective function is:");
            Console.WriteLine(maximizer);

            Console.WriteLine();

            Console.WriteLine("The maximum value of the objective function is:");
            Console.WriteLine(objectiveFunction(maximizer));
        }
    }
}

// Executing method Main() produces the following output:
// 
// The Cross-Entropy optimizer has converged: True.
// 
// Initial guess parameter:
// -6               
// 100              
// 
// 
// 
// The maximizer of the objective function is:
// 1.99999771       
// 
// 
// 
// The maximum value of the objective function is:
// 1.0000000900245634</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="BD51D7D6.htm">ContinuousOptimizationContext</a></td><td>
            Initializes a new instance of the 
            <span class="selflink">ContinuousOptimizationContext</span> class 
            aimed to optimize the specified 
            continuous function,
            with the given initial 
            guess argument, optimization goal, 
            range of iterations, and smoothing coefficients.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDQEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="66F284A1.htm">EliteSampleDefinition</a></td><td>
            Gets the elite sample definition for this context.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="B735AB0A.htm">InitialArgument</a></td><td>
            The initial argument of the function which 
            the search for the optimal one starts with.
            </td></tr><tr><td><a href="1FE43CBC.htm">InitialParameter</a></td><td>
            Gets the parameter initially exploited to sample from 
            the state-space of the system defined by this context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="84802AAF.htm">InitialStandardDeviation</a></td><td>
            Gets the value assigned to each standard deviation in
            the initial Cross-Entropy parameter
            exploited by this context.
            </td></tr><tr><td><a href="CB60FB7E.htm">MaximumNumberOfIterations</a></td><td>
            Gets the maximum number of iterations 
            allowed by this context. 
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="98C486C7.htm">MeanSmoothingCoefficient</a></td><td>
            Gets the coefficient that defines the smoothing scheme 
            for the means of the Cross-Entropy parameters 
            exploited by this context.
            </td></tr><tr><td><a href="44E3AF08.htm">MinimumNumberOfIterations</a></td><td>
            Gets the minimum number of iterations 
            required by this context.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="847A8F0F.htm">OptimizationGoal</a></td><td>
            Gets a constant specifying if the performance function 
            in this context must be minimized or maximized.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="E799E254.htm">StandardDeviationSmoothingCoefficient</a></td><td>
            Gets the coefficient that defines the base smoothing 
            scheme for the standard deviations of the Cross-Entropy 
            parameters exploited by this context.
            </td></tr><tr><td><a href="FA02936F.htm">StandardDeviationSmoothingExponent</a></td><td>
            Gets the exponent that defines the dynamic smoothing scheme 
            for the standard deviations of the Cross-Entropy 
            parameters exploited by this context.
            </td></tr><tr><td><a href="6BFCB280.htm">StateDimension</a></td><td>
            Gets or sets the dimension of a vector representing a 
            system's state
            when 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executes in this
            context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="52B3A2A4.htm">TerminationTolerance</a></td><td>
            Gets the minimal value which, if greater than all the 
            standard deviations of a Cross-Entropy parameter, 
            signals that the optimization must be considered as 
            converged at intermediate iterations.
            </td></tr><tr><td><a href="876F94ED.htm">TraceExecution</a></td><td>
            Gets or sets a value indicating whether the 
            execution of this context must be traced.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDBEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="3E998F01.htm">GetOptimalState</a></td><td>
            Gets the argument that optimizes the objective function
            in this context, according to the specified 
            Cross-Entropy sampling parameter.
            <br />(Overrides <a href="9B360782.htm">SystemPerformanceOptimizationContext<span id="LSTA8203153_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetOptimalState(DoubleMatrix)</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="E2DFB2BB.htm">OnExecutedIteration</a></td><td>
            Called after completion of each iteration of 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this
            context.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="2A58FBDF.htm">PartialSample</a></td><td>
            Draws the specified subset of a sample from a distribution 
            characterized by the given parameter, using the stated
            random number generator. Used when executing the sampling
            step of a  <a href="298402DD.htm">CrossEntropyProgram</a> running
            in this context.
            <br />(Overrides <a href="6D600898.htm">CrossEntropyContext<span id="LSTA8203153_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PartialSample(<span id="LSTA8203153_6" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LSTA8203153_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Tuple<span id="LSTA8203153_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32<span id="LSTA8203153_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, RandomNumberGenerator, DoubleMatrix, Int32)</a>)</td></tr><tr><td><a href="92668FBA.htm">Performance</a></td><td>
            Computes the objective function at a specified argument
            as the performance defined in this context.
            <br />(Overrides <a href="1AF89526.htm">CrossEntropyContext<span id="LSTA8203153_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Performance(DoubleMatrix)</a>)</td></tr><tr><td><a href="10F8DEBD.htm">SmoothParameter</a></td><td>
            Provides the smoothing of the updated sampling parameter
            of a <a href="E252E84.htm">SystemPerformanceOptimizer</a>  
            executing in this context.        
            <br />(Overrides <a href="DB205520.htm">SystemPerformanceOptimizationContext<span id="LSTA8203153_11" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SmoothParameter(LinkedList<span id="LSTA8203153_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LSTA8203153_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="12C0A0CA.htm">StopAtIntermediateIteration</a></td><td>
            Specifies conditions 
            under which 
            a <a href="E252E84.htm">SystemPerformanceOptimizer</a> executing in 
            this context should be considered as terminated after
            completing an intermediate iteration.
            <br />(Overrides <a href="F068CBEA.htm">SystemPerformanceOptimizationContext<span id="LSTA8203153_14" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>StopAtIntermediateIteration(Int32, LinkedList<span id="LSTA8203153_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LSTA8203153_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, LinkedList<span id="LSTA8203153_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LSTA8203153_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="94DC9B0B.htm">StopExecution</a></td><td>
            Specifies conditions 
            under which 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this 
            context should be considered 
            as terminated.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="CD947DDD.htm">UpdateLevel</a></td><td>
            Updates the performance level for the current iteration 
            of a  <a href="298402DD.htm">CrossEntropyProgram</a> executing in
            this context
            and determines the corresponding elite sample.
            <br />(Inherited from <a href="1C32368C.htm">SystemPerformanceOptimizationContext</a>)</td></tr><tr><td><a href="EC24FEDE.htm">UpdateParameter</a></td><td>
            Updates the 
            sampling parameter attending the generation 
            of the sample in the next iteration of a 
             <a href="298402DD.htm">CrossEntropyProgram</a> executing in 
             this context.
            <br />(Overrides <a href="4AE2243.htm">CrossEntropyContext<span id="LSTA8203153_19" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UpdateParameter(LinkedList<span id="LSTA8203153_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LSTA8203153_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, DoubleMatrix)</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Bibliography</h2><div id="IDDOBCSection"><div><span id="cite1">[1] </span><span class="bibliographyAuthor">Rubinstein, R.Y. and Kroese, D.P.</span>, <span class="bibliographyTitle">The Cross-Entropy Method, A unified Approach to Combinatorial Optimization, Monte-Carlo Simulation, and Machine Learning</span>, <span class="bibliographyPublisher">Springer, New York. (2004)</span></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="F249DE1E.htm">Novacta.Analytics.Advanced Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Bibliography</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>