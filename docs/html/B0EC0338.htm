<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ComplexMatrix.ElementWiseMultiply Method (ComplexMatrix, ComplexMatrix)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Novacta.Analytics.ComplexMatrix.ElementWiseMultiply(Novacta.Analytics.ComplexMatrix,Novacta.Analytics.ComplexMatrix)" /><meta name="Description" content="Determines the element wise product of two matrices." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Novacta.Analytics" /><meta name="file" content="B0EC0338" /><meta name="guid" content="B0EC0338" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Novacta.Analytics Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a4ea75a2-ef53-4ea2-a7f4-b493a50f90b3.htm" title="Novacta.Analytics Documentation" tocid="roottoc">Novacta.Analytics Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/D9FC3C8F.htm" title="Novacta.Analytics namespaces" tocid="D9FC3C8F">Novacta.Analytics namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2406EB43.htm" title="Novacta.Analytics" tocid="2406EB43">Novacta.Analytics</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/AFDA21E4.htm" title="ComplexMatrix Class" tocid="AFDA21E4">ComplexMatrix Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/70D0091E.htm" title="ComplexMatrix Methods" tocid="70D0091E">ComplexMatrix Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/BA833724.htm" title="ElementWiseMultiply Method " tocid="BA833724">ElementWiseMultiply Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/B0EC0338.htm" title="ElementWiseMultiply Method (ComplexMatrix, ComplexMatrix)" tocid="B0EC0338">ElementWiseMultiply Method (ComplexMatrix, ComplexMatrix)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/EE99E794.htm" title="ElementWiseMultiply Method (ComplexMatrix, DoubleMatrix)" tocid="EE99E794">ElementWiseMultiply Method (ComplexMatrix, DoubleMatrix)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/D6904565.htm" title="ElementWiseMultiply Method (ComplexMatrix, ReadOnlyDoubleMatrix)" tocid="D6904565">ElementWiseMultiply Method (ComplexMatrix, ReadOnlyDoubleMatrix)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/33E8D0CA.htm" title="ElementWiseMultiply Method (DoubleMatrix, ComplexMatrix)" tocid="33E8D0CA">ElementWiseMultiply Method (DoubleMatrix, ComplexMatrix)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1BDF2E9B.htm" title="ElementWiseMultiply Method (ReadOnlyDoubleMatrix, ComplexMatrix)" tocid="1BDF2E9B">ElementWiseMultiply Method (ReadOnlyDoubleMatrix, ComplexMatrix)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>ComplexMatrix<span id="LSTD6436E60_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD6436E60_0?cpp=::|nu=.");</script>ElementWiseMultiply Method (ComplexMatrix, ComplexMatrix)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Determines the element wise product of two matrices.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="2406EB43.htm">Novacta.Analytics</a><br />
    <strong>Assembly:</strong>
   Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">ComplexMatrix</span> <span class="identifier">ElementWiseMultiply</span>(
	<span class="identifier">ComplexMatrix</span> <span class="parameter">left</span>,
	<span class="identifier">ComplexMatrix</span> <span class="parameter">right</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ElementWiseMultiply</span> ( 
	<span class="parameter">left</span> <span class="keyword">As</span> <span class="identifier">ComplexMatrix</span>,
	<span class="parameter">right</span> <span class="keyword">As</span> <span class="identifier">ComplexMatrix</span>
) <span class="keyword">As</span> <span class="identifier">ComplexMatrix</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">ComplexMatrix</span>^ <span class="identifier">ElementWiseMultiply</span>(
	<span class="identifier">ComplexMatrix</span>^ <span class="parameter">left</span>, 
	<span class="identifier">ComplexMatrix</span>^ <span class="parameter">right</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">ElementWiseMultiply</span> : 
        <span class="parameter">left</span> : <span class="identifier">ComplexMatrix</span> * 
        <span class="parameter">right</span> : <span class="identifier">ComplexMatrix</span> <span class="keyword">-&gt;</span> <span class="identifier">ComplexMatrix</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">left</span></dt><dd>Type: <a href="AFDA21E4.htm">Novacta.Analytics<span id="LSTD6436E60_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD6436E60_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ComplexMatrix</a><br />The left operand.</dd><dt><span class="parameter">right</span></dt><dd>Type: <a href="AFDA21E4.htm">Novacta.Analytics<span id="LSTD6436E60_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD6436E60_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ComplexMatrix</a><br />The right operand.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="AFDA21E4.htm">ComplexMatrix</a><br />
            The result of element wise multiplying <span class="parameter">left</span> by <span class="parameter">right</span>.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">left</span> is <b>null</b>.<br />
            -or-<br /><span class="parameter">right</span> is <b>null</b>.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><span class="parameter">left</span> and <span class="parameter">right</span> have
            not the same number of rows and columns.
            </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
            Let <img alt="LaTeX equation" src="../media/latex_239.svg" style="vertical-align: -2px" /> and  
            <img alt="LaTeX equation" src="../media/latex_240.svg" style="vertical-align: -2px" /> be the <span class="parameter">left</span>
            number of rows and columns, respectively, and consider its generic entry
            <br /><br /><img alt="LaTeX equation" src="../media/latex_241.svg" /><br /><br />
            Analogously, Let <img alt="LaTeX equation" src="../media/latex_242.svg" style="vertical-align: -2px" /> and  
            <img alt="LaTeX equation" src="../media/latex_243.svg" style="vertical-align: -2px" /> be the <span class="parameter">right</span>
            number of rows and columns, respectively, and let its generic entry given by
            <br /><br /><img alt="LaTeX equation" src="../media/latex_244.svg" /><br /><br /></p><p>
            The method returns a matrix 
            whose generic entry is 
            <br /><br /><img alt="LaTeX equation" src="../media/latex_245.svg" /><br /><br /> 
            provided that the dimensions of <span class="parameter">left</span> agree 
            with those of <span class="parameter">right</span>; otherwise, an exception
            is thrown.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
            In the following example, some matrices are element wise multiplied.
            </p><p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACBA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Numerics;

<span class="highlight-keyword">namespace</span> Novacta.Analytics.CodeExamples
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ComplexElementWiseMultiplyExample0  
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-comment">// Create the left operand.</span>
            <span class="highlight-keyword">var</span> data = <span class="highlight-keyword">new</span> Complex[<span class="highlight-number">6</span>] {
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">1</span>, <span class="highlight-number">-1</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">5</span>, <span class="highlight-number">-5</span>),
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">2</span>, <span class="highlight-number">-2</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">6</span>, <span class="highlight-number">-6</span>),
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">3</span>, <span class="highlight-number">-3</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">7</span>, <span class="highlight-number">-7</span>)
            };
            <span class="highlight-keyword">var</span> left = ComplexMatrix.Dense(<span class="highlight-number">3</span>, <span class="highlight-number">2</span>, data, StorageOrder.RowMajor);
            Console.WriteLine(<span class="highlight-literal">"left ="</span>);
            Console.WriteLine(left);

            <span class="highlight-comment">// Create the right operand.</span>
            data = <span class="highlight-keyword">new</span> Complex[<span class="highlight-number">6</span>] {
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">-1</span>, <span class="highlight-number">1</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">-5</span>, <span class="highlight-number">5</span>),
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">-2</span>, <span class="highlight-number">2</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">-6</span>, <span class="highlight-number">6</span>),
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">-3</span>, <span class="highlight-number">3</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">-7</span>, <span class="highlight-number">7</span>)
            };
            <span class="highlight-keyword">var</span> right = ComplexMatrix.Dense(<span class="highlight-number">3</span>, <span class="highlight-number">2</span>, data, StorageOrder.RowMajor);
            Console.WriteLine(<span class="highlight-literal">"right ="</span>);
            Console.WriteLine(right);

            <span class="highlight-comment">// Element wise multiply left by right.</span>
            <span class="highlight-keyword">var</span> result = ComplexMatrix.ElementWiseMultiply(left, right);

            Console.WriteLine();
            Console.WriteLine(<span class="highlight-literal">"Element wise multiplication: left * right ="</span>);
            Console.WriteLine(result);

            <span class="highlight-comment">// Class ReadOnlyComplexMatrix supports element wise multiplications</span>
            <span class="highlight-comment">// where some arguments are read-only matrices.</span>
            <span class="highlight-comment">// Compute the product using a read-only wrapper of left.</span>
            ReadOnlyComplexMatrix readOnlyLeft = left.AsReadOnly();
            result = ReadOnlyComplexMatrix.ElementWiseMultiply(readOnlyLeft, right);

            Console.WriteLine();
            Console.WriteLine(<span class="highlight-literal">"Element wise multiplication: readOnlyLeft * right ="</span>);
            Console.WriteLine(result);
        }
    }
}

<span class="highlight-comment">// Executing method Main() produces the following output:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// left =</span>
<span class="highlight-comment">// (                1,               -1) (                5,               -5) </span>
<span class="highlight-comment">// (                2,               -2) (                6,               -6) </span>
<span class="highlight-comment">// (                3,               -3) (                7,               -7) </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// right =</span>
<span class="highlight-comment">// (               -1,                1) (               -5,                5) </span>
<span class="highlight-comment">// (               -2,                2) (               -6,                6) </span>
<span class="highlight-comment">// (               -3,                3) (               -7,                7) </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Element wise multiplication: left * right =</span>
<span class="highlight-comment">// (                0,                2) (                0,               50) </span>
<span class="highlight-comment">// (                0,                8) (                0,               72) </span>
<span class="highlight-comment">// (                0,               18) (                0,               98) </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Element wise multiplication: readOnlyLeft * right =</span>
<span class="highlight-comment">// (                0,                2) (                0,               50) </span>
<span class="highlight-comment">// (                0,                8) (                0,               72) </span>
<span class="highlight-comment">// (                0,               18) (                0,               98) </span>
<span class="highlight-comment">// </span>
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACBA");</script></p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="AFDA21E4.htm">ComplexMatrix Class</a></div><div class="seeAlsoStyle"><a href="BA833724.htm">ElementWiseMultiply Overload</a></div><div class="seeAlsoStyle"><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) Giovanni Lafratta.</p> </div></body></html>