<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ComplexMatrix.ElementWiseMultiply(ComplexMatrix, ComplexMatrix) Method</title><meta name="Title" content="ElementWiseMultiply(ComplexMatrix, ComplexMatrix)" /><meta name="Help.Id" content="M:Novacta.Analytics.ComplexMatrix.ElementWiseMultiply(Novacta.Analytics.ComplexMatrix,Novacta.Analytics.ComplexMatrix)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics" /><meta name="guid" content="B0EC0338" /><meta name="Description" content="Determines the element wise product of two matrices." /><meta name="tocFile" content="../toc/IDNCKAE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Complex<wbr />Matrix<span id="LSTD6436E60_0" data-languageSpecificText="cpp=::|nu=."></span>Element<wbr />Wise<wbr />Multiply(Complex<wbr />Matrix, Complex<wbr />Matrix) Method</h1><div class="summary">
            Determines the element wise product of two matrices.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="2406EB43.htm">Novacta.Analytics</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">ComplexMatrix</span> <span class="identifier">ElementWiseMultiply</span>(
	<span class="identifier">ComplexMatrix</span> <span class="parameter">left</span>,
	<span class="identifier">ComplexMatrix</span> <span class="parameter">right</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ElementWiseMultiply</span> ( 
	<span class="parameter">left</span> <span class="keyword">As</span> <span class="identifier">ComplexMatrix</span>,
	<span class="parameter">right</span> <span class="keyword">As</span> <span class="identifier">ComplexMatrix</span>
) <span class="keyword">As</span> <span class="identifier">ComplexMatrix</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">ComplexMatrix</span>^ <span class="identifier">ElementWiseMultiply</span>(
	<span class="identifier">ComplexMatrix</span>^ <span class="parameter">left</span>, 
	<span class="identifier">ComplexMatrix</span>^ <span class="parameter">right</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">ElementWiseMultiply</span> : 
        <span class="parameter">left</span> : <span class="identifier">ComplexMatrix</span> * 
        <span class="parameter">right</span> : <span class="identifier">ComplexMatrix</span> <span class="keyword">-&gt;</span> <span class="identifier">ComplexMatrix</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">left</span>  <a href="AFDA21E4.htm">ComplexMatrix</a></dt><dd>The left operand.</dd><dt class="has-text-weight-normal"><span class="parameter">right</span>  <a href="AFDA21E4.htm">ComplexMatrix</a></dt><dd>The right operand.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="AFDA21E4.htm">ComplexMatrix</a><br />
            The result of element wise multiplying <span class="parameter">left</span> by <span class="parameter">right</span>.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDECSection"><p>
            Let <img alt="LaTeX equation" src="../media/latex_5231.svg" style="vertical-align: -2px" /> and  
            <img alt="LaTeX equation" src="../media/latex_5232.svg" style="vertical-align: -2px" /> be the <span class="parameter">left</span>
            number of rows and columns, respectively, and consider its generic entry
            <br /><br /><img alt="LaTeX equation" src="../media/latex_5233.svg" /><br /><br />
            Analogously, Let <img alt="LaTeX equation" src="../media/latex_5234.svg" style="vertical-align: -2px" /> and  
            <img alt="LaTeX equation" src="../media/latex_5235.svg" style="vertical-align: -2px" /> be the <span class="parameter">right</span>
            number of rows and columns, respectively, and let its generic entry given by
            <br /><br /><img alt="LaTeX equation" src="../media/latex_5236.svg" /><br /><br /></p><p>
            The method returns a matrix 
            whose generic entry is 
            <br /><br /><img alt="LaTeX equation" src="../media/latex_5237.svg" /><br /><br /> 
            provided that the dimensions of <span class="parameter">left</span> agree 
            with those of <span class="parameter">right</span>; otherwise, an exception
            is thrown.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDFCSection"><p>
            In the following example, some matrices are element wise multiplied.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;
using System.Numerics;

namespace Novacta.Analytics.CodeExamples
{
    public class ComplexElementWiseMultiplyExample0  
    {
        public void Main()
        {
            // Create the left operand.
            var data = new Complex[6] {
                new(1, -1), new(5, -5),
                new(2, -2), new(6, -6),
                new(3, -3), new(7, -7)
            };
            var left = ComplexMatrix.Dense(3, 2, data, StorageOrder.RowMajor);
            Console.WriteLine("left =");
            Console.WriteLine(left);

            // Create the right operand.
            data = [
                new(-1, 1), new(-5, 5),
                new(-2, 2), new(-6, 6),
                new(-3, 3), new(-7, 7)
            ];
            var right = ComplexMatrix.Dense(3, 2, data, StorageOrder.RowMajor);
            Console.WriteLine("right =");
            Console.WriteLine(right);

            // Element wise multiply left by right.
            var result = ComplexMatrix.ElementWiseMultiply(left, right);

            Console.WriteLine();
            Console.WriteLine("Element wise multiplication: left * right =");
            Console.WriteLine(result);

            // Class ReadOnlyComplexMatrix supports element wise multiplications
            // where some arguments are read-only matrices.
            // Compute the product using a read-only wrapper of left.
            ReadOnlyComplexMatrix readOnlyLeft = left.AsReadOnly();
            result = ReadOnlyComplexMatrix.ElementWiseMultiply(readOnlyLeft, right);

            Console.WriteLine();
            Console.WriteLine("Element wise multiplication: readOnlyLeft * right =");
            Console.WriteLine(result);
        }
    }
}

// Executing method Main() produces the following output:
// 
// left =
// (                1,               -1) (                5,               -5) 
// (                2,               -2) (                6,               -6) 
// (                3,               -3) (                7,               -7) 
// 
// 
// right =
// (               -1,                1) (               -5,                5) 
// (               -2,                2) (               -6,                6) 
// (               -3,                3) (               -7,                7) 
// 
// 
// 
// Element wise multiplication: left * right =
// (                0,                2) (                0,               50) 
// (                0,                8) (                0,               72) 
// (                0,               18) (                0,               98) 
// 
// 
// 
// Element wise multiplication: readOnlyLeft * right =
// (                0,                2) (                0,               50) 
// (                0,                8) (                0,               72) 
// (                0,               18) (                0,               98) 
// 
//</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDGCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">left</span> is <b>null</b>.<br />
            -or-<br /><span class="parameter">right</span> is <b>null</b>.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><span class="parameter">left</span> and <span class="parameter">right</span> have
            not the same number of rows and columns.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="AFDA21E4.htm">ComplexMatrix Class</a></div><div><a href="BA833724.htm">ElementWiseMultiply Overload</a></div><div><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>