<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ReadOnlyComplexMatrix.FindWhile Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="FindWhile method" /><meta name="System.Keywords" content="ReadOnlyComplexMatrix.FindWhile method" /><meta name="Microsoft.Help.F1" content="Novacta.Analytics.ReadOnlyComplexMatrix.FindWhile" /><meta name="Microsoft.Help.Id" content="M:Novacta.Analytics.ReadOnlyComplexMatrix.FindWhile(System.Predicate{System.Numerics.Complex})" /><meta name="Description" content="Searches for entries in this instance that matches the conditions defined by the specified predicate, and returns their zero-based linear indexes." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Novacta.Analytics" /><meta name="file" content="E726D5C1" /><meta name="guid" content="E726D5C1" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Novacta.Analytics Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a4ea75a2-ef53-4ea2-a7f4-b493a50f90b3.htm" title="Novacta.Analytics Documentation" tocid="roottoc">Novacta.Analytics Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/D9FC3C8F.htm" title="Novacta.Analytics namespaces" tocid="D9FC3C8F">Novacta.Analytics namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2406EB43.htm" title="Novacta.Analytics" tocid="2406EB43">Novacta.Analytics</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/E2E3D527.htm" title="ReadOnlyComplexMatrix Class" tocid="E2E3D527">ReadOnlyComplexMatrix Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/66F34118.htm" title="ReadOnlyComplexMatrix Methods" tocid="66F34118">ReadOnlyComplexMatrix Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/9639C494.htm" title="Add Method " tocid="9639C494">Add Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7F3A11A2.htm" title="Apply Method " tocid="7F3A11A2">Apply Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5336827.htm" title="AsColumnMajorDenseArray Method " tocid="5336827">AsColumnMajorDenseArray Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/F829C048.htm" title="Conjugate Method " tocid="F829C048">Conjugate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/CFC3298D.htm" title="ConjugateTranspose Method " tocid="CFC3298D">ConjugateTranspose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/A4539970.htm" title="Contains Method " tocid="A4539970">Contains Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/FE1E2E7.htm" title="CopyTo Method " tocid="FE1E2E7">CopyTo Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/4A0E7FAE.htm" title="Divide Method " tocid="4A0E7FAE">Divide Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/5F558804.htm" title="ElementWiseMultiply Method " tocid="5F558804">ElementWiseMultiply Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/C2306C43.htm" title="Find Method " tocid="C2306C43">Find Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/52DBDD86.htm" title="FindNonzero Method " tocid="52DBDD86">FindNonzero Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/E726D5C1.htm" title="FindWhile Method " tocid="E726D5C1">FindWhile Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7B9FFDF0.htm" title="GetEnumerator Method " tocid="7B9FFDF0">GetEnumerator Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8BB1D33D.htm" title="ICollection(Complex).Add Method " tocid="8BB1D33D">ICollection(Complex).Add Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/42A321E.htm" title="ICollection(Complex).Clear Method " tocid="42A321E">ICollection(Complex).Clear Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4A98F96D.htm" title="ICollection(Complex).Remove Method " tocid="4A98F96D">ICollection(Complex).Remove Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/387BD2B2.htm" title="IEnumerable.GetEnumerator Method " tocid="387BD2B2">IEnumerable.GetEnumerator Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/A0710F89.htm" title="IList(Complex).Insert Method " tocid="A0710F89">IList(Complex).Insert Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7ACF6CE1.htm" title="IList(Complex).RemoveAt Method " tocid="7ACF6CE1">IList(Complex).RemoveAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/555BAA37.htm" title="IndexOf Method " tocid="555BAA37">IndexOf Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/E426261D.htm" title="Multiply Method " tocid="E426261D">Multiply Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/334D92AB.htm" title="Negate Method " tocid="334D92AB">Negate Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/F57967DD.htm" title="Subtract Method " tocid="F57967DD">Subtract Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5DF22948.htm" title="ToComplex Method " tocid="5DF22948">ToComplex Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/230292D5.htm" title="ToString Method " tocid="230292D5">ToString Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7FC0EC0F.htm" title="Transpose Method " tocid="7FC0EC0F">Transpose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7257F226.htm" title="TryGetColumnName Method " tocid="7257F226">TryGetColumnName Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/33C723DB.htm" title="TryGetRowName Method " tocid="33C723DB">TryGetRowName Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/7F084FF9.htm" title="Vec Method " tocid="7F084FF9">Vec Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>ReadOnlyComplexMatrix<span id="LSTF4D25B90_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF4D25B90_0?cpp=::|nu=.");</script>FindWhile Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Searches for entries in this instance that matches the conditions defined by the specified predicate, 
            and returns their zero-based linear indexes.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="2406EB43.htm">Novacta.Analytics</a><br />
    <strong>Assembly:</strong>
   Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">IndexCollection</span> <span class="identifier">FindWhile</span>(
	<span class="identifier">Predicate</span>&lt;<span class="identifier">Complex</span>&gt; <span class="parameter">match</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">FindWhile</span> ( 
	<span class="parameter">match</span> <span class="keyword">As</span> <span class="identifier">Predicate</span>(<span class="keyword">Of</span> <span class="identifier">Complex</span>)
) <span class="keyword">As</span> <span class="identifier">IndexCollection</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">IndexCollection</span>^ <span class="identifier">FindWhile</span>(
	<span class="identifier">Predicate</span>&lt;<span class="identifier">Complex</span>&gt;^ <span class="parameter">match</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">FindWhile</span> : 
        <span class="parameter">match</span> : <span class="identifier">Predicate</span>&lt;<span class="identifier">Complex</span>&gt; <span class="keyword">-&gt;</span> <span class="identifier">IndexCollection</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">match</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.predicate-1" target="_blank" rel="noopener noreferrer">System<span id="LSTF4D25B90_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF4D25B90_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Predicate</a><span id="LSTF4D25B90_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF4D25B90_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="https://docs.microsoft.com/dotnet/api/system.numerics.complex" target="_blank" rel="noopener noreferrer">Complex</a><span id="LSTF4D25B90_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF4D25B90_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />The predicate that defines the conditions 
            of the entries to search for.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="9B3BDFD7.htm">IndexCollection</a><br />The collection of zero-based linear indexes of the entries that 
            matches the conditions defined by <span class="parameter">match</span>, if found; 
            otherwise <b>null</b>.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">match</span> is <b>null</b>.
            </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
            Matrix entries are interpreted as well ordered following a 
            column major ordering. The position of an entry in such well
            ordering is referred to as the <i>linear</i> position of that entry.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
            In the following example, the negative entries of a data matrix 
            are found.
            </p><p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABBA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Numerics;

<span class="highlight-keyword">namespace</span> Novacta.Analytics.CodeExamples
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ComplexFindWhileExample0  
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-comment">// Create a matrix.</span>
            <span class="highlight-keyword">var</span> data = <span class="highlight-keyword">new</span> Complex[<span class="highlight-number">6</span>] {
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">0</span>,  <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">5</span>, <span class="highlight-number">-5</span>),
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">2</span>, <span class="highlight-number">-2</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">0</span>,  <span class="highlight-number">0</span>),
                <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">0</span>,  <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Complex(<span class="highlight-number">2</span>, <span class="highlight-number">-2</span>)
            };
            <span class="highlight-keyword">var</span> matrix = ComplexMatrix.Dense(<span class="highlight-number">3</span>, <span class="highlight-number">2</span>, data, StorageOrder.RowMajor);
            Console.WriteLine(<span class="highlight-literal">"The data matrix:"</span>);
            Console.WriteLine(matrix);

            <span class="highlight-comment">// Match entries having magnitude less than 2.</span>
            <span class="highlight-keyword">static</span> <span class="highlight-keyword">bool</span> match(Complex <span class="highlight-keyword">value</span>) { <span class="highlight-keyword">return</span> <span class="highlight-keyword">value</span>.Magnitude &lt; <span class="highlight-number">2.0</span>; }

            <span class="highlight-comment">// Find the linear indexes of matched entries in data.</span>
            <span class="highlight-keyword">var</span> indexes = matrix.FindWhile(match);

            Console.WriteLine();
            Console.WriteLine(<span class="highlight-literal">"Linear indexes of matched entries in data:"</span>);
            Console.WriteLine(indexes);

            <span class="highlight-comment">// FindWhile is available for read-only matrices:</span>
            <span class="highlight-comment">// find matched entries using a read-only wrapper of the data matrix.</span>
            ReadOnlyComplexMatrix readOnlyMatrix = matrix.AsReadOnly();
            indexes = readOnlyMatrix.FindWhile(match);

            Console.WriteLine();
            Console.WriteLine(<span class="highlight-literal">"Using read-only data. Linear indexes of matched entries:"</span>);
            Console.WriteLine(indexes);
        }
    }
}

<span class="highlight-comment">// Executing method Main() produces the following output:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// The data matrix:</span>
<span class="highlight-comment">// (                0,                0) (                5,               -5) </span>
<span class="highlight-comment">// (                2,               -2) (                0,                0) </span>
<span class="highlight-comment">// (                0,                0) (                2,               -2) </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Linear indexes of matched entries in data:</span>
<span class="highlight-comment">// 0, 2, 4</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Using read-only data. Linear indexes of matched entries:</span>
<span class="highlight-comment">// 0, 2, 4</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABBA");</script></p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="E2E3D527.htm">ReadOnlyComplexMatrix Class</a></div><div class="seeAlsoStyle"><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) Giovanni Lafratta.</p> </div></body></html>