<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ClassicalMultidimensionalScaling Class</title><meta name="Title" content="ClassicalMultidimensionalScaling" /><meta name="Help.Id" content="T:Novacta.Analytics.ClassicalMultidimensionalScaling" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics" /><meta name="guid" content="F58681BC" /><meta name="Description" content="Represents a classical multidimensional scaling analysis." /><meta name="tocFile" content="../toc/IDAE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Classical<wbr />Multidimensional<wbr />Scaling Class</h1><div class="summary">
            Represents a classical multidimensional scaling analysis.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="2406EB43.htm">Novacta.Analytics</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ClassicalMultidimensionalScaling</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">ClassicalMultidimensionalScaling</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">ClassicalMultidimensionalScaling</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">ClassicalMultidimensionalScaling</span> = <span class="keyword">class</span> <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">ClassicalMultidimensionalScaling</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p><b>Instantiation</b></p><p>
            New instances of class <span class="selflink">ClassicalMultidimensionalScaling</span> can be initialized by 
            calling method <a href="F461AD7E.htm">Analyze(DoubleMatrix, Nullable<span id="LSTF58681BC_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LSTF58681BC_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>, which implements the 
            classical multidimensional scaling algorithm.
            </p><p>
            Given a matrix of proximities, say <img alt="LaTeX equation" src="../media/latex_5041.svg" />, let
            <img alt="LaTeX equation" src="../media/latex_5042.svg" /> be the matrix of its squared elements, and 
            define the transformed matrix of proximities as 
            <br /><br /><img alt="LaTeX equation" src="../media/latex_5043.svg" /><br /><br />
            where <img alt="LaTeX equation" src="../media/latex_5044.svg" /> is the centering matrix. 
            </p><p>
            Let <img alt="LaTeX equation" src="../media/latex_5045.svg" /> be the number of positive eigenvalues
            of matrix <img alt="LaTeX equation" src="../media/latex_5046.svg" />.
            If the configuration dimension is not specified to method
            <a href="F461AD7E.htm">Analyze(DoubleMatrix, Nullable<span id="LSTF58681BC_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LSTF58681BC_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            it is set equal to <img alt="LaTeX equation" src="../media/latex_5047.svg" /> if <img alt="LaTeX equation" src="../media/latex_5048.svg" style="vertical-align: -4px" />;
            otherwise, an exception is thrown.
            </p><p>
            If the configuration dimension is specified to method 
            <a href="F461AD7E.htm">Analyze(DoubleMatrix, Nullable<span id="LSTF58681BC_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LSTF58681BC_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>, then it must be less than or equal to
            <img alt="LaTeX equation" src="../media/latex_5049.svg" />; otherwise, an exception is thrown.
            </p><p><b>Results</b></p><p>
            Let <img alt="LaTeX equation" src="../media/latex_5050.svg" style="vertical-align: -4px" /> be the
            eigenvalues of <img alt="LaTeX equation" src="../media/latex_5051.svg" /> in decreasing order, and let
            <img alt="LaTeX equation" src="../media/latex_5052.svg" style="vertical-align: -4px" /> be the corresponding eigenvectors.
            </p><p>
            If the dimension is equal to <img alt="LaTeX equation" src="../media/latex_5053.svg" />, then
            the configuration is given by matrix:
            <br /><br /><img alt="LaTeX equation" src="../media/latex_5054.svg" /><br /><br />
            which can be inspected through property <a href="C7C9547C.htm">Configuration</a>.
            </p><p><b>Goodness of fit</b></p><p>
            The goodness of fit of such configuration is given by the formula
            <br /><br /><img alt="LaTeX equation" src="../media/latex_5055.svg" /><br /><br />
            and is accessible through property <a href="19F66745.htm">GoodnessOfFit</a>.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><p>
            In the following example, a classical multidimensional scaling analysis is performed on 
            a matrix of proximities.
            </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;

namespace Novacta.Analytics.CodeExamples
{
    public class ClassicalMultidimensionalScalingExample0  
    {
        public void Main()
        {
            // Create a matrix of proximities among cities.
            int numberOfCities = 10;

            string[] cities = [
                "Atlanta",
                "Chicago",
                "Denver",
                "Houston",
                "Los Angeles",
                "Miami",
                "New York",
                "San Francisco",
                "Seattle",
                "Washington DC"];

            var proximities = DoubleMatrix.Dense(
                numberOfRows: numberOfCities,
                numberOfColumns: numberOfCities,
                data: [
                      0,  587, 1212,  701, 1936,  604,  748, 2139, 2182,  543,
                    587,    0,  920,  940, 1745, 1188,  713, 1858, 1737,  597,
                   1212,  920,    0,  879,  831, 1726, 1631,  949, 1021, 1494,
                    701,  940,  879,    0, 1374,  968, 1420, 1645, 1891, 1220,
                   1936, 1745,  831, 1374,    0, 2339, 2451,  347,  959, 2300,
                    604, 1188, 1726,  968, 2339,    0, 1092, 2594, 2734,  923,
                    748,  713, 1631, 1420, 2451, 1092,    0, 2571, 2408,  205,
                   2139, 1858,  949, 1645,  347, 2594, 2571,    0,  678, 2442,
                   2182, 1737, 1021, 1891,  959, 2734, 2408,  678,    0, 2329,
                    543,  597, 1494, 1220, 2300,  923,  205, 2442, 2329,    0],
                storageOrder: StorageOrder.RowMajor);

            // Add city names to the matrix of proximities.
            for (int i = 0; i &lt; numberOfCities; i++)
            {
                var city = cities[i];
                proximities.SetRowName(i, city);
                proximities.SetColumnName(i, city);
            }

            // Define the dimension of the configuration of points in the target space.
            // Passing null, the dimension of the configuration is automatically selected.
            int? configurationDimension = null;

            // Execute a classical MDS analysis.
            var metricMds =
                ClassicalMultidimensionalScaling.Analyze(
                    proximities,
                    configurationDimension);

            // Display the configuration.
            Console.WriteLine("City coordinates:");
            Console.WriteLine(metricMds.Configuration);

            // Display the goodness of fit.
            Console.WriteLine("Goodness of fit:");
            Console.WriteLine(metricMds.GoodnessOfFit);
        }
    }
}

// Executing method Main() produces the following output:
// 
// City coordinates:
// [Atlanta]        -718.759381      142.994269       35.102499        -1.22496264      7.40947762       -1.5046461       6.58357404e-06   
// [Chicago]        -382.055766      -340.839623      29.6022277       -8.23788477      12.0242975       2.33830156       6.58357404e-06   
// [Denver]         481.602336       -25.2850406      53.3938021       1.33927902       -15.6658897      0.952696317      6.58357404e-06   
// [Houston]        -161.466258      572.769911       1.45257147       -1.76231781      0.671865645      -2.70076208      6.58357404e-06   
// [Los Angeles]    1203.73802       390.100291       -18.6350654      14.9748641       3.16920061       1.65614881       6.58357404e-06   
// [Miami]          -1133.52708      581.907309       -32.2688418      -2.37568536      -2.97185365      2.04718777       6.58357404e-06   
// [New York]       -1072.23569      -519.02423       -34.3418782      -14.2538571      -6.44732888      -0.270908782     6.58357404e-06   
// [San Francisco]  1420.60332       112.589202       -7.75475501      -18.120276       0.805412307      -0.869519732     6.58357404e-06   
// [Seattle]        1341.72248       -579.739278      -23.6507873      5.96145265       1.4286322        -0.614379418     6.58357404e-06   
// [Washington DC]  -979.621992      -335.47281       -2.89977264      23.6993879       -0.423813627     -1.03411834      6.58357404e-06   
// 
// 
// Goodness of fit:
// 0.9963038236716906</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDHEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="C7C9547C.htm">Configuration</a></td><td>
            Gets the configuration of points in the target space.
            </td></tr><tr><td><a href="19F66745.htm">GoodnessOfFit</a></td><td>
            Gets the goodness of fit at the <a href="C7C9547C.htm">Configuration</a>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="F461AD7E.htm">Analyze</a></td><td>
            Executes a metric multidimensional scaling analysis.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4 class="quickLinkHeader">Reference</h4><div><a href="2406EB43.htm">Novacta.Analytics Namespace</a></div><div><a href="4FE4ECE4.htm">NonMetricMultidimensionalScaling</a></div><h4 class="quickLinkHeader">Other Resources</h4><div><a href="https://en.wikipedia.org/wiki/Multidimensional_scaling#Classical_multidimensional_scaling" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Multidimensional_scaling#Classical_multidimensional_scaling</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a><ul class="menu"><li><a class="quickLink">Reference</a></li><li><a class="quickLink">Other Resources</a></li></ul></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>