<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>RareEventProbabilityEstimationContext Class</title><meta name="Title" content="RareEventProbabilityEstimationContext" /><meta name="Help.Id" content="T:Novacta.Analytics.Advanced.RareEventProbabilityEstimationContext" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Novacta.Analytics.Advanced" /><meta name="guid" content="F877CA6A" /><meta name="Description" content="Represents a Cross-Entropy context in which the estimation of a rare event probability is obtained by exploiting a instance." /><meta name="tocFile" content="../toc/IDBE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Novacta.Analytics Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Rare<wbr />Event<wbr />Probability<wbr />Estimation<wbr />Context Class</h1><div class="summary">
             Represents a Cross-Entropy context in which the 
             estimation of a rare event probability 
             is obtained by exploiting 
             a <a href="463F9A03.htm">RareEventProbabilityEstimator</a> instance.
             </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="F249DE1E.htm">Novacta.Analytics.Advanced</a><br /><strong>Assembly:</strong> Novacta.Analytics (in Novacta.Analytics.dll) Version: 2.1.0+428f3840cfab98dda567bb0ed350b302533e273a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">RareEventProbabilityEstimationContext</span> : <span class="identifier">CrossEntropyContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">RareEventProbabilityEstimationContext</span>
	<span class="keyword">Inherits</span> <span class="identifier">CrossEntropyContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">RareEventProbabilityEstimationContext</span> <span class="keyword">abstract</span> : <span class="keyword">public</span> <span class="identifier">CrossEntropyContext</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">RareEventProbabilityEstimationContext</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">CrossEntropyContext</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="F04A1B18.htm">CrossEntropyContext</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">RareEventProbabilityEstimationContext</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p>
             A <a href="463F9A03.htm">RareEventProbabilityEstimator</a> is executed by calling its 
             <a href="652846B0.htm">Estimate</a> 
             method. This is a 
             template method, in the sense that it defines the 
             invariant parts of a Cross-Entropy program for rare event simulation.
             Such method relies on an instance of 
             class <span class="selflink">RareEventProbabilityEstimationContext</span>, which is 
             passed as a parameter to it and specifies the 
             <em>primitive operations</em> 
             of the template method, i.e. 
             those varying steps of the algorithm that depends 
             on the problem under study.
             </p><p>
             Class <span class="selflink">RareEventProbabilityEstimationContext</span> thoroughly 
             defines the rare event of interest, and supplies the 
             primitive operations as abstract methods, that its 
             subclasses will override to provide the concrete 
             behavior of the estimator.
             </p><p>
             A Cross-Entropy estimator is designed to evaluate the probability 
             of rare events regarding the performance of complex systems.
             It is assumed that such probability must be evaluated 
             with respect to a specific density function, member of a parametric 
             family  
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9561.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_9562.svg" /> is a vector representing 
             a possible state of the system, 
             and <img alt="LaTeX equation" src="../media/latex_9563.svg" style="vertical-align: -1px" /> is the set of allowable 
             values for parameter <img alt="LaTeX equation" src="../media/latex_9564.svg" />. 
             </p><p>
             Let <img alt="LaTeX equation" src="../media/latex_9565.svg" /> be
             an extreme performance value, referred to as the 
             <i>threshold level</i>, and consider  
             the event <img alt="LaTeX equation" src="../media/latex_9566.svg" style="vertical-align: -4px" /> defined as 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9567.svg" /><br /><br /> 
             or 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9568.svg" /><br /><br /> 
             where <img alt="LaTeX equation" src="../media/latex_9569.svg" /> is the state space 
             of the system and 
             <img alt="LaTeX equation" src="../media/latex_9570.svg" style="vertical-align: -4px" /> is the function 
             returning the system performance at state  
             <img alt="LaTeX equation" src="../media/latex_9571.svg" />. Let us assume that 
             the probability of an event 
             having form <img alt="LaTeX equation" src="../media/latex_9572.svg" style="vertical-align: -2px" /> or <img alt="LaTeX equation" src="../media/latex_9573.svg" style="vertical-align: -2px" /> must 
             be evaluated under the specific parameter 
             value <img alt="LaTeX equation" src="../media/latex_9574.svg" style="vertical-align: -1px" />, 
             the so called <i>nominal parameter</i>: such 
             probabilities can be evaluated by a Cross-Entropy 
             estimator.
             </p><p>
             At instantiation, the constructor of 
             a <span class="selflink">RareEventProbabilityEstimationContext</span> object
             will receive information about the rare event under study by
             means of parameters representing <img alt="LaTeX equation" src="../media/latex_9575.svg" />,
             <img alt="LaTeX equation" src="../media/latex_9576.svg" />, and a constant stating if the event has 
             the form <img alt="LaTeX equation" src="../media/latex_9577.svg" style="vertical-align: -2px" /> or <img alt="LaTeX equation" src="../media/latex_9578.svg" style="vertical-align: -2px" />.
             </p><p>
             After construction, property 
             <a href="54AA3B2D.htm">ThresholdLevel</a> represents 
             <img alt="LaTeX equation" src="../media/latex_9579.svg" />, while <img alt="LaTeX equation" src="../media/latex_9580.svg" />
             can be inspected via property <a href="1FE43CBC.htm">InitialParameter</a>. Lastly, 
             property 
             <a href="94A47DB8.htm">RareEventPerformanceBoundedness</a> 
             signals that the 
             event has the form <img alt="LaTeX equation" src="../media/latex_9581.svg" style="vertical-align: -4px" /> if it 
             evaluates to the constant <a href="D6995B37.htm">Lower</a>, or 
             that it has the form <img alt="LaTeX equation" src="../media/latex_9582.svg" style="vertical-align: -4px" /> 
             if it evaluates to
             the constant <a href="D6995B37.htm">Upper</a>.
             </p><p><b>Implementing a context for rare event simulation</b></p><p>
             The Cross-Entropy method 
             provides an iterative multi step procedure, where, at each 
             iteration <img alt="LaTeX equation" src="../media/latex_9583.svg" />, the <i>sampling step</i>
             is executed in order to generate diverse candidate states of 
             the system, sampled from a distribution 
             characterized by the <i>reference parameter</i> of the iteration,
             say <img alt="LaTeX equation" src="../media/latex_9584.svg" style="vertical-align: -2px" />. 
             Such sample is thus exploited in the <i>updating step</i>,
             in which a new level 
             <img alt="LaTeX equation" src="../media/latex_9585.svg" style="vertical-align: -2px" /> and a new <em>reference</em> 
             parameter <img alt="LaTeX equation" src="../media/latex_9586.svg" style="vertical-align: -2px" /> are 
             identified to modify the distribution from which the samples 
             will be obtained in the next iteration, in order to improve 
             the probability of sampling relevant states, i.e. those 
             states corresponding to the performance excesses of interest
             (See the documentation of class <a href="298402DD.htm">CrossEntropyProgram</a> for a 
             thorough discussion of the Cross-Entropy method). 
             </p><p>
             When the Cross-Entropy method is applied in an rare event 
             context, the <i>estimating step</i> is executed, in which the rare event 
             probability is effectively estimated.
             </p><p>These steps must be implemented as follows.</p><p><b><i>Sampling step</i></b></p><p>
             Since class <span class="selflink">RareEventProbabilityEstimationContext</span> derives 
             from <a href="F04A1B18.htm">CrossEntropyContext</a>,  
             property <a href="6BFCB280.htm">StateDimension</a> 
             will return the dimension of the points in the Cross-Entropy samples.  
             If a state <img alt="LaTeX equation" src="../media/latex_9587.svg" /> of the system 
             can be represented as a vector of length 
             <img alt="LaTeX equation" src="../media/latex_9588.svg" />, as in 
             <img alt="LaTeX equation" src="../media/latex_9589.svg" style="vertical-align: -4px" />, then 
             <img alt="LaTeX equation" src="../media/latex_9590.svg" /> should be returned.
             In addition, method <a href="6D600898.htm">PartialSample(<span id="LSTF877CA6A_0" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LSTF877CA6A_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Tuple<span id="LSTF877CA6A_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32<span id="LSTF877CA6A_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, RandomNumberGenerator, DoubleMatrix, Int32)</a> 
             must be overriden to determine how to draw the sample locally 
             to a given thread when processing in parallel the sampling step.
             </p><p><b><i>Updating step</i></b></p><p>
             Class <span class="selflink">RareEventProbabilityEstimationContext</span> overrides 
             for you the methods 
             required for ordering the system performances of the states sampled 
             in the previous step, and for updating the 
             iteration levels.
             However, to complete the implementation of the <i>updating step</i>, 
             function <img alt="LaTeX equation" src="../media/latex_9591.svg" /> must be defined via 
             method <a href="1AF89526.htm">Performance(DoubleMatrix)</a>,
             and method <a href="4AE2243.htm">UpdateParameter(LinkedList<span id="LSTF877CA6A_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LSTF877CA6A_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, DoubleMatrix)</a> 
             also needs to be overridden. 
             Given <img alt="LaTeX equation" src="../media/latex_9592.svg" style="vertical-align: -2px" /> and 
             <img alt="LaTeX equation" src="../media/latex_9593.svg" style="vertical-align: -2px" />, the method is expected to return 
             the solution to the following program:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9594.svg" /><br /><br />
             where 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9595.svg" /><br /><br />
             is the Likelihood ratio of <img alt="LaTeX equation" src="../media/latex_9596.svg" style="vertical-align: -4px" /> to <img alt="LaTeX equation" src="../media/latex_9597.svg" style="vertical-align: -4px" />
             evaluated at <img alt="LaTeX equation" src="../media/latex_9598.svg" />,
             <img alt="LaTeX equation" src="../media/latex_9599.svg" style="vertical-align: -4px" /> is the set 
             of elite sample positions (row indexes of the matrix returned 
             by method <a href="CD524A5D.htm">Sample</a>, with 
             <img alt="LaTeX equation" src="../media/latex_9600.svg" style="vertical-align: -5px" /> being the <img alt="LaTeX equation" src="../media/latex_9601.svg" />-th row of such matrix
             and <img alt="LaTeX equation" src="../media/latex_9602.svg" /> being its number of rows.
             Method <a href="4AE2243.htm">UpdateParameter</a> 
             receives two parameters. The first is a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1" target="_blank" rel="noopener noreferrer">LinkedList<span id="LSTF877CA6A_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTF877CA6A_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> 
             of <a href="1DED9EB1.htm">DoubleMatrix</a> instances, 
             representing the <em>reference</em> parameters applied in previous 
             iterations. The instance 
             returned by property <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1.last" target="_blank" rel="noopener noreferrer">Last</a> corresponds to 
             parameter <img alt="LaTeX equation" src="../media/latex_9603.svg" style="vertical-align: -2px" />. The second method parameter is 
             a <a href="1DED9EB1.htm">DoubleMatrix</a> instance whose rows represent the elite points
             sampled in the current iteration.
             </p><p><b><i>Estimating step</i></b></p><p>
             The estimating step is executed after that the underlying 
             Cross-Entropy program 
             has converged. Given the optimal 
             parameter <img alt="LaTeX equation" src="../media/latex_9604.svg" style="vertical-align: -2px" />, 
             a Likelihood estimator based on the ratio 
             <img alt="LaTeX equation" src="../media/latex_9605.svg" style="vertical-align: -5px" /> is exploited by 
             drawing a sample from density 
             <img alt="LaTeX equation" src="../media/latex_9606.svg" style="vertical-align: -4px" />.  
             Method 
             <a href="B20663B.htm">GetLikelihoodRatio(DoubleMatrix, DoubleMatrix, DoubleMatrix)</a> 
             must be overridden in order to evaluate the ratio 
             at a specific sample point 
             for a given pair of <i>nominal</i> and <i>reference</i> parameters.
             </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><p>
             The following example is based on the Rare-Event Simulation Example 
             proposed by Rubinstein and Kroese 
             (Section 2.2.1)<sup class="citation"><a href="#cite1">[1]</a></sup>.
             </p><p>
             A Cross-Entropy estimator is exploited 
             to analyze, under extreme conditions, the length 
             <img alt="LaTeX equation" src="../media/latex_9607.svg" /> of the shortest path from 
             node <img alt="LaTeX equation" src="../media/latex_9608.svg" /> to 
             node <img alt="LaTeX equation" src="../media/latex_9609.svg" /> in the undirected graph 
             depicted in the following figure.
            </p><p>100%Shortest path from A to BRareEventExample.png</p><p>
             There are 5 edges in the graph. Their lengths 
             are 
             represented as independent and exponentially distributed random 
             variables <img alt="LaTeX equation" src="../media/latex_9610.svg" style="vertical-align: -4px" />, with 
             variable <img alt="LaTeX equation" src="../media/latex_9611.svg" style="vertical-align: -2px" /> 
             having a specific mean <img alt="LaTeX equation" src="../media/latex_9612.svg" style="vertical-align: -2px" />, 
             for <img alt="LaTeX equation" src="../media/latex_9613.svg" style="vertical-align: -4px" />, forming 
             the following <em>nominal</em> parameter:  
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9614.svg" /><br /><br /></p><p>
             In order to represent a possible state 
             <img alt="LaTeX equation" src="../media/latex_9615.svg" /> of such system, we hence need a 
             vector of length 5:
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9616.svg" /><br /><br />    
             and the performance of the system is the total length 
             <img alt="LaTeX equation" src="../media/latex_9617.svg" /> of the 
             shortest path given <img alt="LaTeX equation" src="../media/latex_9618.svg" />, i.e. 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9619.svg" /><br /><br /></p><p>
             The likelihood ratio of 
             <img alt="LaTeX equation" src="../media/latex_9620.svg" style="vertical-align: -4px" /> to the generic density 
             <img alt="LaTeX equation" src="../media/latex_9621.svg" style="vertical-align: -4px" /> is 
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9622.svg" /><br /><br /></p><p>
             At iteration <img alt="LaTeX equation" src="../media/latex_9623.svg" />, the parameter updating formula is, 
             for <img alt="LaTeX equation" src="../media/latex_9624.svg" style="vertical-align: -4px" />,
             <br /><br /><img alt="LaTeX equation" src="../media/latex_9625.svg" /><br /><br />
             where <img alt="LaTeX equation" src="../media/latex_9626.svg" style="vertical-align: -4px" />.
             </p><p>
             In this example, we want to estimate the probability of observing 
             a shortest path greater than or equal to a <em>level</em> 
             set as <img alt="LaTeX equation" src="../media/latex_9627.svg" />. 
             This is equivalent to define the target event as 
             <img alt="LaTeX equation" src="../media/latex_9628.svg" style="vertical-align: -4px" />. 
             </p><p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Estimating the probability of an extreme shortest path in a network.</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;
using System.Collections.Generic;
using Novacta.Analytics.Advanced;
using System.Linq;

namespace Novacta.Analytics.CodeExamples.Advanced
{
    public class CrossEntropyEstimatorExample0  
    {
        class RareShortestPathProbabilityEstimation
            : RareEventProbabilityEstimationContext
        {
            public RareShortestPathProbabilityEstimation()
                : base(
                    // There are 5 edges in the network under study.
                    // Hence we need a vector of length 5 to represent
                    // the state of the system, i.e. the observed lengths 
                    // corresponding to such edges.
                    stateDimension: 5,
                    // Set the threshold level and the rare event 
                    // boundedness in order to target the probability 
                    // of the event {2.0 &lt;= Performance(x)}.
                    thresholdLevel: 2.0,
                    rareEventPerformanceBoundedness:
                        RareEventPerformanceBoundedness.Lower,
                    // Define the nominal parameter of interest.
                    initialParameter: DoubleMatrix.Dense(1, 5,
                        [0.25, 0.4, 0.1, 0.3, 0.2])
                      )
            {
            }

            // Define the performance function of the 
            // system under study.
            protected override double Performance(DoubleMatrix x)
            {
                // Compute the lengths of the possible 
                // paths when the state of the system is x.
                DoubleMatrix paths = DoubleMatrix.Dense(4, 1);
                paths[0] = x[0] + x[3];
                paths[1] = x[0] + x[2] + x[4];
                paths[2] = x[1] + x[4];
                paths[3] = x[1] + x[2] + x[3];

                // Compute the shortest path.
                var indexValuePair = Stat.Min(paths);

                // Return the shortest path.
                return indexValuePair.Value;
            }

            // Set how to sample system states
            // given the specified parameter. 
            protected override void PartialSample(
                double[] destinationArray,
                Tuple&lt;int, int&gt; sampleSubsetRange,
                RandomNumberGenerator randomNumberGenerator,
                DoubleMatrix parameter,
                int sampleSize)
            {
                // Must be Item1 included, Item2 excluded
                int subSampleSize = sampleSubsetRange.Item2 - sampleSubsetRange.Item1;
                int leadingDimension = Convert.ToInt32(sampleSize);
                for (int j = 0; j &lt; this.StateDimension; j++)
                {
                    var distribution = new ExponentialDistribution(1.0 / parameter[j])
                    {
                        RandomNumberGenerator = randomNumberGenerator
                    };
                    distribution.Sample(
                         subSampleSize,
                         destinationArray, j * leadingDimension + sampleSubsetRange.Item1);
                }
            }

            // Define the Likelihood ratio for the 
            // problem under study.
            protected override double GetLikelihoodRatio(
                DoubleMatrix samplePoint,
                DoubleMatrix nominalParameter,
                DoubleMatrix referenceParameter)
            {
                var x = samplePoint;
                var u = nominalParameter;
                var v = referenceParameter;
                var prod = 1.0;
                var sum = 0.0;
                for (int j = 0; j &lt; x.Count; j++)
                {
                    prod *= v[j] / u[j];
                    sum += x[j] * (1.0 / u[j] - 1.0 / v[j]);
                }

                return Math.Exp(-sum) * prod;
            }

            // Set how to update the parameter via 
            // the elite sample.
            protected override DoubleMatrix UpdateParameter(
                LinkedList&lt;DoubleMatrix&gt; parameters,
                DoubleMatrix eliteSample)
            {
                var nominalParameter = parameters.First.Value;
                var referenceParameter = parameters.Last.Value;

                var ratios = DoubleMatrix.Dense(1, eliteSample.NumberOfRows);

                var u = nominalParameter;
                var w = referenceParameter;
                for (int i = 0; i &lt; eliteSample.NumberOfRows; i++)
                {
                    var x = eliteSample[i, ":"];
                    ratios[i] = this.GetLikelihoodRatio(x, u, w);
                }

                var newParameter = (ratios * eliteSample);
                var sumOfRatios = Stat.Sum(ratios);
                newParameter.InPlaceApply(d =&gt; d / sumOfRatios);

                return newParameter;
            }
        }

        public void Main()
        {
            // Create the context.
            var context = new RareShortestPathProbabilityEstimation();

            // Create the estimator.
            var estimator = new RareEventProbabilityEstimator()
            {
                PerformanceEvaluationParallelOptions = { MaxDegreeOfParallelism = 1 },
                SampleGenerationParallelOptions = { MaxDegreeOfParallelism = 1 }
            };

            // Set estimation parameters.
            double rarity = 0.1;
            int sampleSize = 1000;
            int finalSampleSize = 10000;

            // Solve the problem.
            var results = estimator.Estimate(
                context,
                rarity,
                sampleSize,
                finalSampleSize);

            // Show the results.
            Console.WriteLine("Under the nominal parameter:");
            Console.WriteLine(context.InitialParameter);
            Console.WriteLine("the estimated probability of observing");
            Console.WriteLine("a shortest path greater than 2.0 is:");
            Console.WriteLine(results.RareEventProbability);

            Console.WriteLine();
            Console.WriteLine("Details on iterations:");

            var info = DoubleMatrix.Dense(
                -1 + results.Parameters.Count,
                1 + results.Parameters.Last.Value.Count);

            info.SetColumnName(0, "Level");
            for (int j = 1; j &lt; info.NumberOfColumns; j++)
            {
                info.SetColumnName(j, "Param" + (j - 1).ToString());
            }

            int i = 0;
            foreach (var level in results.Levels)
            {
                info[i++, 0] = level;
            }

            var referenceParameters = results.Parameters.Skip(1).ToList();
            var paramIndexes = IndexCollection.Range(1, info.NumberOfColumns - 1);
            for (i = 0; i &lt; info.NumberOfRows; i++)
            {
                info[i, paramIndexes] = referenceParameters[i];
            }

            Console.WriteLine();
            Console.WriteLine(info);
        }
    }
}

// Executing method Main() produces the following output:
// 
// Under the nominal parameter:
// 0.25             0.4              0.1              0.3              0.2              
// 
// 
// the estimated probability of observing
// a shortest path greater than 2.0 is:
// 1.3393074373086156E-05
// 
// Details on iterations:
// 
// [Level]          [Param0]         [Param1]         [Param2]         [Param3]         [Param4]         
// 0.5701086        0.483438676      0.736805982      0.116523615      0.480972597      0.351788383      
// 1.00101664       0.778124668      1.03296697       0.139379404      0.611880162      0.445196897      
// 1.43228893       1.12582143       1.36538794       0.135058159      0.663007916      0.532245242      
// 1.90265032       1.4492325        1.59888059       0.114423424      0.800780865      0.682784109      
// 2                1.87183229       1.86492053       0.115583952      0.913234886      0.802443085      
// 
//</code></pre></div></div></p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDEEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="28258956.htm">RareEventProbabilityEstimationContext</a></td><td>
            Initializes a new instance of the 
            <span class="selflink">RareEventProbabilityEstimationContext</span> class 
            having the specified state dimension, threshold level,
            and boundedness.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDOEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="5F9977BF.htm">EliteSampleDefinition</a></td><td>
            Gets the elite sample definition for this context.
            <br />(Overrides <a href="229D566.htm">CrossEntropyContext<span id="LSTF877CA6A_8" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EliteSampleDefinition</a>)</td></tr><tr><td><a href="1FE43CBC.htm">InitialParameter</a></td><td>
            Gets the parameter initially exploited to sample from 
            the state-space of the system defined by this context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="94A47DB8.htm">RareEventPerformanceBoundedness</a></td><td>
            Gets a constant specifying if the rare event is a 
            set of states whose performances are lower or upper bounded 
            by the <a href="54AA3B2D.htm">ThresholdLevel</a> of this instance.
            </td></tr><tr><td><a href="6BFCB280.htm">StateDimension</a></td><td>
            Gets or sets the dimension of a vector representing a 
            system's state
            when 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executes in this
            context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="54AA3B2D.htm">ThresholdLevel</a></td><td>
            Get the threshold level applied to bound the 
            performances characterizing the rare event
            taken into account by this context.
            </td></tr><tr><td><a href="876F94ED.htm">TraceExecution</a></td><td>
            Gets or sets a value indicating whether the 
            execution of this context must be traced.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="B20663B.htm">GetLikelihoodRatio</a></td><td>
            Gets the likelihood ratio of a nominal density to 
            a given reference one, 
            evaluated at the specified sample point.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="62A32EE8.htm">OnExecutedIteration</a></td><td>
            Called after completion of each iteration of 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this
            context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="6D600898.htm">PartialSample</a></td><td>
            Draws the specified subset of a sample from a distribution 
            characterized by the given parameter, using the stated
            random number generator. Used when executing the sampling
            step of a  <a href="298402DD.htm">CrossEntropyProgram</a> running
            in this context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="1AF89526.htm">Performance</a></td><td>
            Defines the performance of a specified state
            in this context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr><tr><td><a href="E13209A1.htm">StopExecution</a></td><td>
            Specifies conditions 
            under which 
            a <a href="298402DD.htm">CrossEntropyProgram</a> executing in this 
            context should be considered 
            as terminated.
            <br />(Overrides <a href="CFD7B8A4.htm">CrossEntropyContext<span id="LSTF877CA6A_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>StopExecution(Int32, LinkedList<span id="LSTF877CA6A_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LSTF877CA6A_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, LinkedList<span id="LSTF877CA6A_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>DoubleMatrix<span id="LSTF877CA6A_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="BC1224CB.htm">UpdateLevel</a></td><td>
            Updates the performance level for the current iteration 
            of a  <a href="298402DD.htm">CrossEntropyProgram</a> executing in
            this context
            and determines the corresponding elite sample.
            <br />(Overrides <a href="52F57EB0.htm">CrossEntropyContext<span id="LSTF877CA6A_14" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UpdateLevel(DoubleMatrix, DoubleMatrix, EliteSampleDefinition, Double, DoubleMatrix<span id="LSTF877CA6A_15" data-languageSpecificText="cpp=%"></span>)</a>)</td></tr><tr><td><a href="4AE2243.htm">UpdateParameter</a></td><td>
            Updates the 
            sampling parameter attending the generation 
            of the sample in the next iteration of a 
             <a href="298402DD.htm">CrossEntropyProgram</a> executing in 
             this context.
            <br />(Inherited from <a href="F04A1B18.htm">CrossEntropyContext</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Bibliography</h2><div id="IDBACCSection"><div><span id="cite1">[1] </span><span class="bibliographyAuthor">Rubinstein, R.Y. and Kroese, D.P.</span>, <span class="bibliographyTitle">The Cross-Entropy Method, A unified Approach to Combinatorial Optimization, Monte-Carlo Simulation, and Machine Learning</span>, <span class="bibliographyPublisher">Springer, New York. (2004)</span></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="F249DE1E.htm">Novacta.Analytics.Advanced Namespace</a></div><div><a href="F04A1B18.htm">CrossEntropyContext</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Bibliography</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright (c) Giovanni Lafratta.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>