<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>JsonSerialization Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="JsonSerialization class" /><meta name="System.Keywords" content="Novacta.Analytics.JsonSerialization class" /><meta name="Microsoft.Help.F1" content="Novacta.Analytics.JsonSerialization" /><meta name="Microsoft.Help.Id" content="T:Novacta.Analytics.JsonSerialization" /><meta name="Description" content="Provides methods to support the JSON serialization of types defined in the namespace." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Novacta.Analytics" /><meta name="file" content="T_Novacta_Analytics_JsonSerialization" /><meta name="guid" content="T_Novacta_Analytics_JsonSerialization" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Novacta.Analytics Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a4ea75a2-ef53-4ea2-a7f4-b493a50f90b3.htm" title="Novacta.Analytics Documentation" tocid="roottoc">Novacta.Analytics Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Novacta_Analytics.htm" title="Novacta.Analytics Namespaces" tocid="G_Novacta_Analytics">Novacta.Analytics Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Novacta_Analytics.htm" title="Novacta.Analytics" tocid="N_Novacta_Analytics">Novacta.Analytics</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Novacta_Analytics_JsonSerialization.htm" title="JsonSerialization Class" tocid="T_Novacta_Analytics_JsonSerialization">JsonSerialization Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Novacta_Analytics_JsonSerialization.htm" title="JsonSerialization Methods" tocid="Methods_T_Novacta_Analytics_JsonSerialization">JsonSerialization Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>JsonSerialization Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Provides methods to support the JSON serialization of types
            defined in the <a href="N_Novacta_Analytics.htm">Novacta.Analytics</a> namespace.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LST652F931A_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST652F931A_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Novacta.Analytics<span id="LST652F931A_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST652F931A_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>JsonSerialization</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Novacta_Analytics.htm">Novacta.Analytics</a><br />
    <strong>Assembly:</strong>
   Novacta.Analytics (in Novacta.Analytics.dll) Version: 1.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">JsonSerialization</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">JsonSerialization</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">JsonSerialization</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">JsonSerialization</span> =  <span class="keyword">class</span> <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">JsonSerialization</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Novacta_Analytics_JsonSerialization_AddDataConverters.htm">AddDataConverters</a></td><td><div class="summary">
            Adds support to the JSON conversion of data types in the
            <a href="N_Novacta_Analytics.htm">Novacta.Analytics</a> namespace.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
            This class provides custom converters for the JSON serialization classes that 
            are defined in the <a href="https://docs.microsoft.com/dotnet/api/system.text.json" target="_blank">System.Text.Json</a> namespace. 
            </p><p>
            In particular, method <a href="M_Novacta_Analytics_JsonSerialization_AddDataConverters.htm">AddDataConverters(JsonSerializerOptions)</a> 
            adds to a given <a href="https://docs.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions" target="_blank">JsonSerializerOptions</a> instance
            the converters required for the JSON serialization of the following types: 
            <a href="T_Novacta_Analytics_DoubleMatrix.htm">DoubleMatrix</a>, <a href="T_Novacta_Analytics_ReadOnlyDoubleMatrix.htm">ReadOnlyDoubleMatrix</a>, 
            <a href="T_Novacta_Analytics_Category.htm">Category</a>,
            <a href="T_Novacta_Analytics_CategoricalVariable.htm">CategoricalVariable</a>, <a href="T_Novacta_Analytics_CategoricalEntailment.htm">CategoricalEntailment</a>, 
            and <a href="T_Novacta_Analytics_CategoricalDataSet.htm">CategoricalDataSet</a>.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
            In the following example, a matrix instance is serialized by writing to
            a JSON value. Hence the matrix is deserialized by reading from
            such value.
            </p><p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAACABA_tab1" class="codeSnippetContainerTabSingle">Conversion of a matrix to and from a JSON value.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Text.Json;

<span class="highlight-keyword">namespace</span> Novacta.Analytics.CodeExamples
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> JsonSerializationExample0  
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-comment">// Set matrix dimensions.</span>
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> numberOfRows = <span class="highlight-number">3</span>;
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> numberOfColumns = <span class="highlight-number">2</span>;

            <span class="highlight-comment">// Create the data as an array having lower bounds equal to zero.</span>
            <span class="highlight-keyword">var</span> data = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[numberOfRows, numberOfColumns]
                { { <span class="highlight-number">1</span>, <span class="highlight-number">2</span> },
                  { <span class="highlight-number">3</span>, <span class="highlight-number">4</span> },
                  { <span class="highlight-number">5</span>, <span class="highlight-number">6</span> } };

            <span class="highlight-comment">// Create the matrix. </span>
            <span class="highlight-keyword">var</span> serializedMatrix = <span class="highlight-class-name">DoubleMatrix</span>.Dense(data);

            <span class="highlight-comment">// Set the matrix name.</span>
            serializedMatrix.Name = <span class="highlight-literal">"MyData"</span>;

            <span class="highlight-comment">// Set names for some rows and columns.</span>
            serializedMatrix.SetRowName(<span class="highlight-number">0</span>, <span class="highlight-literal">"Row-0"</span>);
            serializedMatrix.SetRowName(<span class="highlight-number">2</span>, <span class="highlight-literal">"Row-2"</span>);
            serializedMatrix.SetColumnName(<span class="highlight-number">1</span>, <span class="highlight-literal">"Col-0"</span>);

            <span class="highlight-comment">// Show the matrix.</span>
            Console.WriteLine(<span class="highlight-literal">"Serialized matrix:"</span>);
            Console.WriteLine(serializedMatrix);
            Console.WriteLine();

            <span class="highlight-comment">// Add converters to a JsonSerializerOptions instance</span>
            <span class="highlight-comment">// to support the JSON serialization of data types</span>
            <span class="highlight-comment">// defined in the Novacta.Analytics namespace.</span>
            <span class="highlight-keyword">var</span> options = <span class="highlight-keyword">new</span> JsonSerializerOptions
            {
                WriteIndented = <span class="highlight-keyword">true</span>
            };
            <span class="highlight-class-name">JsonSerialization</span>.AddDataConverters(options);

            <span class="highlight-comment">// Create a JSON representation of the matrix.</span>
            <span class="highlight-comment">// The options previously defined must be passed as a parameter </span>
            <span class="highlight-comment">// to method Serialize of class System.Text.Json.JsonSerializer.</span>
            <span class="highlight-keyword">string</span> json = JsonSerializer.Serialize(
                serializedMatrix,
                <span class="highlight-keyword">typeof</span>(<span class="highlight-class-name">DoubleMatrix</span>),
                options);

            <span class="highlight-comment">// Show the JSON value representing the matrix.</span>
            Console.WriteLine(<span class="highlight-literal">"JSON matrix representation:"</span>);
            Console.WriteLine(json);
            Console.WriteLine();

            <span class="highlight-comment">// Create a matrix from the JSON representation.</span>
            <span class="highlight-comment">// The options previously defined must be passed as a parameter </span>
            <span class="highlight-comment">// to method Deserialize of class System.Text.Json.JsonSerializer.</span>
            <span class="highlight-keyword">var</span> deserializedMatrix = JsonSerializer.Deserialize&lt;<span class="highlight-class-name">DoubleMatrix</span>&gt;(
                json,
                options);

            <span class="highlight-comment">// Show the deserialized matrix.</span>
            Console.WriteLine(<span class="highlight-literal">"Deserialized matrix:"</span>);
            Console.WriteLine(deserializedMatrix);
        }
    }
}

<span class="highlight-comment">// Executing method Main() produces the following output:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Serialized matrix:</span>
<span class="highlight-comment">//                                   [Col-0]          </span>
<span class="highlight-comment">// [Row-0]          1                2                </span>
<span class="highlight-comment">//                  3                4                </span>
<span class="highlight-comment">// [Row-2]          5                6                </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// JSON matrix representation:</span>
<span class="highlight-comment">// {</span>
<span class="highlight-comment">//   "Implementor": {</span>
<span class="highlight-comment">//     "StorageScheme": 1,</span>
<span class="highlight-comment">//     "NumberOfRows": 3,</span>
<span class="highlight-comment">//     "NumberOfColumns": 2,</span>
<span class="highlight-comment">//     "Storage": [</span>
<span class="highlight-comment">//       1,</span>
<span class="highlight-comment">//       3,</span>
<span class="highlight-comment">//       5,</span>
<span class="highlight-comment">//       2,</span>
<span class="highlight-comment">//       4,</span>
<span class="highlight-comment">//       6</span>
<span class="highlight-comment">//     ]</span>
<span class="highlight-comment">//   },</span>
<span class="highlight-comment">//   "Name": "MyData",</span>
<span class="highlight-comment">//   "RowNames": {</span>
<span class="highlight-comment">//     "0": "Row-0",</span>
<span class="highlight-comment">//     "2": "Row-2"</span>
<span class="highlight-comment">//   },</span>
<span class="highlight-comment">//   "ColumnNames": {</span>
<span class="highlight-comment">//     "1": "Col-0"</span>
<span class="highlight-comment">//   }</span>
<span class="highlight-comment">// }</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Deserialized matrix:</span>
<span class="highlight-comment">//                                   [Col-0]          </span>
<span class="highlight-comment">// [Row-0]          1                2                </span>
<span class="highlight-comment">//                  3                4                </span>
<span class="highlight-comment">// [Row-2]          5                6                </span>
<span class="highlight-comment">// </span>
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAACABA");</script></p><p>
            In the following example, a categorical data set is converted to
            a JSON value. Hence the data set is instantiated by reading from
            such value.
            </p><p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAAABA_tab1" class="codeSnippetContainerTabSingle">Conversion of categorical data to and from a JSON value.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> System.Text.Json;

<span class="highlight-keyword">namespace</span> Novacta.Analytics.CodeExamples
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> JsonSerializationExample1  
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-comment">// Create the feature variables.</span>
            <span class="highlight-class-name">CategoricalVariable</span> f0 = <span class="highlight-keyword">new</span> <span class="highlight-class-name">CategoricalVariable</span>(<span class="highlight-literal">"F-0"</span>)
                {
                    { <span class="highlight-number">0</span>, <span class="highlight-literal">"A"</span> },
                    { <span class="highlight-number">1</span>, <span class="highlight-literal">"B"</span> },
                    { <span class="highlight-number">2</span>, <span class="highlight-literal">"C"</span> },
                    { <span class="highlight-number">3</span>, <span class="highlight-literal">"D"</span> },
                    { <span class="highlight-number">4</span>, <span class="highlight-literal">"E"</span> }
                };
            f0.SetAsReadOnly();

            <span class="highlight-class-name">CategoricalVariable</span> f1 = <span class="highlight-keyword">new</span> <span class="highlight-class-name">CategoricalVariable</span>(<span class="highlight-literal">"F-1"</span>)
                {
                    { <span class="highlight-number">0</span>, <span class="highlight-literal">"I"</span> },
                    { <span class="highlight-number">1</span>, <span class="highlight-literal">"II"</span> },
                    { <span class="highlight-number">2</span>, <span class="highlight-literal">"III"</span> },
                    { <span class="highlight-number">3</span>, <span class="highlight-literal">"IV"</span> }
                };
            f1.SetAsReadOnly();

            <span class="highlight-comment">// Create the response variable.</span>
            <span class="highlight-class-name">CategoricalVariable</span> r = <span class="highlight-keyword">new</span> <span class="highlight-class-name">CategoricalVariable</span>(<span class="highlight-literal">"R"</span>)
                {
                    <span class="highlight-number">0</span>,
                    <span class="highlight-number">1</span>,
                    <span class="highlight-number">2</span>
                };
            r.SetAsReadOnly();

            <span class="highlight-comment">// Create a categorical data set containing</span>
            <span class="highlight-comment">// observations about such variables.</span>
            List&lt;<span class="highlight-class-name">CategoricalVariable</span>&gt; variables =
                <span class="highlight-keyword">new</span> List&lt;<span class="highlight-class-name">CategoricalVariable</span>&gt;() { f0, f1, r };

            <span class="highlight-class-name">DoubleMatrix</span> data = <span class="highlight-class-name">DoubleMatrix</span>.Dense(
                <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[<span class="highlight-number">8</span>, <span class="highlight-number">3</span>] {
                    { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> },
                    { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> },
                    { <span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span> },
                    { <span class="highlight-number">1</span>, <span class="highlight-number">3</span>, <span class="highlight-number">2</span> },

                    { <span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> },
                    { <span class="highlight-number">3</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> },
                    { <span class="highlight-number">4</span>, <span class="highlight-number">2</span>, <span class="highlight-number">1</span> },
                    { <span class="highlight-number">4</span>, <span class="highlight-number">3</span>, <span class="highlight-number">1</span> } });

            <span class="highlight-class-name">CategoricalDataSet</span> serializedDataSet = <span class="highlight-class-name">CategoricalDataSet</span>.FromEncodedData(
                variables,
                data);

            <span class="highlight-comment">// Set the data set name.</span>
            serializedDataSet.Name = <span class="highlight-literal">"MyData"</span>;

            <span class="highlight-comment">// Add converters to a JsonSerializerOptions instance</span>
            <span class="highlight-comment">// to support the JSON serialization of data types</span>
            <span class="highlight-comment">// defined in the Novacta.Analytics namespace.</span>
            <span class="highlight-keyword">var</span> options = <span class="highlight-keyword">new</span> JsonSerializerOptions
            {
                WriteIndented = <span class="highlight-keyword">true</span>
            };
            <span class="highlight-class-name">JsonSerialization</span>.AddDataConverters(options);

            <span class="highlight-comment">// Create a JSON representation of the data set.</span>
            <span class="highlight-comment">// The options previously defined must be passed as a parameter </span>
            <span class="highlight-comment">// to method Serialize of class System.Text.Json.JsonSerializer.</span>
            <span class="highlight-keyword">string</span> json = JsonSerializer.Serialize(
                serializedDataSet,
                <span class="highlight-keyword">typeof</span>(<span class="highlight-class-name">CategoricalDataSet</span>),
                options);

            <span class="highlight-comment">// Show the JSON value representing the data set.</span>
            Console.WriteLine(<span class="highlight-literal">"JSON data set representation:"</span>);
            Console.WriteLine(json);
            Console.WriteLine();

            <span class="highlight-comment">// Create a data set from the JSON representation.</span>
            <span class="highlight-comment">// The options previously defined must be passed as a parameter </span>
            <span class="highlight-comment">// to method Deserialize of class System.Text.Json.JsonSerializer.</span>
            <span class="highlight-keyword">var</span> deserializedDataSet = JsonSerializer.Deserialize&lt;<span class="highlight-class-name">CategoricalDataSet</span>&gt;(
                json,
                options);

            <span class="highlight-comment">// Show the deserialized data set name.</span>
            Console.WriteLine(<span class="highlight-literal">"Deserialized data set name:"</span>);
            Console.WriteLine(deserializedDataSet.Name);
        }
    }
}

<span class="highlight-comment">// Executing method Main() produces the following output:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// JSON data set representation:</span>
<span class="highlight-comment">// {</span>
<span class="highlight-comment">//   "Variables": [</span>
<span class="highlight-comment">//     {</span>
<span class="highlight-comment">//       "Name": "F-0",</span>
<span class="highlight-comment">//       "Categories": [</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 0,</span>
<span class="highlight-comment">//           "Label": "A"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 1,</span>
<span class="highlight-comment">//           "Label": "B"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 2,</span>
<span class="highlight-comment">//           "Label": "C"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 3,</span>
<span class="highlight-comment">//           "Label": "D"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 4,</span>
<span class="highlight-comment">//           "Label": "E"</span>
<span class="highlight-comment">//         }</span>
<span class="highlight-comment">//       ],</span>
<span class="highlight-comment">//       "IsReadOnly": true</span>
<span class="highlight-comment">//     },</span>
<span class="highlight-comment">//     {</span>
<span class="highlight-comment">//       "Name": "F-1",</span>
<span class="highlight-comment">//       "Categories": [</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 0,</span>
<span class="highlight-comment">//           "Label": "I"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 1,</span>
<span class="highlight-comment">//           "Label": "II"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 2,</span>
<span class="highlight-comment">//           "Label": "III"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 3,</span>
<span class="highlight-comment">//           "Label": "IV"</span>
<span class="highlight-comment">//         }</span>
<span class="highlight-comment">//       ],</span>
<span class="highlight-comment">//       "IsReadOnly": true</span>
<span class="highlight-comment">//     },</span>
<span class="highlight-comment">//     {</span>
<span class="highlight-comment">//       "Name": "R",</span>
<span class="highlight-comment">//       "Categories": [</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 0,</span>
<span class="highlight-comment">//           "Label": "0"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 1,</span>
<span class="highlight-comment">//           "Label": "1"</span>
<span class="highlight-comment">//         },</span>
<span class="highlight-comment">//         {</span>
<span class="highlight-comment">//           "Code": 2,</span>
<span class="highlight-comment">//           "Label": "2"</span>
<span class="highlight-comment">//         }</span>
<span class="highlight-comment">//       ],</span>
<span class="highlight-comment">//       "IsReadOnly": true</span>
<span class="highlight-comment">//     }</span>
<span class="highlight-comment">//   ],</span>
<span class="highlight-comment">//   "Data": {</span>
<span class="highlight-comment">//     "Matrix": {</span>
<span class="highlight-comment">//       "Implementor": {</span>
<span class="highlight-comment">//         "StorageScheme": 1,</span>
<span class="highlight-comment">//         "NumberOfRows": 8,</span>
<span class="highlight-comment">//         "NumberOfColumns": 3,</span>
<span class="highlight-comment">//         "Storage": [</span>
<span class="highlight-comment">//           0,</span>
<span class="highlight-comment">//           0,</span>
<span class="highlight-comment">//           1,</span>
<span class="highlight-comment">//           1,</span>
<span class="highlight-comment">//           2,</span>
<span class="highlight-comment">//           3,</span>
<span class="highlight-comment">//           4,</span>
<span class="highlight-comment">//           4,</span>
<span class="highlight-comment">//           0,</span>
<span class="highlight-comment">//           1,</span>
<span class="highlight-comment">//           2,</span>
<span class="highlight-comment">//           3,</span>
<span class="highlight-comment">//           0,</span>
<span class="highlight-comment">//           1,</span>
<span class="highlight-comment">//           2,</span>
<span class="highlight-comment">//           3,</span>
<span class="highlight-comment">//           0,</span>
<span class="highlight-comment">//           0,</span>
<span class="highlight-comment">//           2,</span>
<span class="highlight-comment">//           2,</span>
<span class="highlight-comment">//           1,</span>
<span class="highlight-comment">//           1,</span>
<span class="highlight-comment">//           1,</span>
<span class="highlight-comment">//           1</span>
<span class="highlight-comment">//         ]</span>
<span class="highlight-comment">//       },</span>
<span class="highlight-comment">//       "Name": "MyData",</span>
<span class="highlight-comment">//       "RowNames": null,</span>
<span class="highlight-comment">//       "ColumnNames": null</span>
<span class="highlight-comment">//     }</span>
<span class="highlight-comment">//   },</span>
<span class="highlight-comment">//   "Name": "MyData"</span>
<span class="highlight-comment">// }</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Deserialized data set name:</span>
<span class="highlight-comment">// MyData</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAAABA");</script></p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Novacta_Analytics.htm">Novacta.Analytics Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) Giovanni Lafratta</p> </div></body></html>