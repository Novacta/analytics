<?xml version="1.0" encoding="utf-8"?>
<topic id="e6a1e4b5-02ef-4f97-9bd4-3bf049441535" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

	  <introduction>
		  <para>
			  Version 2.0.0 was released on date 2022-02-12.
		  </para>
	  </introduction>

	  <section>
		  <title>Changes in This Release</title>
		  <content>

			  <list class="bullet">
				  <listItem>
					  <para>
						  Added support for 
						  <codeEntityReference linkText="complex matrices">
						  T:Novacta.Analytics.ComplexMatrix
					  </codeEntityReference>.
					  </para>
				  </listItem>
				  <listItem>
					  <para>
						  Added matrix
						  <codeEntityReference linkText="singular value decompositions">
							  T:Novacta.Analytics.Advanced.SingularValueDecomposition
						  </codeEntityReference>
						  and
						  <codeEntityReference linkText="spectral decompositions">
							  T:Novacta.Analytics.Advanced.SpectralDecomposition
						  </codeEntityReference>						  
						  of symmetric/Hermitian matrices.
					  </para>
				  </listItem>
				  <listItem>
					  <para>
						  Fixed a bug where specific parameter values passed to method
					      <codeEntityReference qualifyHint="false" autoUpgrade="true">
							  M:Novacta.Analytics.Advanced.CrossEntropyProgram.Run(Novacta.Analytics.Advanced.CrossEntropyContext,System.Int32,System.Double)
						  </codeEntityReference>
						  would sometimes throw an
						  <externalLink>
							  <linkText>IndexOutOfRangeException</linkText>
							  <linkUri>https://docs.microsoft.com/dotnet/api/system.indexoutofrangeexception</linkUri>
						  </externalLink>.
					  </para>
				  </listItem>				  
				  <listItem>
					  <para>
						  <legacyBold>(Breaking)</legacyBold>
						  Indexers that avoid dense allocations, like 
						  <codeEntityReference qualifyHint="false" linkText ="this one">
							  P:Novacta.Analytics.DoubleMatrix.Item(Novacta.Analytics.IndexCollection,Novacta.Analytics.IndexCollection,System.Boolean)
						  </codeEntityReference>,						  
						  have been deprecated.
						  In the current release, they no longer try to minimize the 
						  memory working set, 
						  and values passed to parameter
						  <codeInline>avoidDenseAllocations</codeInline> are 
						  thoroughly ignored.
						  In future releases, these indexers will be removed from the public API.
					  </para>
				  </listItem>
				  <listItem>
					  <para>
						  <legacyBold>(Breaking)</legacyBold>
						  The
						  <externalLink>
							  <linkText>32-bit generation of the x86 architecture</linkText>
							  <linkUri>https://en.wikipedia.org/wiki/IA-32</linkUri>
						  </externalLink>
						  is no longer supported.
					  </para>
				  </listItem>
			  </list>

		  </content>
	  </section>

	  <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
